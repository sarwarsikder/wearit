{"version":3,"sources":["./src/app/refund/component/listing.component.ts","./src/app/refund/refund.service.ts","./src/app/refund/component/listing.html","./src/app/refund/refund.module.ts","./src/app/refund/refund.routing.ts"],"names":[],"mappings":"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","file":"refund-refund-module.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\r\nimport { RefundService } from '../refund.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastyService } from 'ng2-toasty';\r\n\r\n@Component({\r\n  selector: 'refund-listing',\r\n  templateUrl: './listing.html'\r\n})\r\nexport class ListingComponent implements OnInit {\r\n  public items = [];\r\n  public page: Number = 1;\r\n  public take: Number = 10;\r\n  public total: Number = 0;\r\n  public searchFields: any = {\r\n  };\r\n  public sortOption = {\r\n    sortBy: 'createdAt',\r\n    sortType: 'desc'\r\n  };\r\n\r\n  constructor(private router: Router, private refundService: RefundService, private toasty: ToastyService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.query();\r\n  }\r\n\r\n  query() {\r\n    this.refundService.search(Object.assign({\r\n      page: this.page,\r\n      take: this.take,\r\n      sort: `${this.sortOption.sortBy}`,\r\n      sortType: `${this.sortOption.sortType}`\r\n    }, this.searchFields))\r\n      .then(resp => {\r\n        this.items = resp.data.items;\r\n        this.total = resp.data.count;\r\n      })\r\n      .catch(() => alert('Something went wrong, please try again!'));\r\n  }\r\n\r\n  sortBy(field: string, type: string) {\r\n    this.sortOption.sortBy = field;\r\n    this.sortOption.sortType = type;\r\n    this.query();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { RestangularModule, Restangular } from 'ngx-restangular';\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\n@Injectable()\r\nexport class RefundService {\r\n  constructor(private restangular: Restangular) { }\r\n\r\n  create(data: any): Promise<any> {\r\n    return this.restangular.all('refundRequests').post(data).toPromise();\r\n  }\r\n\r\n  search(params: any): Promise<any> {\r\n    return this.restangular.one('refundRequests').get(params).toPromise();\r\n  }\r\n\r\n  findOne(id): Promise<any> {\r\n    return this.restangular.one('refundRequests', id).get().toPromise();\r\n  }\r\n}\r\n","export default \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-body table-responsive\\\">\\r\\n    <table class=\\\"table table-custom\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>\\r\\n            <a (click)=\\\"sortBy('orderDetail.productDetails.name', 'desc')\\\">Product</a>\\r\\n            <span *ngIf=\\\"sortOption.sortBy=='orderDetail.productDetails.name'\\\">\\r\\n              <a (click)=\\\"sortBy('orderDetail.productDetails.name', 'asc')\\\" *ngIf=\\\"sortOption.sortType=='desc'\\\"><i\\r\\n                  class=\\\"fa fa-caret-down\\\"></i></a>\\r\\n              <a (click)=\\\"sortBy('orderDetail.productDetails.name', 'desc')\\\" *ngIf=\\\"sortOption.sortType=='asc'\\\"><i\\r\\n                  class=\\\"fa fa-caret-up\\\"></i></a>\\r\\n            </span>\\r\\n          </th>\\r\\n          <th>\\r\\n            <a (click)=\\\"sortBy('reason', 'desc')\\\">Reason</a>\\r\\n            <span *ngIf=\\\"sortOption.sortBy=='reason'\\\">\\r\\n              <a (click)=\\\"sortBy('reason', 'asc')\\\" *ngIf=\\\"sortOption.sortType=='desc'\\\"><i class=\\\"fa fa-caret-down\\\"></i></a>\\r\\n              <a (click)=\\\"sortBy('reason', 'desc')\\\" *ngIf=\\\"sortOption.sortType=='asc'\\\"><i class=\\\"fa fa-caret-up\\\"></i></a>\\r\\n            </span>\\r\\n          </th>\\r\\n          <th>\\r\\n            <a (click)=\\\"sortBy('createdAt', 'desc')\\\">Created at</a>\\r\\n            <span *ngIf=\\\"sortOption.sortBy=='createdAt'\\\">\\r\\n              <a (click)=\\\"sortBy('createdAt', 'asc')\\\" *ngIf=\\\"sortOption.sortType=='desc'\\\"><i class=\\\"fa fa-caret-down\\\"></i></a>\\r\\n              <a (click)=\\\"sortBy('createdAt', 'desc')\\\" *ngIf=\\\"sortOption.sortType=='asc'\\\"><i class=\\\"fa fa-caret-up\\\"></i></a>\\r\\n            </span>\\r\\n          </th>\\r\\n          <th>\\r\\n            Actions\\r\\n          </th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr [hidden]=\\\"total !== 0\\\">\\r\\n          <td colspan=\\\"4\\\">\\r\\n            <p class=\\\"text-center text-danger\\\">There is no refunds yet..</p>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr *ngFor=\\\"let item of items, let i = index\\\">\\r\\n          <td>\\r\\n            <a [routerLink]=\\\"['/orders/view', item.orderDetailId ]\\\">\\r\\n              {{item?.orderDetail?.productDetails?.name}}\\r\\n            </a>\\r\\n          </td>\\r\\n          <td>{{item.reason}}</td>\\r\\n          <td>\\r\\n            <span>{{item.createdAt | date}}</span>\\r\\n          </td>\\r\\n          <td class=\\\"text-right\\\">\\r\\n            <a class=\\\"btn btn-sm btn-danger\\\" [routerLink]=\\\"['/orders/view', item.orderDetailId ]\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <div class=\\\"display-inline\\\" [hidden]=\\\"total < take\\\">\\r\\n      <div class=\\\"pull-right\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"total\\\" [(page)]=\\\"page\\\" [maxSize]=\\\"5\\\" [pageSize]=\\\"take\\\" (pageChange)=\\\"query()\\\"></ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { RefundRoutingModule } from './refund.routing';\r\n\r\nimport { ListingComponent} from './component/listing.component';\r\n\r\nimport { RefundService } from './refund.service';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    //our custom module\r\n    RefundRoutingModule,\r\n    NgbModule\r\n  ],\r\n  declarations: [\r\n    ListingComponent\r\n  ],\r\n  providers: [ RefundService ],\r\n  exports: []\r\n})\r\nexport class RefundModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ListingComponent } from './component/listing.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ListingComponent,\r\n    data: {\r\n      title: 'Refund management',\r\n      urls: [{ title: 'Orders', url: '/orders/list' }, { title: 'Refund' }]\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RefundRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}