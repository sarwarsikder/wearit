{"version":3,"sources":["./src/app/payment/components/payment/payment.component.ts","./src/app/payment/components/payment-history/history.component.ts","./src/app/payment/components/payment-success/payment-success.component.ts","./src/app/payment/components/payment-history/history.html","./src/app/payment/components/payment-upgrade/upgrade.html","./src/app/payment/payment.routing.ts","./src/app/payment/components/payment-upgrade/upgrade.component.ts","./src/app/payment/payment.module.ts","./src/app/payment/services/package.service.ts","./src/app/payment/services/payment.service.ts","./src/app/payment/components/payment-success/payment-success.html","./src/app/payment/components/payment/payment.html"],"names":[],"mappings":"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","file":"payment-payment-module.js","sourcesContent":["import { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { ToastyService } from 'ng2-toasty';\r\nimport { PaymentService } from '../../services/payment.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { StripeService, StripeCardComponent } from 'ngx-stripe';\r\nimport {\r\n  StripeCardElementOptions,\r\n  StripeElementsOptions\r\n} from '@stripe/stripe-js';\r\nimport * as _ from 'lodash';\r\nimport { SystemService } from '../../../shared/services';\r\n\r\n@Component({\r\n  templateUrl: './payment.html'\r\n})\r\nexport class PaymentComponent implements OnInit {\r\n\r\n  @Input() packageID: any;\r\n  @Input() packageName: any;\r\n  @Input() packagePrice: any;\r\n  @Input() packageDuration: any;\r\n  public userInfo: any = {};\r\n  public isSubmitted: any = false;\r\n\r\n  @ViewChild(StripeCardComponent) card: StripeCardComponent;\r\n  public cardHolderName: any = '';\r\n  public cardOptions: any = {};\r\n  // optional parameters\r\n  public elementsOptions: StripeElementsOptions = {\r\n    locale: 'en'\r\n  };\r\n\r\n  public stripeTest: FormGroup;\r\n  public stripeToken: any = null;\r\n  public paymentGateway: any;\r\n\r\n  constructor(private systemService: SystemService, private paymentService: PaymentService, private toasty: ToastyService,\r\n    private stripeService: StripeService, private fb: FormBuilder, public activeModal: NgbActiveModal) {\r\n    this.systemService.configs().then(res => this.paymentGateway = res.paymentGatewayConfig);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.stripeService.setKey(window.appConfig.stripeKey);\r\n    this.stripeTest = this.fb.group({\r\n      cardName: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  submit(frm: any) {\r\n    this.isSubmitted = true;\r\n    if (frm.invalid) {\r\n      return this.toasty.error('Please submit valid form');\r\n    }\r\n\r\n    if (!this.userInfo.paymentMethod) {\r\n      return this.toasty.error('Please select Payment Method!');\r\n    }\r\n\r\n    if (this.userInfo.paymentMethod === 'stripe') {\r\n      const name = this.stripeTest.get('cardName').value;\r\n      if (!name) {\r\n        return this.toasty.error('Please enter card holder name!');\r\n      }\r\n      this.stripeService\r\n        .createToken(this.card.getCard(), { name })\r\n        .subscribe(result => {\r\n          if (result.token) {\r\n            // Use the token to create a charge or a customer\r\n            // https://stripe.com/docs/charges\r\n            this.stripeToken = result.token.id;\r\n            this.doPost();\r\n          } else if (result.error) {\r\n            // Error creating the token\r\n            this.toasty.error('Something went wrong, please try again!');\r\n          }\r\n        });\r\n    } else {\r\n      this.doPost();\r\n    }\r\n  }\r\n\r\n  doPost() {\r\n    if (this.userInfo.paymentMethod === 'paypal') {\r\n      this.paymentService.request({\r\n        gateway: 'paypal',\r\n        service: 'shop-featured',\r\n        itemId: this.packageID\r\n      })\r\n        .then(transactionResp => {\r\n          window.location.href = transactionResp.data.redirectUrl;\r\n        })\r\n        .catch((err) => {\r\n          this.activeModal.close();\r\n          this.toasty.error('Something went wrong, please try again!');\r\n        });\r\n    } else if (this.userInfo.paymentMethod === 'stripe') {\r\n      this.paymentService.request({\r\n        gateway: 'stripe',\r\n        service: 'shop-featured',\r\n        itemId: this.packageID,\r\n        stripeToken: this.stripeToken\r\n      })\r\n        .then(res => {\r\n          this.activeModal.close();\r\n          window.location.href = '/payments/success';\r\n        })\r\n        .catch((err) => {\r\n          this.activeModal.close();\r\n          this.toasty.error('Something went wrong, please try again!');\r\n        });\r\n    } else {\r\n      this.activeModal.close();\r\n      window.location.href = '/payments/success';\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PackageService } from '../../services/package.service';\r\nimport { UtilService } from '../../../shared/services';\r\nimport { ToastyService } from 'ng2-toasty';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'payment-history',\r\n  templateUrl: './history.html'\r\n})\r\nexport class PaymentHistoryComponent implements OnInit {\r\n\r\n  public isLoading = false;\r\n  public packages = [];\r\n  public total: Number = 0;\r\n  public take = 10;\r\n  public page = 1;\r\n\r\n  constructor(\r\n    private packageService: PackageService,\r\n    private toasty: ToastyService,\r\n    private utilService: UtilService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.query();\r\n  }\r\n\r\n  query() {\r\n    this.utilService.setLoading(true);\r\n    this.isLoading = true;\r\n    const params = {\r\n      take: this.take,\r\n      page: this.page,\r\n      type: 'shop_featured'\r\n    };\r\n    this.packageService.invoices(params).then(resp => {\r\n      this.packages = resp.data.items;\r\n      this.total = resp.data.count;\r\n      this.utilService.setLoading(false);\r\n      this.isLoading = false;\r\n    }).catch(() => {\r\n      this.toasty.error('Something went wrong, please try again!');\r\n      this.utilService.setLoading(false);\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n\ttemplateUrl: './payment-success.html'\r\n})\r\nexport class PaymentSuccessComponent {\r\n\tconstructor() { }\r\n}\r\n","export default \"<div class=\\\"card\\\" *ngIf=\\\"!isLoading\\\">\\r\\n    <div class=\\\"card-body table-responsive\\\">\\r\\n      <table class=\\\"table\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>\\r\\n              Package name\\r\\n            </th>\\r\\n            <th>\\r\\n              Payment Gateway\\r\\n            </th>\\r\\n            <th>\\r\\n              Price\\r\\n            </th>\\r\\n            <th>\\r\\n              Transaction Id\\r\\n            </th>\\r\\n            <th>\\r\\n              Created At\\r\\n            </th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngIf=\\\"!total\\\">\\r\\n            <td colspan=\\\"5\\\">\\r\\n              <p class=\\\"text-center text-danger\\\">There is no items yet..</p>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr *ngFor=\\\"let item of packages, let i = index\\\">\\r\\n            <td>{{item?.products[0]?.description}}</td>\\r\\n            <td class=\\\"no-wrap\\\">\\r\\n              <span class=\\\"label label-primary\\\" *ngIf=\\\"item.paymentGateway === 'paypal'\\\">Paypal</span>\\r\\n              <span class=\\\"label label-warning\\\" *ngIf=\\\"item.paymentGateway === 'mygateglobal'\\\">Credit Card</span>\\r\\n            </td>\\r\\n            <td class=\\\"no-wrap\\\"><span class=\\\"label label-danger\\\">{{item?.price | currency}}</span></td>\\r\\n            <td>{{item?.transactionId}}</td>\\r\\n            <td>\\r\\n              <span>{{item.createdAt | date:'short'}}</span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div class=\\\"display-inline\\\" [hidden]=\\\"total < take\\\">\\r\\n      <div class=\\\"pull-right\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"total\\\" [(page)]=\\\"page\\\" [maxSize]=\\\"5\\\" [pageSize]=\\\"take\\\" (pageChange)=\\\"query()\\\"></ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\";","export default \"<div class=\\\"card card-body\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row text-center mb-4\\\">\\r\\n      <div class=\\\"col-md-12\\\" *ngIf=\\\"!total && !isLoading\\\">\\r\\n        <p class=\\\"text-center text-danger\\\">There is no items yet..</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\" *ngFor=\\\"let item of packages\\\">\\r\\n        <div class=\\\"card mb-4 shadow-sm\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            <h4 class=\\\"my-0 font-weight-normal\\\">{{item?.name}}</h4>\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <h1 class=\\\"card-title pricing-card-title\\\">{{item?.price | currency}}\\r\\n              <small class=\\\"text-muted\\\">/ {{item.numDays}}\\r\\n                <span *ngIf=\\\"item.numDays > 1\\\"> days</span>\\r\\n                <span *ngIf=\\\"item.numDays < 2\\\"> day</span>\\r\\n              </small>\\r\\n            </h1>\\r\\n            <div class=\\\"des-hover\\\">\\r\\n              {{item?.description | slice:0:100}}{{item?.description.length > 100 ? '...' : ''}}\\r\\n              <span>{{item?.description}}</span>\\r\\n            </div>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-lg btn-block btn-primary\\\" (click)=\\\"payment(item)\\\">Buy Package</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PaymentUpgradeComponent } from './components/payment-upgrade/upgrade.component';\r\nimport { PaymentHistoryComponent } from './components/payment-history/history.component';\r\nimport { PaymentSuccessComponent } from './components/payment-success/payment-success.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'history',\r\n    component: PaymentHistoryComponent,\r\n    data: {\r\n      title: 'Payments History',\r\n      urls: [{ title: 'Payment', url: '/payments/history' }, { title: 'Payments History' }]\r\n    }\r\n  },\r\n  {\r\n    path: 'upgrade',\r\n    component: PaymentUpgradeComponent,\r\n    data: {\r\n      title: 'Upgrade Featured Account',\r\n      urls: [{ title: 'Payment', url: '/payments/history' }, { title: 'Upgrade Featured Account' }]\r\n    }\r\n  },\r\n  {\r\n    path: 'success',\r\n    component: PaymentSuccessComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PaymentRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PackageService } from '../../services/package.service';\r\nimport { UtilService } from '../../../shared/services';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastyService } from 'ng2-toasty';\r\nimport { PaymentComponent } from '../payment/payment.component';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'packages-upgrade',\r\n  templateUrl: './upgrade.html'\r\n})\r\nexport class PaymentUpgradeComponent implements OnInit {\r\n\r\n  public isLoading = false;\r\n  public packages = [];\r\n  public page: Number = 1;\r\n  public take: Number = 10;\r\n  public total: Number = 0;\r\n  public searchText: any = '';\r\n  public sortOption: any = {\r\n    sortBy: 'ordering',\r\n    sortType: 'desc'\r\n  };\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private router: Router,\r\n    private packageService: PackageService,\r\n    private toasty: ToastyService,\r\n    private utilService: UtilService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.query();\r\n  }\r\n\r\n  query() {\r\n    this.utilService.setLoading(true);\r\n    this.isLoading = true;\r\n    let params = {\r\n      page: this.page,\r\n      take: this.take,\r\n      sort: `${this.sortOption.sortBy}`,\r\n      sortType: `${this.sortOption.sortType}`,\r\n      q: this.searchText\r\n    };\r\n\r\n    this.packageService.search(params).then(resp => {\r\n      this.packages = resp.data.items;\r\n      this.total = resp.data.count;\r\n      this.utilService.setLoading(false);\r\n      this.isLoading = false;\r\n    }).catch(() => {\r\n      this.toasty.error('Something went wrong, please try again!');\r\n      this.utilService.setLoading(false);\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  keyPress(event: any) {\r\n    if (event.charCode === 13) {\r\n      this.query();\r\n    }\r\n  }\r\n\r\n  sortBy(field: string, type: string) {\r\n    this.sortOption.sortBy = field;\r\n    this.sortOption.sortType = type;\r\n    this.query();\r\n  }\r\n\r\n  payment(item) {\r\n    if (item.status === 'refunded') {\r\n      return this.toasty.error('This order has been refunded.');\r\n    }\r\n    const ngbModalOptions: NgbModalOptions = {\r\n      backdrop: 'static',\r\n      keyboard: false\r\n    };\r\n    const modalRef = this.modalService.open(PaymentComponent, ngbModalOptions);\r\n    modalRef.componentInstance.packageID = item._id;\r\n    modalRef.componentInstance.packageName = item.name;\r\n    modalRef.componentInstance.packagePrice = item.price;\r\n    modalRef.componentInstance.packageDuration = item.numDays;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PaymentRoutingModule } from './payment.routing';\r\nimport { NgxStripeModule } from 'ngx-stripe';\r\n\r\nimport { PaymentHistoryComponent } from './components/payment-history/history.component';\r\nimport { PaymentUpgradeComponent } from './components/payment-upgrade/upgrade.component';\r\nimport { PaymentComponent } from './components/payment/payment.component';\r\nimport { PaymentSuccessComponent } from './components/payment-success/payment-success.component';\r\n\r\nimport { PackageService } from './services/package.service';\r\nimport { PaymentService } from './services/payment.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    PaymentRoutingModule,\r\n    NgbModule,\r\n    ReactiveFormsModule,\r\n    NgxStripeModule.forRoot()\r\n  ],\r\n  declarations: [\r\n    PaymentHistoryComponent,\r\n    PaymentUpgradeComponent,\r\n    PaymentComponent,\r\n    PaymentSuccessComponent\r\n  ],\r\n  providers: [\r\n    PackageService,\r\n    PaymentService\r\n  ],\r\n  exports: [],\r\n  entryComponents: [PaymentComponent]\r\n})\r\nexport class PaymentModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Restangular } from 'ngx-restangular';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport * as _ from 'lodash';\r\n\r\n@Injectable()\r\nexport class PackageService {\r\n\r\n  constructor(private restangular: Restangular) { }\r\n\r\n  search(params: any): Promise<any> {\r\n    return this.restangular.one('packages/featured').get(params).toPromise();\r\n  }\r\n\r\n  findOne(id): Promise<any> {\r\n    return this.restangular.one('packages/featured', id).get().toPromise();\r\n  }\r\n\r\n  invoices(params: any): Promise<any> {\r\n    return this.restangular.one('payment/invoices').get(params).toPromise();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Restangular } from 'ngx-restangular';\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\n@Injectable()\r\nexport class PaymentService {\r\n\r\n  constructor(private restangular: Restangular) { }\r\n\r\n  request(params: any): Promise<any> {\r\n    return this.restangular.one('payment/transactions/request').customPOST(Object.assign(params, {\r\n      redirectSuccessUrl: window.appConfig.paymentRedirectSuccessUrl,\r\n      redirectCancelUrl: window.appConfig.paymentRedirectCancelUrl\r\n    })).toPromise();\r\n  }\r\n}\r\n","export default \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"card card-body\\\">\\r\\n    <div class=\\\"text-center\\\">\\r\\n      <h1 class=\\\"display-3\\\" translate>Thank you!</h1>\\r\\n      <p class=\\\"lead\\\" translate>Your account has been upgrade successfully</p>\\r\\n      <hr>\\r\\n      <p class=\\\"lead\\\">\\r\\n        <a class=\\\"btn btn-primary btn-sm\\\" href=\\\"/payments/upgrade\\\" role=\\\"button\\\" translate>Continue upgrade</a>\\r\\n        &nbsp;&nbsp;&nbsp;\\r\\n        <a class=\\\"btn btn-primary btn-sm\\\" href=\\\"/starter\\\" role=\\\"button\\\" translate>Go to Dashboard</a>\\r\\n      </p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <form #frm=\\\"ngForm\\\" (submit)=\\\"submit(frm)\\\">\\r\\n      <div class=\\\"row\\\" [hidden]=\\\"!paymentGateway.stripe.enable && !paymentGateway.paypal.enable\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label translate>Payment Method</label>\\r\\n            <p>\\r\\n              <label class=\\\"form-check-inline\\\" [hidden]=\\\"!paymentGateway.paypal.enable\\\">\\r\\n                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"mode\\\" [value]=\\\"'paypal'\\\" [(ngModel)]=\\\"userInfo.paymentMethod\\\">\\r\\n                <span translate>Paypal</span>\\r\\n              </label>\\r\\n              <br>\\r\\n              <label [hidden]=\\\"!paymentGateway.stripe.enable\\\" class=\\\"form-check-inline\\\">\\r\\n                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"mode\\\" [value]=\\\"'stripe'\\\" [(ngModel)]=\\\"userInfo.paymentMethod\\\">\\r\\n                <span translate>Credit Card</span>\\r\\n              </label>\\r\\n            </p>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-12\\\" *ngIf=\\\"userInfo.paymentMethod === 'stripe'\\\">\\r\\n          <div [formGroup]=\\\"stripeTest\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label translate>Card holder name</label>\\r\\n              <input type=\\\"text\\\" formControlName=\\\"cardName\\\" placeholder=\\\"Jane Doe\\\" class=\\\"form-control\\\" name=\\\"cardHolderName\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <ngx-stripe-card [options]=\\\"cardOptions\\\" [elementsOptions]=\\\"elementsOptions\\\"></ngx-stripe-card>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label translate>Summary</label>\\r\\n            <p>\\r\\n              <strong translate>Package: </strong>\\r\\n              <span *ngIf=\\\"packagePrice\\\">{{packageName}}</span>\\r\\n            </p>\\r\\n            <p>\\r\\n              <strong translate>Duration: </strong>\\r\\n              <span class=\\\"badge badge-warning\\\" *ngIf=\\\"packagePrice\\\">{{packageDuration}} Days</span>\\r\\n            </p>\\r\\n            <p>\\r\\n              <strong translate>Price: </strong>\\r\\n              <span class=\\\"badge badge-danger\\\" *ngIf=\\\"packagePrice\\\">{{packagePrice | currency}}</span>\\r\\n            </p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\" [hidden]=\\\"paymentGateway.stripe.enable || paymentGateway.paypal.enable\\\">\\r\\n          <div class=\\\"form-group text-center\\\">\\r\\n            <h1 class=\\\"display-3\\\">Sorry!</h1>\\r\\n            <p class=\\\"lead\\\">The current system does not have any payment gateways available.</p>\\r\\n            <p class=\\\"lead\\\">Please come back later!</p>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          <hr>\\r\\n          <p class=\\\"text-right\\\">\\r\\n            <button class=\\\"btn btn-warning\\\" (click)=\\\"activeModal.close('Cancel')\\\" translate>Cancel</button>\\r\\n            &nbsp;\\r\\n            <button [hidden]=\\\"!paymentGateway.stripe.enable && !paymentGateway.paypal.enable\\\" class=\\\"btn btn-warning\\\"\\r\\n              type=\\\"submit\\\" translate>Check Out</button>\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\";"],"sourceRoot":"webpack:///"}