{"version":3,"sources":["./src/app/product/components/variants/product-variants.component.ts","./src/app/product/services/option.service.ts","./src/app/product/product.routing.ts","./src/app/product/components/products/listing.html","./src/app/product/services/category.service.ts","./src/app/product/components/variants/update-modal.html","./src/app/product/components/products/create.component.ts","./src/app/product/services/brand.service.ts","./src/app/product/services/variant.service.ts","./src/app/product/services/product.service.ts","./src/app/product/components/variants/variants.html","./src/app/product/components/products/listing.component.ts","./src/app/product/components/products/update.component.ts","./src/app/product/product.module.ts","./src/app/product/components/products/form.html"],"names":[],"mappings":"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","file":"default~product-product-module~starter-starter-module.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\r\nimport { ProductVariantService } from '../../services/variant.service';\r\nimport { OptionService } from '../../services/option.service';\r\nimport { ToastyService } from 'ng2-toasty';\r\nimport { NgbModal, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'variant-update-modal',\r\n  templateUrl: './update-modal.html'\r\n})\r\nexport class VariantUpdateModalComponent implements OnInit {\r\n  @Input() product: any;\r\n  @Input() variant: any;\r\n  public item: any;\r\n\r\n  constructor(public activeModal: NgbActiveModal, private variantService: ProductVariantService, private toasty: ToastyService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.item = Object.assign({}, this.variant);\r\n  }\r\n\r\n  update(frm: any) {\r\n    // TODO  - validate\r\n    if (frm.$invalid) {\r\n      return this.toasty.error('Something went wrong, please try again.');\r\n    }\r\n\r\n    if (this.item.price < this.item.salePrice || !this.item.price || !this.item.salePrice) {\r\n      return this.toasty.error('Invalid price!');\r\n    }\r\n    \r\n    if (this.item.stockQuantity < 0) {\r\n      return this.toasty.error('Invalid stock quantity!');\r\n    }\r\n    const data = _.pick(this.item, ['price', 'salePrice', 'stockQuantity', 'digitalFileId', 'options']);\r\n    this.variantService.update(this.product._id, this.variant._id, data)\r\n      .then((resp) => {\r\n        // TODO - close me\r\n        this.toasty.success('Updated successfully.');\r\n        this.activeModal.close(data);\r\n      });\r\n  }\r\n\r\n  selectMedia(media: any) {\r\n    this.item.digitalFileId = media._id;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'product-variants',\r\n  templateUrl: './variants.html'\r\n})\r\nexport class ProductVariantsComponent implements OnInit {\r\n  @Input()\r\n  public product: any = {};\r\n  public page: any = 1;\r\n  public items: any = [];\r\n  public total: any = 0;\r\n  public newVariant: any = {\r\n    options: [\r\n      {\r\n        optionKey: '',\r\n        key: '',\r\n        value: '',\r\n        displayText: ''\r\n      }\r\n    ],\r\n    price: 0,\r\n    salePrice: 0,\r\n    stockQuantity: 1000\r\n  };\r\n  public optionKey: any = '';\r\n  public detailOption: any = {};\r\n  public options: any = [];\r\n  public option: any = {};\r\n  public menuOptions: any = [];\r\n  public newOption: any = {\r\n  };\r\n\r\n  constructor(private variantService: ProductVariantService, private toasty: ToastyService,\r\n    private modalService: NgbModal, private optionService: OptionService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.query();\r\n  }\r\n\r\n  query() {\r\n    this.variantService.search(this.product._id, {\r\n      page: this.page\r\n    })\r\n      .then(resp => {\r\n        this.items = resp.data.items;\r\n        this.total = resp.data.count;\r\n      });\r\n  }\r\n\r\n  addNewOption(item) {\r\n    if (!this.newOption.key && !this.newOption.displayText && !this.newOption.value) {\r\n      return this.toasty.error('Please enter option');\r\n    }\r\n    this.newOption.optionKey = item.options[0].optionKey;\r\n    delete item.options[0].isNew;\r\n    delete this.newOption.isNew;\r\n    item.options.push(this.newOption);\r\n    this.variantService.update(this.product._id, item._id, item)\r\n      .then(resp => {\r\n        this.newOption = {};\r\n        this.toasty.success('Added new option successfully.');\r\n      })\r\n      .catch(err => this.toasty.error(err.data.message || 'Something went wrong, please try again.'));\r\n  }\r\n\r\n  removeOption(item, i) {\r\n    if (item.options.length === 1) {\r\n      return this.toasty.error('Options length must be at least 1.');\r\n    }\r\n    if (window.confirm('Are you you to remove this option?')) {\r\n      item.options.splice(i, 1);\r\n      this.variantService.update(this.product._id, item._id, item).then((resp) => {\r\n        this.toasty.success('Removed option successfully.');\r\n      })\r\n        .catch(err => this.toasty.error(err.data.data.message || 'Something went wrong, please try again.'));\r\n    }\r\n  }\r\n\r\n  openOption(opt) {\r\n    opt.isNew = true;\r\n  }\r\n\r\n  closeOption(opt) {\r\n    opt.isNew = false;\r\n  }\r\n\r\n  loadOptions() {\r\n    this.optionService.search({ optionKey: this.optionKey }).then((resp) => {\r\n      this.options = resp.data.items;\r\n    })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  selectOptionKey(item) {\r\n    this.menuOptions = item.options;\r\n    this.newVariant.options[0].optionKey = item.key;\r\n  }\r\n\r\n  selectOption(item) {\r\n    this.newVariant.options[0].key = item.key;\r\n    this.newVariant.options[0].displayText = item.displayText;\r\n  }\r\n\r\n  create() {\r\n    if (!this.newVariant.price || this.newVariant.price < 0) {\r\n      return this.toasty.error('Price value is invalid.');\r\n    }\r\n\r\n    if (!this.newVariant.salePrice || this.newVariant.salePrice < 0) {\r\n      return this.toasty.error('Sale price value is invalid.');\r\n    }\r\n\r\n    if (!this.newVariant.stockQuantity || this.newVariant.stockQuantity < 0) {\r\n      return this.toasty.error('Stock quantity value is invalid.');\r\n    }\r\n\r\n    if (!this.newVariant.options[0].key || !this.newVariant.options[0].displayText || !this.newVariant.options[0].value) {\r\n      return this.toasty.error('Please fill out all fields.');\r\n    }\r\n\r\n    this.newVariant.options[0].optionKey = this.newVariant.options[0].key;\r\n    this.variantService.create(this.product._id, this.newVariant)\r\n      .then(resp => {\r\n        // TODO - push media item?\r\n        this.items.unshift(resp.data);\r\n        this.newVariant.options[0] = {};\r\n        this.toasty.success('Added new variant successfully.');\r\n      })\r\n      .catch(err => this.toasty.error(err.data.message));\r\n\r\n  }\r\n\r\n  remove(variantId: string, index) {\r\n    if (window.confirm('Are you you to remove this variant?')) {\r\n      this.variantService.remove(this.product._id, variantId).then((resp) => {\r\n        this.items.splice(index, 1);\r\n        this.toasty.success('Removed item successfully.')\r\n      })\r\n        .catch(err => this.toasty.error(err.data.data.message));\r\n    }\r\n  }\r\n\r\n  update(item: any, index: any) {\r\n    const modalRef = this.modalService.open(VariantUpdateModalComponent, {\r\n      size: 'lg'\r\n    });\r\n\r\n    modalRef.componentInstance.variant = item;\r\n    modalRef.componentInstance.product = this.product;\r\n    modalRef.result.then(result => (this.items[index] = result), () => (null));\r\n  }\r\n\r\n  selectMedia(media: any) {\r\n    this.newVariant.digitalFileId = media._id;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { RestangularModule, Restangular } from 'ngx-restangular';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport * as _ from 'lodash';\r\n\r\n@Injectable()\r\nexport class OptionService {\r\n  constructor(private restangular: Restangular) { }\r\n  search(params: any): Promise<any> {\r\n    return this.restangular.one('products/options').get(params).toPromise();\r\n  }\r\n\r\n  findOne(id): Promise<any> {\r\n    return this.restangular.one('products/options', id).get().toPromise();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProductCreateComponent } from './components/products/create.component';\r\nimport { ProductUpdateComponent } from './components/products/update.component';\r\nimport { ProductsComponent } from './components/products/listing.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'list',\r\n    component: ProductsComponent,\r\n    data: {\r\n      title: 'Product manager',\r\n      urls: [{ title: 'Products', url: '/products/list' }]\r\n    }\r\n  },\r\n  {\r\n    path: 'create',\r\n    component: ProductCreateComponent,\r\n    data: {\r\n      title: 'Product manager',\r\n      urls: [{ title: 'Products', url: '/products/list' }, { title: 'Create', url: '/products/create' }]\r\n    }\r\n  },\r\n  {\r\n    path: 'update/:id',\r\n    component: ProductUpdateComponent,\r\n    data: {\r\n      title: 'Product manager',\r\n      urls: [{ title: 'Products', url: '/products/list' }, { title: 'Update', url: '/products/update' }]\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProductRoutingModule { }\r\n","export default \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-body table-responsive\\\">\\r\\n    <div class=\\\"row prod-action\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <a class=\\\"btn btn-danger button-custom\\\" href=\\\"../../../../assets/Sample.csv\\\" download><i class=\\\"fa fa-file\\\"></i>\\r\\n          Sample File</a>\\r\\n          <a class=\\\"btn btn-danger button-custom\\\" (click)=\\\"exportCSV()\\\" style=\\\"color: #fff\\\"><i class=\\\"fa fa-cloud-download\\\"></i>\\r\\n            Export Data</a>\\r\\n            <a class=\\\"btn btn-danger button-custom\\\">\\r\\n              <span (click)=\\\"openFile()\\\" style=\\\"color: #fff\\\"><i class=\\\"fa fa-cloud-upload\\\"></i> Import Data</span>\\r\\n              <div class=\\\"import-button\\\" *ngIf=\\\"showImport\\\">\\r\\n                <file-upload [options]=\\\"importOptions\\\"></file-upload>\\r\\n              </div>\\r\\n            </a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <table class=\\\"table table-custom\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th class=\\\"min-w-40\\\">\\r\\n            Image\\r\\n          </th>\\r\\n          <th class=\\\"min-w-180\\\">\\r\\n            <a (click)=\\\"sortBy('name', 'desc')\\\">Name</a>\\r\\n            <span *ngIf=\\\"sortOption.sortBy=='name'\\\">\\r\\n              <a (click)=\\\"sortBy('name', 'asc')\\\" *ngIf=\\\"sortOption.sortType=='desc'\\\"><i class=\\\"fa fa-caret-down\\\"></i></a>\\r\\n              <a (click)=\\\"sortBy('name', 'desc')\\\" *ngIf=\\\"sortOption.sortType=='asc'\\\"><i class=\\\"fa fa-caret-up\\\"></i></a>\\r\\n            </span>\\r\\n          </th>\\r\\n          <th>\\r\\n            <a (click)=\\\"sortBy('category.name', 'desc')\\\">Category</a>\\r\\n            <span *ngIf=\\\"sortOption.sortBy=='category.name'\\\">\\r\\n              <a (click)=\\\"sortBy('category.name', 'asc')\\\" *ngIf=\\\"sortOption.sortType=='desc'\\\"><i class=\\\"fa fa-caret-down\\\"></i></a>\\r\\n              <a (click)=\\\"sortBy('category.name', 'desc')\\\" *ngIf=\\\"sortOption.sortType=='asc'\\\"><i class=\\\"fa fa-caret-up\\\"></i></a>\\r\\n            </span>\\r\\n          </th>\\r\\n          <th>\\r\\n            <a (click)=\\\"sortBy('featured', 'desc')\\\">Feature</a>\\r\\n            <span *ngIf=\\\"sortOption.sortBy=='featured'\\\">\\r\\n              <a (click)=\\\"sortBy('featured', 'asc')\\\" *ngIf=\\\"sortOption.sortType=='desc'\\\"><i class=\\\"fa fa-caret-down\\\"></i></a>\\r\\n              <a (click)=\\\"sortBy('featured', 'desc')\\\" *ngIf=\\\"sortOption.sortType=='asc'\\\"><i class=\\\"fa fa-caret-up\\\"></i></a>\\r\\n            </span>\\r\\n          </th>\\r\\n          <th>\\r\\n            <a (click)=\\\"sortBy('hot', 'desc')\\\">Hot</a>\\r\\n            <span *ngIf=\\\"sortOption.sortBy=='featured'\\\">\\r\\n              <a (click)=\\\"sortBy('hot', 'asc')\\\" *ngIf=\\\"sortOption.sortType=='desc'\\\"><i class=\\\"fa fa-caret-down\\\"></i></a>\\r\\n              <a (click)=\\\"sortBy('hot', 'desc')\\\" *ngIf=\\\"sortOption.sortType=='asc'\\\"><i class=\\\"fa fa-caret-up\\\"></i></a>\\r\\n            </span>\\r\\n          </th>\\r\\n          <th>\\r\\n            <a (click)=\\\"sortBy('bestSell', 'desc')\\\">Best Sell</a>\\r\\n            <span *ngIf=\\\"sortOption.sortBy=='bestSell'\\\">\\r\\n              <a (click)=\\\"sortBy('bestSell', 'asc')\\\" *ngIf=\\\"sortOption.sortType=='desc'\\\"><i class=\\\"fa fa-caret-down\\\"></i></a>\\r\\n              <a (click)=\\\"sortBy('bestSell', 'desc')\\\" *ngIf=\\\"sortOption.sortType=='asc'\\\"><i class=\\\"fa fa-caret-up\\\"></i></a>\\r\\n            </span>\\r\\n          </th>\\r\\n          <th>\\r\\n            <a (click)=\\\"sortBy('type', 'desc')\\\">Type</a>\\r\\n            <span *ngIf=\\\"sortOption.sortBy=='type'\\\">\\r\\n              <a (click)=\\\"sortBy('type', 'asc')\\\" *ngIf=\\\"sortOption.sortType=='desc'\\\"><i class=\\\"fa fa-caret-down\\\"></i></a>\\r\\n              <a (click)=\\\"sortBy('type', 'desc')\\\" *ngIf=\\\"sortOption.sortType=='asc'\\\"><i class=\\\"fa fa-caret-up\\\"></i></a>\\r\\n            </span>\\r\\n          </th>\\r\\n          <th>\\r\\n            <a (click)=\\\"sortBy('isActive', 'desc')\\\">Active</a>\\r\\n            <span *ngIf=\\\"sortOption.sortBy=='isActive'\\\">\\r\\n              <a (click)=\\\"sortBy('isActive', 'asc')\\\" *ngIf=\\\"sortOption.sortType=='desc'\\\"><i class=\\\"fa fa-caret-down\\\"></i></a>\\r\\n              <a (click)=\\\"sortBy('isActive', 'desc')\\\" *ngIf=\\\"sortOption.sortType=='asc'\\\"><i class=\\\"fa fa-caret-up\\\"></i></a>\\r\\n            </span>\\r\\n          </th>\\r\\n          <th>\\r\\n            <a (click)=\\\"sortBy('createdAt', 'desc')\\\">Created at</a>\\r\\n            <span *ngIf=\\\"sortOption.sortBy=='createdAt'\\\">\\r\\n              <a (click)=\\\"sortBy('createdAt', 'asc')\\\" *ngIf=\\\"sortOption.sortType=='desc'\\\"><i class=\\\"fa fa-caret-down\\\"></i></a>\\r\\n              <a (click)=\\\"sortBy('createdAt', 'desc')\\\" *ngIf=\\\"sortOption.sortType=='asc'\\\"><i class=\\\"fa fa-caret-up\\\"></i></a>\\r\\n            </span>\\r\\n          </th>\\r\\n          <th>\\r\\n            Actions\\r\\n          </th>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th colspan=\\\"10\\\">\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <input class=\\\"form-control\\\" [(ngModel)]=\\\"searchText\\\" placeholder=\\\"search...\\\" (keypress)=\\\"keyPress($event)\\\" />\\r\\n              <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary fa fa-search\\\" (click)=\\\"query()\\\" type=\\\"button\\\"></button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </th>\\r\\n          \\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngIf=\\\"!total && !isLoading\\\">\\r\\n          <td colspan=\\\"10\\\">\\r\\n            <p class=\\\"text-center text-danger\\\">There is no items yet..</p>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr *ngFor=\\\"let item of items, let i = index\\\">\\r\\n          <td class=\\\"min-w-40\\\">\\r\\n            <img *ngIf=\\\"item.mainImage\\\" [src]=\\\"item?.mainImage?.thumbUrl\\\" class=\\\"image-responsive\\\" style=\\\"width:40px\\\" />\\r\\n          </td>\\r\\n          <td>{{item.name}}</td>\\r\\n          <td><span class=\\\"label label-warning\\\" *ngIf=\\\"item.category && item.category.name\\\">{{item.category?.name}}</span></td>\\r\\n          <td>\\r\\n            <span class=\\\"label label-success\\\" *ngIf=\\\"item.featured\\\">Y</span>\\r\\n            <span class=\\\"label label-warning\\\" *ngIf=\\\"!item.featured\\\">N</span>\\r\\n          </td>\\r\\n          <td>\\r\\n            <span class=\\\"label label-success\\\" *ngIf=\\\"item.hot\\\">Y</span>\\r\\n            <span class=\\\"label label-warning\\\" *ngIf=\\\"!item.hot\\\">N</span>\\r\\n          </td>\\r\\n          <td>\\r\\n            <span class=\\\"label label-success\\\" *ngIf=\\\"item.bestSell\\\">Y</span>\\r\\n            <span class=\\\"label label-warning\\\" *ngIf=\\\"!item.bestSell\\\">N</span>\\r\\n          </td>\\r\\n          <td>\\r\\n            <span class=\\\"label label-primary\\\" *ngIf=\\\"item.type === 'physical'\\\">Physical</span>\\r\\n            <span class=\\\"label label-danger\\\" *ngIf=\\\"item.type === 'digital'\\\">Digital</span>\\r\\n          </td>\\r\\n          <td>\\r\\n            <span class=\\\"label label-success\\\" *ngIf=\\\"item.isActive\\\">Y</span>\\r\\n            <span class=\\\"label label-warning\\\" *ngIf=\\\"!item.isActive\\\">N</span>\\r\\n          </td>\\r\\n          <td>\\r\\n            <span>{{item.createdAt | date}}</span>\\r\\n          </td>\\r\\n          <td>\\r\\n            <a class=\\\"btn btn-sm btn-danger\\\" [routerLink]=\\\"['/products/update', item?._id ]\\\">\\r\\n              <i style=\\\"color: #fff;\\\" class=\\\"fa fa-pencil\\\"></i>\\r\\n            </a>&nbsp;\\r\\n            <a class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"remove(item?._id, i)\\\">\\r\\n              <i class=\\\"fa fa-trash\\\"></i>\\r\\n            </a>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <div class=\\\"display-inline\\\" [hidden]=\\\"total < take\\\">\\r\\n      <div class=\\\"pull-right\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"total\\\" [(page)]=\\\"page\\\" [maxSize]=\\\"5\\\" [pageSize]=\\\"take\\\" (pageChange)=\\\"query()\\\"></ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { RestangularModule, Restangular } from 'ngx-restangular';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport * as _ from 'lodash';\r\n\r\n@Injectable()\r\nexport class ProductCategoryService {\r\n  constructor(private restangular: Restangular) { }\r\n  tree(): Promise<any> {\r\n    return this.restangular.one('products/categories', 'tree').get().toPromise();\r\n  }\r\n\r\n  findOne(id): Promise<any> {\r\n    return this.restangular.one('products/categories', id).get().toPromise();\r\n  }\r\n\r\n  prettyPrint(tree: any, char: string = '', results: any = []) {\r\n    tree.forEach(item => {\r\n      item.name = `${char}${item.name}`;\r\n      results.push(item);\r\n      if (item.children && item.children.length) {\r\n        this.prettyPrint(item.children, `${char}__`, results);\r\n      }\r\n    });\r\n\r\n    return results;\r\n  }\r\n}\r\n","export default \"<div class=\\\"modal-header\\\">\\r\\n  <h4 class=\\\"modal-title\\\">Update variant</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Close')\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <form (submit)=\\\"update(frm)\\\" #frm=\\\"ngForm\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\" *ngIf=\\\"product.type === 'digital'\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Digital File <media-select (onSelect)=\\\"selectMedia($event)\\\"></media-select></label>\\r\\n          <img src=\\\"assets/images/media-exist.png\\\" width=\\\"45px\\\" *ngIf=\\\"item.digitalFileId\\\">\\r\\n          <img src=\\\"assets/images/nofile-available.png\\\" width=\\\"45px\\\" *ngIf=\\\"!item.digitalFileId\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Price</label>\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"price\\\" placeholder=\\\"100\\\" [(ngModel)]=\\\"item.price\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Sale Price</label>\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"salePrice\\\" placeholder=\\\"100\\\" [(ngModel)]=\\\"item.salePrice\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Stock quantity</label>\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"stock\\\" placeholder=\\\"100\\\" [(ngModel)]=\\\"item.stockQuantity\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>&nbsp;</label>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Update</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { ProductCategoryService } from '../../services/category.service';\r\nimport { ProductService } from '../../services/product.service';\r\nimport { LocationService } from '../../../shared/services';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ToastyService } from 'ng2-toasty';\r\nimport * as _ from 'lodash';\r\nimport { Observable, of } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map, tap, switchMap } from 'rxjs/operators';\r\nimport { BrandService } from '../../services/brand.service';\r\n\r\n@Component({\r\n  selector: 'product-create',\r\n  templateUrl: './form.html'\r\n})\r\nexport class ProductCreateComponent implements OnInit {\r\n  public product: any = {\r\n    name: '',\r\n    description: '',\r\n    specifications: [],\r\n    mainImage: null,\r\n    metaSeo: {\r\n      keywords: '',\r\n      description: ''\r\n    },\r\n    type: 'physical',\r\n    categoryId: '',\r\n    isActive: true,\r\n    freeShip: false,\r\n    featured: false,\r\n    hot: false,\r\n    bestSell: false,\r\n    stockQuantity: 0,\r\n    price: 0,\r\n    salePrice: 0,\r\n    vat: 0,\r\n    restrictFreeShipAreas: [],\r\n    restrictCODAreas: [],\r\n    sizeChart: null\r\n  };\r\n  public isSubmitted: any = false;\r\n  public tree: any = [];\r\n  public countries: any = [];\r\n  public states: any = [];\r\n  public cities: any = [];\r\n  public zipCode: any = '';\r\n  public freeCountry: any;\r\n  public freeState: any;\r\n  public freeCity: any;\r\n  public newSpecification: any = {\r\n    key: '',\r\n    value: ''\r\n  };\r\n  public imageUrl: string = '';\r\n  public images: any = [];\r\n  public mainImage: string = '';\r\n  public tab = 'info';\r\n  public freeShipAreas: any = [];\r\n  public dealDate: any;\r\n  public imagesOptions: any = {\r\n    multiple: true\r\n  };\r\n\r\n  public brand: any;\r\n  public searching: any = false;\r\n  public searchFailed: any = false;\r\n  public fileType: any = '';\r\n  public fileOptions: any = {};\r\n  public sizeChartUrl: any = '';\r\n\r\n  // formatter_brand = (x: {\r\n  //   name: string\r\n  // }) => {\r\n  //\r\n  // }\r\n\r\n  formatter_brand = (x: { name: string }) => x.name;\r\n\r\n  search_brand = (text$: Observable<string>) =>\r\n      text$.pipe(\r\n          debounceTime(500),\r\n          distinctUntilChanged(),\r\n          tap(() => this.searching = true),\r\n          switchMap(term =>\r\n              this.brandService.search({ name: term }).then((res) => {\r\n                if (res) {\r\n                  this.searchFailed = false;\r\n                  this.searching = false;\r\n                  return res.data.items;\r\n                }\r\n                this.searchFailed = true;\r\n                this.searching = false;\r\n                return of([]);\r\n              })\r\n          )\r\n      )\r\n\r\n  constructor(private router: Router, private categoryService: ProductCategoryService, private brandService: BrandService,\r\n    private productService: ProductService, private toasty: ToastyService, private location: LocationService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fileOptions = {\r\n      isDigital: true,\r\n      url: window.appConfig.apiBaseUrl + '/media/files',\r\n      onFinish: (resp) => {\r\n        if (resp.data.mimeType.indexOf('zip') > -1) {\r\n          this.fileType = 'zip';\r\n        } else if (resp.data.mimeType.indexOf('rar') > -1) {\r\n          this.fileType = 'rar';\r\n        } else if (resp.data.mimeType.indexOf('pdf') > -1) {\r\n          this.fileType = 'pdf';\r\n        } else {\r\n          this.fileType = 'file';\r\n        }\r\n        this.product.digitalFileId = resp.data._id;\r\n        this.product.digitalFile = resp.data;\r\n      }\r\n    };\r\n    this.location.countries().then((resp) => {\r\n      this.countries = resp.data;\r\n    });\r\n\r\n    this.categoryService.tree()\r\n      .then(resp => (this.tree = this.categoryService.prettyPrint(resp.data)));\r\n\r\n  }\r\n\r\n  submit(frm: any) {\r\n    this.isSubmitted = true;\r\n    if (frm.invalid) {\r\n      return this.toasty.error('Form is invalid, please try again.');\r\n    }\r\n\r\n    if (this.product.salePrice > this.product.price || this.product.salePrice <= 0 || this.product.price <= 0) {\r\n      return this.toasty.error('Price or sale price is invalid.');\r\n    }\r\n\r\n    if (this.product.dailyDeal && this.dealDate) {\r\n      this.product.dealTo = new Date(this.dealDate.year, this.dealDate.month, this.dealDate.day).toUTCString();\r\n    }\r\n\r\n    if (this.product.brand) {\r\n      this.product.brandId = this.product.brand._id;\r\n    }\r\n\r\n    if (this.product.type === 'digital' && !this.product.digitalFileId) {\r\n      return this.toasty.error('Please select Digital file path!');\r\n    }\r\n\r\n    this.freeShipAreas.forEach((item) => {\r\n      const data = _.pick(item, ['areaType', 'value', 'name']);\r\n      this.product.restrictFreeShipAreas.push(data);\r\n    });\r\n    this.product.images = this.images.map(i => i._id);\r\n    this.product.mainImage = this.mainImage || null;\r\n    this.productService.create(this.product)\r\n      .then(() => {\r\n        this.toasty.success('Product has been created');\r\n        this.router.navigate(['/products/list']);\r\n      }, err => this.toasty.error(err.data.message || 'Something went wrong!'));\r\n  }\r\n\r\n  changeAlias() {\r\n    this.product.alias = this.product.name.split(' ').join('-');;\r\n  }\r\n\r\n  addSpecification() {\r\n    if (!this.newSpecification.value.trim()) {\r\n      return this.toasty.error('Please enter specification value');\r\n    }\r\n    this.product.specifications.push(this.newSpecification);\r\n    this.newSpecification = { key: '', value: '' };\r\n  }\r\n\r\n  selectImage(media: any) {\r\n    // this.product.mainImage = media._id;\r\n    // this.imageUrl = media.fileUrl;\r\n    if (media.type !== 'photo') {\r\n      return this.toasty.error('Please select image!');\r\n    }\r\n\r\n    this.images.push(media);\r\n  }\r\n\r\n  // selectDigital(media: any) {\r\n  //   this.product.digitalFileId = media._id;\r\n  //   this.product.digitalFile = media;\r\n  //   if (media.mimeType.indexOf('image') === 0) {\r\n  //     this.fileType = 'image';\r\n  //   } else if (media.mimeType.indexOf('audio') === 0) {\r\n  //     this.fileType = 'audio';\r\n  //   } else if (media.mimeType.indexOf('video') === 0) {\r\n  //     this.fileType = 'video';\r\n  //   } else {\r\n  //     this.fileType = 'file';\r\n  //   }\r\n  // }\r\n\r\n  setMain(media: any) {\r\n    this.mainImage = media._id;\r\n  }\r\n\r\n  removeImage(media: any, index: any) {\r\n    if (media._id === this.mainImage) {\r\n      this.mainImage = null;\r\n    }\r\n    this.images.splice(index, 1);\r\n  }\r\n\r\n  changeTab(tab: string) {\r\n    this.tab = tab;\r\n  }\r\n\r\n  loadStates(COD: any) {\r\n    this.location.states({ country: COD }).then((res) => {\r\n      this.states = res.data;\r\n    });\r\n  }\r\n\r\n  loadCities(id: any) {\r\n    this.location.cities({ state: id }).then((res) => {\r\n      this.cities = res.data;\r\n    });\r\n  }\r\n\r\n  selectSizeImage(media: any) {\r\n    this.product.sizeChart = media._id;\r\n    this.sizeChartUrl = media.fileUrl;\r\n  }\r\n\r\n  addFreeShipAreas() {\r\n    if (this.zipCode) {\r\n      const data = {\r\n        areaType: 'zipcode',\r\n        value: this.zipCode\r\n      };\r\n      this.freeShipAreas.push(data);\r\n      this.zipCode = '';\r\n    } else if (!this.zipCode && this.freeCountry && !this.freeState) {\r\n      const data = {\r\n        areaType: 'country',\r\n        value: this.freeCountry.isoCode,\r\n        name: this.freeCountry.name\r\n      };\r\n      this.freeShipAreas.push(data);\r\n      this.freeCountry = {};\r\n    } else if (!this.zipCode && this.freeCountry && this.freeState && !this.freeCity) {\r\n      const data = {\r\n        areaType: 'state',\r\n        value: this.freeState._id,\r\n        name: this.freeState.name\r\n      };\r\n      this.freeShipAreas.push(data);\r\n      this.freeState = {};\r\n    } else if (!this.zipCode && this.freeCountry && this.freeState && this.freeCity) {\r\n      const data = {\r\n        areaType: 'city',\r\n        value: this.freeCity._id,\r\n        name: this.freeCity.name\r\n      };\r\n      this.freeShipAreas.push(data);\r\n      this.freeCity = {};\r\n    }\r\n  }\r\n\r\n  removeArea(item: any, index: number) {\r\n    this.freeShipAreas.splice(index, 1);\r\n  }\r\n\r\n  removeSpec(i: number) {\r\n    this.product.specifications.splice(i, 1);\r\n  }\r\n\r\n  updateDealTime() {\r\n    this.product.dealTo = new Date(this.dealDate.year, this.dealDate.month - 1, this.dealDate.day);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { RestangularModule, Restangular } from 'ngx-restangular';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport * as _ from 'lodash';\r\n\r\n@Injectable()\r\nexport class BrandService {\r\n  constructor(private restangular: Restangular) { }\r\n  search(params: any): Promise<any> {\r\n    return this.restangular.one('brands').get(params).toPromise();\r\n  }\r\n\r\n  findOne(id): Promise<any> {\r\n    return this.restangular.one('brands', id).get().toPromise();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { RestangularModule, Restangular } from 'ngx-restangular';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport * as _ from 'lodash';\r\n\r\n@Injectable()\r\nexport class ProductVariantService {\r\n  private allowFields = [\r\n    'options', 'price', 'salePrice', 'stockQuantity', 'digitalFileId'\r\n  ];\r\n\r\n  constructor(private restangular: Restangular) { }\r\n\r\n  create(productId: string, data: any): Promise<any> {\r\n    return this.restangular.one('products', productId).one('variants').customPOST(_.pick(data, this.allowFields)).toPromise();\r\n  }\r\n\r\n  search(productId: string, params: any): Promise<any> {\r\n    return this.restangular.one('products', productId).one('variants').get(params).toPromise();\r\n  }\r\n\r\n  update(productId: string, variantId: string, data): Promise<any> {\r\n    return this.restangular.one('products', productId).one('variants', variantId).customPUT(_.pick(data, this.allowFields)).toPromise();\r\n  }\r\n\r\n  remove(productId: string, variantId: string): Promise<any> {\r\n    return this.restangular.one('products', productId).one('variants', variantId).customDELETE().toPromise();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { RestangularModule, Restangular } from 'ngx-restangular';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport * as _ from 'lodash';\r\n\r\n@Injectable()\r\nexport class ProductService {\r\n  private allowFields = [\r\n    'name', 'alias', 'description', 'shortDescription', 'categoryId', 'brandId', 'specifications',\r\n    'chemicalIdentifiers', 'safetyHandling', 'isActive', 'metaSeo', 'ordering', 'freeShip',\r\n    'images', 'mainImage', 'type', 'price', 'salePrice', 'stockQuantity', 'sku', 'upc', 'mpn', 'ean', 'sizeChart', 'digitalFileId',\r\n    'jan', 'isbn', 'taxClass', 'taxPercentage', 'restrictCODAreas', 'restrictFreeShipAreas', 'dailyDeal', 'dealTo'\r\n  ];\r\n\r\n  constructor(private restangular: Restangular) { }\r\n\r\n  create(data: any): Promise<any> {\r\n    return this.restangular.all('products').post(_.pick(data, this.allowFields)).toPromise();\r\n  }\r\n\r\n  search(params: any): Promise<any> {\r\n    return this.restangular.one('products', 'search').get(params).toPromise();\r\n  }\r\n\r\n  findOne(id): Promise<any> {\r\n    return this.restangular.one('products', id).get().toPromise();\r\n  }\r\n\r\n  update(id, data): Promise<any> {\r\n    return this.restangular.one('products', id).customPUT(_.pick(data, this.allowFields)).toPromise();\r\n  }\r\n\r\n  remove(id): Promise<any> {\r\n    return this.restangular.one('products', id).customDELETE().toPromise();\r\n  }\r\n\r\n  export(params: any): Promise<any> {\r\n    return this.restangular.one('products/export/csv').get(params).toPromise();\r\n  }\r\n}\r\n","export default \"<div class=\\\"table-responsive\\\">\\r\\n  <table class=\\\"table\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th colspan=\\\"3\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col col-md-2\\\">Key</div>\\r\\n            <div class=\\\"col col-md-4\\\">Display Text\\r\\n              <br><small class=\\\"text-muted\\\">Name of variant</small>\\r\\n            </div>\\r\\n            <div class=\\\"col col-md-4\\\">\\r\\n              Value\\r\\n              <br>\\r\\n              <small class=\\\"text-muted\\\">Value of variant</small>\\r\\n            </div>\\r\\n            <div class=\\\"col col-md-2\\\"></div>\\r\\n          </div>\\r\\n        </th>\\r\\n        <th>Price</th>\\r\\n        <th>Sale Price</th>\\r\\n        <th>Stock Quantity</th>\\r\\n        <th>Updated at</th>\\r\\n        <th>Actions</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let item of items; let i = index\\\">\\r\\n        <td colspan=\\\"3\\\">\\r\\n          <div class=\\\"row option-row\\\" *ngFor=\\\"let opt of item.options; let index = index\\\">\\r\\n            <div class=\\\"col col-md-2\\\">{{opt?.key}}</div>\\r\\n            <div class=\\\"col col-md-4\\\">{{opt?.displayText}}</div>\\r\\n            <div class=\\\"col col-md-4\\\">{{opt?.value}}</div>\\r\\n            <div class=\\\"col col-md-2\\\">\\r\\n              <a (click)=\\\"removeOption(item, index)\\\" *ngIf=\\\"item.options.length > 1\\\">\\r\\n                <i class=\\\"fa fa-trash\\\"></i>\\r\\n              </a> &nbsp;\\r\\n              <a (click)=\\\"openOption(opt)\\\" *ngIf=\\\"!opt.isNew && index === 0\\\">\\r\\n                <i class=\\\"fa fa-plus\\\"></i>\\r\\n              </a>\\r\\n              <a (click)=\\\"closeOption(opt)\\\" *ngIf=\\\"opt.isNew && index === 0\\\">\\r\\n                <i class=\\\"fa fa-close\\\"></i>\\r\\n              </a>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"opt.isNew && index === 0\\\">\\r\\n              <div class=\\\"col col-md-2\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newOption.key\\\" />\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"col col-md-4\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newOption.displayText\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"col col-md-4\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newOption.value\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"col col-md-2\\\">\\r\\n                <button (click)=\\\"addNewOption(item)\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">Add</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </td>\\r\\n        <td>{{item.price | currency}}</td>\\r\\n        <td>{{item.salePrice | currency}}</td>\\r\\n        <td>{{item.stockQuantity | number}}</td>\\r\\n        <td>{{item.updatedAt | date}}</td>\\r\\n        <td>\\r\\n          <a (click)=\\\"update(item, i)\\\">\\r\\n            <i class=\\\"fa fa-pencil\\\"></i>\\r\\n          </a>&nbsp;\\r\\n          <a (click)=\\\"remove(item._id, i)\\\">\\r\\n            <i class=\\\"fa fa-trash\\\"></i>\\r\\n          </a>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr *ngIf=\\\"!items?.length\\\">\\r\\n        <td colspan=\\\"10\\\">\\r\\n          <p>There is no variant, please create new.</p>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n    <tfoot>\\r\\n      <tr>\\r\\n        <td colspan=\\\"10\\\" *ngIf=\\\"total > 10\\\">\\r\\n          <ngb-pagination [collectionSize]=\\\"total\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"query()\\\"></ngb-pagination>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td colspan=\\\"3\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col col-md-2\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"key\\\" placeholder=\\\"S,M,L...\\\" [(ngModel)]=\\\"newVariant.options[0].key\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col col-md-4\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"displayText\\\" placeholder=\\\"Size, color, etc.\\\" [(ngModel)]=\\\"newVariant.options[0].displayText\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col col-md-4\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"value\\\" placeholder=\\\"40, XL, blue, etc.\\\" [(ngModel)]=\\\"newVariant.options[0].value\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col col-md-2\\\"></div>\\r\\n          </div>\\r\\n        </td>\\r\\n        <td *ngIf=\\\"product.type === 'digital'\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>\\r\\n              <media-select (onSelect)=\\\"selectMedia($event)\\\"></media-select>\\r\\n            </label>\\r\\n          </div>\\r\\n        </td>\\r\\n        <td>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"price\\\" placeholder=\\\"Price\\\" [(ngModel)]=\\\"newVariant.price\\\" />\\r\\n          </div>\\r\\n        </td>\\r\\n        <td>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"salePrice\\\" placeholder=\\\"Sale Price\\\" [(ngModel)]=\\\"newVariant.salePrice\\\" />\\r\\n          </div>\\r\\n        </td>\\r\\n        <td>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"stock\\\" placeholder=\\\"Quantity\\\" [(ngModel)]=\\\"newVariant.stockQuantity\\\" />\\r\\n          </div>\\r\\n        </td>\\r\\n        <td></td>\\r\\n        <td>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"create()\\\">Add new</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n\\r\\n    </tfoot>\\r\\n  </table>\\r\\n  <div class=\\\"badge badge-info\\\">Use these system options or custom it by yourself.</div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col col-md-3\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"optionKey\\\" placeholder=\\\"Search options...\\\" [(ngModel)]=\\\"optionKey\\\"\\r\\n          (change)=\\\"loadOptions()\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col col-md-3\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <select [(ngModel)]=\\\"option\\\" class=\\\"form-control\\\" name=\\\"key\\\" (change)=\\\"selectOptionKey(option)\\\">\\r\\n          <option ngValue=\\\"\\\">--Option Key--</option>\\r\\n          <option *ngFor=\\\"let item of options\\\" [ngValue]=\\\"item\\\">{{item.name}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col col-md-3\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <select [(ngModel)]=\\\"detailOption\\\" class=\\\"form-control\\\" name=\\\"detailOption\\\" (change)=\\\"selectOption(detailOption)\\\">\\r\\n          <option ngValue=\\\"\\\">--Option--</option>\\r\\n          <option *ngFor=\\\"let item of menuOptions\\\" [ngValue]=\\\"item\\\">{{item.key}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { ProductService } from '../../services/product.service';\r\nimport { AuthService } from '../../../shared/services';\r\nimport { UtilService } from '../../../shared/services';\r\nimport { Router } from '@angular/router';\r\nimport { ToastyService } from 'ng2-toasty';\r\n\r\n@Component({\r\n  selector: 'products',\r\n  templateUrl: './listing.html'\r\n})\r\nexport class ProductsComponent implements OnInit {\r\n\r\n  public isLoading = false;\r\n  public items = [];\r\n  public page: any = 1;\r\n  public take: any = 10;\r\n  public total: any = 0;\r\n  public searchText: any = '';\r\n  public sortOption = {\r\n    sortBy: 'createdAt',\r\n    sortType: 'desc'\r\n  };\r\n  public accessToken: any = '';\r\n  public importOptions: any = {};\r\n  public showImport: any = false;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private productService: ProductService,\r\n    private toasty: ToastyService,\r\n    private utilService: UtilService\r\n  ) {\r\n    this.accessToken = this.authService.getAccessToken();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.importOptions = {\r\n      url: window.appConfig.apiBaseUrl + '/products/import/csv',\r\n      fileFieldName: 'file',\r\n      onFinish: (resp) => {\r\n        if (resp.message === 'OK') {\r\n          this.toasty.success('Your product list is being processed. Please come back in a while!');\r\n          setTimeout(function () { window.location.reload(); }, 2000);\r\n        } else {\r\n          this.toasty.error(resp.message);\r\n        }\r\n      }\r\n    };\r\n    this.query();\r\n  }\r\n\r\n  query() {\r\n    this.utilService.setLoading(true);\r\n    this.isLoading = true;\r\n    this.productService.search({\r\n      page: this.page,\r\n      take: this.take,\r\n      q: this.searchText,\r\n      sort: `${this.sortOption.sortBy}`,\r\n      sortType: `${this.sortOption.sortType}`\r\n    })\r\n      .then(resp => {\r\n        this.items = resp.data.items;\r\n        this.total = resp.data.count;\r\n        this.searchText = '';\r\n        this.utilService.setLoading(false);\r\n        this.isLoading = false;\r\n      })\r\n      .catch(() => {\r\n        this.toasty.error('Something went wrong, please try again!');\r\n        this.utilService.setLoading(false);\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n\r\n  remove(itemId: any, index: number) {\r\n    if (window.confirm('Are you sure want to delete this item?')) {\r\n      this.productService.remove(itemId)\r\n        .then(() => {\r\n          this.toasty.success('Item has been deleted!');\r\n          this.items.splice(index, 1);\r\n        })\r\n        .catch((err) => this.toasty.error(err.data.message || 'Something went wrong, please try again!'));\r\n    }\r\n  }\r\n\r\n  sortBy(field: string, type: string) {\r\n    this.sortOption.sortBy = field;\r\n    this.sortOption.sortType = type;\r\n    this.query();\r\n  }\r\n\r\n  keyPress(event: any) {\r\n    if (event.charCode === 13) {\r\n      this.query();\r\n    }\r\n  }\r\n\r\n  exportCSV() {\r\n    const params = { access_token: this.accessToken };\r\n    this.productService.export(params).then()\r\n      .catch((err) => {\r\n        const link = document.createElement('a');\r\n        link.target = '_blank';\r\n        link.download = 'file';\r\n        link.href = err.url;\r\n        link.click();\r\n      });\r\n  }\r\n\r\n  openFile() {\r\n    this.showImport = !this.showImport;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProductCategoryService } from '../../services/category.service';\r\nimport { ProductService } from '../../services/product.service';\r\nimport { LocationService } from '../../../shared/services';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ToastyService } from 'ng2-toasty';\r\nimport * as _ from 'lodash';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map, tap, switchMap } from 'rxjs/operators';\r\nimport { BrandService } from '../../services/brand.service';\r\n\r\n@Component({\r\n  selector: 'product-update',\r\n  templateUrl: './form.html'\r\n})\r\nexport class ProductUpdateComponent implements OnInit {\r\n  public product: any;\r\n  public isSubmitted: any = false;\r\n  public tree: any = [];\r\n  public brands: any = [];\r\n  public newSpecification: any = {\r\n    key: '',\r\n    value: ''\r\n  };\r\n  public imageUrl: string = '';\r\n  public images: any = [];\r\n  public mainImage: string = '';\r\n  public tab = 'info';\r\n  public freeShipAreas: any = [];\r\n  public countries: any = [];\r\n  public states: any = [];\r\n  public cities: any = [];\r\n  public zipCode: any = '';\r\n  public freeCountry: any;\r\n  public freeState: any;\r\n  public freeCity: any;\r\n  public dealDate: any;\r\n  public imagesOptions: any = {\r\n    multiple: true\r\n  };\r\n  public fileType: any = '';\r\n  public fileOptions: any = {};\r\n  public brand: any;\r\n  public sizeChart: any = '';\r\n\r\n  public searching: any = false;\r\n  public searchFailed: any = false;\r\n  formatter_brand = (x: { name: string }) => x.name;\r\n\r\n  search_brand = (text$: Observable<string>) =>\r\n      text$.pipe(\r\n          debounceTime(500),\r\n          distinctUntilChanged(),\r\n          tap(() => this.searching = true),\r\n          switchMap(term =>\r\n              this.brandService.search({ name: term }).then((res) => {\r\n                if (res) {\r\n                  this.searchFailed = false;\r\n                  this.searching = false;\r\n                  return res.data.items;\r\n                }\r\n                this.searchFailed = true;\r\n                this.searching = false;\r\n                return of([]);\r\n              })\r\n          )\r\n      )\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute, private categoryService: ProductCategoryService, private brandService: BrandService,\r\n    private productService: ProductService, private toasty: ToastyService, private location: LocationService) {\r\n    if (route.snapshot.queryParams.tab) {\r\n      this.tab = route.snapshot.queryParams.tab;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fileOptions = {\r\n      isDigital: true,\r\n      url: window.appConfig.apiBaseUrl + '/media/files',\r\n      onFinish: (resp) => {\r\n        if (resp.data.mimeType.indexOf('zip') > -1) {\r\n          this.fileType = 'zip';\r\n        } else if (resp.data.mimeType.indexOf('rar') > -1) {\r\n          this.fileType = 'rar';\r\n        } else if (resp.data.mimeType.indexOf('pdf') > -1) {\r\n          this.fileType = 'pdf';\r\n        } else {\r\n          this.fileType = 'file';\r\n        }\r\n        this.product.digitalFileId = resp.data._id;\r\n        this.product.digitalFile = resp.data;\r\n      }\r\n    };\r\n    const id = this.route.snapshot.paramMap.get('id');\r\n    this.productService.findOne(id)\r\n      .then(resp => {\r\n        this.product = resp.data;\r\n        if (this.product.dailyDeal && this.product.dealTo) {\r\n          const day = new Date(this.product.dealTo).getDate();\r\n          const month = new Date(this.product.dealTo).getMonth() + 1;\r\n          const year = new Date(this.product.dealTo).getFullYear();\r\n          this.dealDate = {\r\n            year: year,\r\n            month: month,\r\n            day: day\r\n          };\r\n        }\r\n        this.freeShipAreas = resp.data.restrictFreeShipAreas;\r\n        this.mainImage = resp.data.mainImage ? resp.data.mainImage._id : null;\r\n        if (resp.data.digitalFile) {\r\n          this.fileType = resp.data.digitalFile.type;\r\n        }\r\n        this.images = this.product.images;\r\n\r\n        this.sizeChart = this.product.sizeChart ? this.product.sizeChart.thumbUrl : null;\r\n        this.product.sizeChart = this.product.sizeChart ? this.product.sizeChart._id : null;\r\n\r\n        console.log( this.product.sizeChart.thumbUrl );\r\n        if (this.product.dealTo) {\r\n          const date = new Date(this.product.dealTo);\r\n          this.dealDate = {\r\n            year: date.getFullYear(),\r\n            month: date.getMonth() + 1,\r\n            day: date.getDay()\r\n          };\r\n        }\r\n      });\r\n    this.categoryService.tree()\r\n      .then(resp => (this.tree = this.categoryService.prettyPrint(resp.data)));\r\n    this.location.countries().then((resp) => {\r\n      this.countries = resp.data;\r\n    });\r\n  }\r\n\r\n  changeAlias() {\r\n    this.product.alias = this.product.name.split(' ').join('-');\r\n  }\r\n\r\n  submit(frm) {\r\n    this.isSubmitted = true;\r\n    if (frm.$invalid) {\r\n      this.toasty.error('Invalid form, please try again.');\r\n    }\r\n\r\n    if (this.product.salePrice > this.product.price || this.product.salePrice < 0.1 || this.product.price < 0.1) {\r\n      return this.toasty.error('Price or sale price is invalid.');\r\n    }\r\n\r\n    if (this.product.taxPercentage < 0) {\r\n      return this.toasty.error('Tax value is invalid.');\r\n    }\r\n\r\n    if (this.product.dailyDeal && this.dealDate) {\r\n      this.product.dealTo = new Date(this.dealDate.year, this.dealDate.month, this.dealDate.day).toUTCString();\r\n    }\r\n\r\n    if (this.product.type === 'digital' && !this.product.digitalFileId) {\r\n      return this.toasty.error('Please select Digital file path!');\r\n    }\r\n\r\n    if (this.product.brand) {\r\n      this.product.brandId = this.product.brand._id;\r\n    }\r\n\r\n    this.product.restrictFreeShipAreas = [];\r\n    this.freeShipAreas.forEach((item) => {\r\n      const data = _.pick(item, ['areaType', 'value', 'name']);\r\n      this.product.restrictFreeShipAreas.push(data);\r\n    });\r\n    this.product.images = this.images.map(i => i._id);\r\n    this.product.mainImage = this.mainImage || null;\r\n    this.productService.update(this.product._id, this.product).then(resp => {\r\n      this.toasty.success('Updated successfully.');\r\n      this.router.navigate(['/products/list']);\r\n    })\r\n      .catch(err => this.toasty.error(err.data.message || err.data.data.message || 'Something went wrong, please try again.'))\r\n  }\r\n\r\n  addSpecification() {\r\n    if (!this.newSpecification.value.trim()) {\r\n      return this.toasty.error('Please enter specification value');\r\n    }\r\n    this.product.specifications.push(this.newSpecification);\r\n    this.newSpecification = { key: '', value: '' };\r\n  }\r\n\r\n  selectImage(media: any) {\r\n    if (media.type !== 'photo') {\r\n      return this.toasty.error('Please select image!');\r\n    }\r\n\r\n    this.images.push(media);\r\n  }\r\n\r\n  selectSizeImage(media: any) {\r\n    this.product.sizeChart = media._id;\r\n    this.sizeChart = media.fileUrl;\r\n  }\r\n\r\n  setMain(media: any) {\r\n    this.mainImage = media._id;\r\n  }\r\n\r\n  // selectDigital(media: any) {\r\n  //   this.product.digitalFileId = media._id;\r\n  //   this.product.digitalFile = media;\r\n  //   if (media.mimeType.indexOf('image') === 0) {\r\n  //     this.fileType = 'image';\r\n  //   } else if (media.mimeType.indexOf('audio') === 0) {\r\n  //     this.fileType = 'audio';\r\n  //   } else if (media.mimeType.indexOf('video') === 0) {\r\n  //     this.fileType = 'video';\r\n  //   } else {\r\n  //     this.fileType = 'file';\r\n  //   }\r\n  // }\r\n\r\n  removeImage(media: any, index: any) {\r\n    if (media._id === this.mainImage) {\r\n      this.mainImage = null;\r\n    }\r\n    this.images.splice(index, 1);\r\n  }\r\n\r\n  changeTab(tab: string) {\r\n    this.tab = tab;\r\n  }\r\n\r\n  loadStates(COD: any) {\r\n    this.location.states({ country: COD }).then((res) => {\r\n      this.states = res.data;\r\n    });\r\n  }\r\n\r\n  loadCities(id: any) {\r\n    this.location.cities({ state: id }).then((res) => {\r\n      this.cities = res.data;\r\n    });\r\n  }\r\n\r\n  addFreeShipAreas() {\r\n    if (this.zipCode) {\r\n      let data = {\r\n        areaType: 'zipcode',\r\n        value: this.zipCode\r\n      };\r\n      this.freeShipAreas.push(data);\r\n      this.zipCode = '';\r\n    } else if (!this.zipCode && this.freeCountry && !this.freeState) {\r\n      let data = {\r\n        areaType: 'country',\r\n        value: this.freeCountry.isoCode,\r\n        name: this.freeCountry.name\r\n      };\r\n      this.freeShipAreas.push(data);\r\n      this.freeCountry = {};\r\n    } else if (!this.zipCode && this.freeCountry && this.freeState && !this.freeCity) {\r\n      let data = {\r\n        areaType: 'state',\r\n        value: this.freeState._id,\r\n        name: this.freeState.name\r\n      };\r\n      this.freeShipAreas.push(data);\r\n      this.freeState = {};\r\n    } else if (!this.zipCode && this.freeCountry && this.freeState && this.freeCity) {\r\n      let data = {\r\n        areaType: 'city',\r\n        value: this.freeCity._id,\r\n        name: this.freeCity.name\r\n      };\r\n      this.freeShipAreas.push(data);\r\n      this.freeCity = {};\r\n    }\r\n  }\r\n\r\n  removeArea(item: any, index: number) {\r\n    this.freeShipAreas.splice(index, 1);\r\n  }\r\n\r\n  removeSpec(i: number) {\r\n    this.product.specifications.splice(i, 1);\r\n  }\r\n\r\n  updateDealTime() {\r\n    this.product.dealTo = new Date(this.dealDate.year, this.dealDate.month - 1, this.dealDate.day);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SortablejsModule } from 'ngx-sortablejs';\r\nimport { FroalaEditorModule, FroalaViewModule } from 'angular-froala-wysiwyg';\r\nimport { ProductRoutingModule } from './product.routing';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nimport { VariantUpdateModalComponent, ProductVariantsComponent } from './components/variants/product-variants.component';\r\nimport { ProductCreateComponent } from './components/products/create.component';\r\nimport { ProductUpdateComponent } from './components/products/update.component';\r\nimport { ProductsComponent } from './components/products/listing.component';\r\n\r\nimport { ProductCategoryService } from './services/category.service';\r\nimport { BrandService } from './services/brand.service';\r\nimport { OptionService } from './services/option.service';\r\nimport { ProductVariantService } from './services/variant.service';\r\nimport { ProductService } from './services/product.service';\r\nimport { LocationService } from '../shared/services';\r\n\r\nimport { MediaModule } from '../media/media.module';\r\nimport { ReviewModule } from '../review/review.module';\r\nimport { UserService } from '../user/user.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    SortablejsModule,\r\n    // our custom module\r\n    ProductRoutingModule,\r\n    NgbModule,\r\n    FroalaEditorModule.forRoot(),\r\n    FroalaViewModule.forRoot(),\r\n    MediaModule,\r\n    ReviewModule,\r\n    NgSelectModule\r\n  ],\r\n  declarations: [\r\n    VariantUpdateModalComponent,\r\n    ProductVariantsComponent,\r\n    ProductCreateComponent,\r\n    ProductUpdateComponent,\r\n    ProductsComponent\r\n  ],\r\n  providers: [\r\n    ProductCategoryService,\r\n    BrandService,\r\n    UserService,\r\n    OptionService,\r\n    ProductVariantService,\r\n    ProductService,\r\n    LocationService\r\n  ],\r\n  entryComponents: [\r\n    VariantUpdateModalComponent\r\n  ]\r\n})\r\nexport class ProductModule { }\r\n","export default \"<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <form (submit)=\\\"submit(frm)\\\" #frm=\\\"ngForm\\\" *ngIf=\\\"product\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"nav flex-column nav-pills nav-top-cus\\\" role=\\\"tablist\\\" aria-orientation=\\\"vertical\\\">\\r\\n                        <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" role=\\\"tab\\\" aria-controls=\\\"home\\\" aria-selected=\\\"true\\\"\\r\\n                           [ngClass]=\\\"{active: tab == 'info'}\\\"\\r\\n                           (click)=\\\"changeTab('info')\\\">Information</a>\\r\\n\\r\\n                        <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" role=\\\"tab\\\" aria-controls=\\\"profile\\\" aria-selected=\\\"false\\\"\\r\\n                           [ngClass]=\\\"{active: tab == 'spec'}\\\"\\r\\n                           (click)=\\\"changeTab('spec')\\\">Specifications</a>\\r\\n\\r\\n                        <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" role=\\\"tab\\\" aria-controls=\\\"contact\\\" aria-selected=\\\"false\\\"\\r\\n                           [ngClass]=\\\"{active: tab == 'images'}\\\"\\r\\n                           (click)=\\\"changeTab('images')\\\">Images</a>\\r\\n\\r\\n                        <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" role=\\\"tab\\\" aria-controls=\\\"catalogs\\\" aria-selected=\\\"false\\\"\\r\\n                           [ngClass]=\\\"{active: tab == 'catalogs'}\\\"\\r\\n                           (click)=\\\"changeTab('catalogs')\\\">Variants</a>\\r\\n\\r\\n                        <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" role=\\\"tab\\\" aria-controls=\\\"contact\\\"\\r\\n                           aria-selected=\\\"false\\\" [ngClass]=\\\"{active: tab == 'size-chart'}\\\"\\r\\n                           (click)=\\\"changeTab('size-chart')\\\">Size Chart</a>\\r\\n\\r\\n                        <a [hidden]=\\\"!product._id\\\" class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" role=\\\"tab\\\" aria-controls=\\\"review\\\"\\r\\n                           aria-selected=\\\"false\\\" [ngClass]=\\\"{active: tab == 'review'}\\\" (click)=\\\"changeTab('review')\\\">Reviews\\r\\n                            From\\r\\n                            User</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"tab-content\\\">\\r\\n                        <div class=\\\"tab-pane\\\" role=\\\"tabpanel\\\"\\r\\n                             [ngClass]=\\\"{'show active': tab === 'info', hide: tab !== 'info'}\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Name (*)</label>\\r\\n                                        <input type=\\\"text\\\" name=\\\"productName\\\" #productName=\\\"ngModel\\\"\\r\\n                                               class=\\\"form-control\\\" placeholder=\\\"Enter name\\\"\\r\\n                                               [(ngModel)]=\\\"product.name\\\" required (change)=\\\"changeAlias()\\\"/>\\r\\n                                        <div *ngIf=\\\"productName.errors && (productName.dirty || productName.touched || isSubmitted)\\\">\\r\\n                                            <p [hidden]=\\\"!productName.errors.required\\\" class=\\\"required-text\\\">\\r\\n                                                Please enter product name!\\r\\n                                            </p>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Alias</label>\\r\\n                                        <input type=\\\"text\\\" name=\\\"alias\\\" class=\\\"form-control\\\"\\r\\n                                               placeholder=\\\"no space, special chars, alias name for seo\\\"\\r\\n                                               [(ngModel)]=\\\"product.alias\\\"/>\\r\\n                                        <small class=\\\"text-muted\\\">If the alias is exist, the system automatically adds\\r\\n                                            any character at the\\r\\n                                            end of alias.\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Type</label>\\r\\n                                        <select type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control\\\"\\r\\n                                                placeholder=\\\"Physical or Digital\\\" [(ngModel)]=\\\"product.type\\\">\\r\\n                                            <option value=\\\"physical\\\">Physical</option>\\r\\n                                            <option value=\\\"digital\\\">Digital</option>\\r\\n                                        </select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\" *ngIf=\\\"product.type === 'digital'\\\">\\r\\n                                        <label style=\\\"width:100%\\\">Digital FilePath </label>\\r\\n                                        <file-upload [options]=\\\"fileOptions\\\"></file-upload>\\r\\n                                        <div *ngIf=\\\"product.type === 'digital' && product.digitalFileId\\\">\\r\\n                                            <img src=\\\"assets/images/file-exist.jpg\\\" *ngIf=\\\"fileType === 'file'\\\"\\r\\n                                                 width=\\\"45px\\\">\\r\\n                                            <img src=\\\"assets/images/zip-icon.png\\\" *ngIf=\\\"fileType === 'zip'\\\"\\r\\n                                                 width=\\\"45px\\\">\\r\\n                                            <img src=\\\"assets/images/pdf-icon.png\\\" *ngIf=\\\"fileType === 'pdf'\\\"\\r\\n                                                 width=\\\"45px\\\">\\r\\n                                            <img src=\\\"assets/images/rar-exist.png\\\" *ngIf=\\\"fileType === 'rar'\\\"\\r\\n                                                 width=\\\"45px\\\">\\r\\n                                            <span *ngIf=\\\"product.type === 'digital' && product.digitalFileId && product.digitalFile\\\">\\r\\n                        Mime Type: {{product?.digitalFile?.mimeType}}\\r\\n                      </span>\\r\\n                                        </div>\\r\\n                                        <img src=\\\"assets/images/nofile-available.png\\\" width=\\\"45px\\\"\\r\\n                                             *ngIf=\\\"product.type === 'digital' && !product.digitalFileId\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Stock Quantity (*)</label>\\r\\n                                        <input type=\\\"number\\\" name=\\\"stockQuantity\\\" min=\\\"1\\\" class=\\\"form-control\\\"\\r\\n                                               [(ngModel)]=\\\"product.stockQuantity\\\" required #stock=\\\"ngModel\\\"/>\\r\\n                                        <div *ngIf=\\\"stock.errors && (stock.dirty || stock.touched || isSubmitted)\\\">\\r\\n                                            <p [hidden]=\\\"!stock.errors.required\\\" class=\\\"required-text\\\">\\r\\n                                                Stock quantity is required\\r\\n                                            </p>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Price (*)</label>\\r\\n                                        <input type=\\\"number\\\" name=\\\"price\\\" min=\\\"0.1\\\" class=\\\"form-control\\\"\\r\\n                                               [(ngModel)]=\\\"product.price\\\" required #price=\\\"ngModel\\\"/>\\r\\n                                        <div *ngIf=\\\"price.errors && (price.dirty || price.touched || isSubmitted)\\\">\\r\\n                                            <p [hidden]=\\\"!price.errors.required\\\" class=\\\"required-text\\\">\\r\\n                                                Price is required\\r\\n                                            </p>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Sale Price (*)</label>\\r\\n                                        <input type=\\\"number\\\" name=\\\"salePrice\\\" class=\\\"form-control\\\"\\r\\n                                               [(ngModel)]=\\\"product.salePrice\\\" min=\\\"0.1\\\" required #salePrice=\\\"ngModel\\\"/>\\r\\n                                        <div *ngIf=\\\"salePrice.errors && (salePrice.dirty || salePrice.touched || isSubmitted)\\\">\\r\\n                                            <p [hidden]=\\\"!salePrice.errors.required\\\" class=\\\"required-text\\\">\\r\\n                                                Sale Price is required\\r\\n                                            </p>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Tax Name</label>\\r\\n                                        <input type=\\\"text\\\" name=\\\"taxClass\\\" class=\\\"form-control\\\"\\r\\n                                               placeholder=\\\"VAT,Sales Tax,...\\\" [(ngModel)]=\\\"product.taxClass\\\"/>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Tax Value (%)</label>\\r\\n                                        <input type=\\\"number\\\" name=\\\"taxValue\\\" class=\\\"form-control\\\" placeholder=\\\"10\\\"\\r\\n                                               [(ngModel)]=\\\"product.taxPercentage\\\"/>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Restrict COD areas</label>\\r\\n                                        <ng-select bindValue=\\\"label\\\" placeholder=\\\"Fill out restrict COD areas here\\\"\\r\\n                                                   name=\\\"restrictCODAreas\\\" [items]=\\\"[]\\\" [addTag]=\\\"true\\\"\\r\\n                                                   [multiple]=\\\"true\\\" [isOpen]=\\\"false\\\"\\r\\n                                                   [(ngModel)]=\\\"product.restrictCODAreas\\\">\\r\\n                                        </ng-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>SKU</label>\\r\\n                                        <input type=\\\"text\\\" name=\\\"sku\\\" placeholder=\\\"Stock keeping unit\\\"\\r\\n                                               class=\\\"form-control\\\" [(ngModel)]=\\\"product.sku\\\"/>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>UPC</label>\\r\\n                                        <input type=\\\"text\\\" name=\\\"upc\\\" placeholder=\\\"Univeral product code\\\"\\r\\n                                               class=\\\"form-control\\\" [(ngModel)]=\\\"product.upc\\\"/>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>MPN</label>\\r\\n                                        <input type=\\\"text\\\" name=\\\"mpn\\\" placeholder=\\\"Manufacturer's part number\\\"\\r\\n                                               class=\\\"form-control\\\"\\r\\n                                               [(ngModel)]=\\\"product.mpn\\\"/>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>EAN</label>\\r\\n                                        <input type=\\\"text\\\" name=\\\"ean\\\" placeholder=\\\"European article number\\\"\\r\\n                                               class=\\\"form-control\\\"\\r\\n                                               [(ngModel)]=\\\"product.ean\\\"/>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>JAN</label>\\r\\n                                        <input type=\\\"text\\\" name=\\\"jan\\\" placeholder=\\\"Japanese article number\\\"\\r\\n                                               class=\\\"form-control\\\"\\r\\n                                               [(ngModel)]=\\\"product.jan\\\"/>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>ISBN</label>\\r\\n                                        <input type=\\\"text\\\" name=\\\"isbn\\\" placeholder=\\\"International standard book number\\\"\\r\\n                                               class=\\\"form-control\\\"\\r\\n                                               [(ngModel)]=\\\"product.isbn\\\"/>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Short description</label>\\r\\n                                        <textarea class=\\\"form-control\\\" name=\\\"productsdesc\\\" placeholder=\\\"Enter some text\\\"\\r\\n                                                  [(ngModel)]=\\\"product.shortDescription\\\"></textarea>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Description</label>\\r\\n                                        <div [froalaEditor] [(froalaModel)]=\\\"product.description\\\"></div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Category (*)</label>\\r\\n                                        <select class=\\\"form-control\\\" [(ngModel)]=\\\"product.categoryId\\\" name=\\\"categoryId\\\">\\r\\n                                            <option value=\\\"\\\">-- No category --</option>\\r\\n                                            <option *ngFor=\\\"let item of tree\\\"\\r\\n                                                    [ngValue]=\\\"item._id\\\">{{item.name}}</option>\\r\\n                                        </select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Brand</label>\\r\\n                                        <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"searchFailed\\\" [(ngModel)]=\\\"product.brand\\\"  [ngbTypeahead]=\\\"search_brand\\\" placeholder=\\\"Search brand\\\" [resultTemplate]=\\\"rt\\\" [inputFormatter]=\\\"formatter_brand\\\"  />\\r\\n                                        <span *ngIf=\\\"searching\\\">searching...</span>\\r\\n                                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"searchFailed\\\">Sorry, suggestions could not be loaded.</div>\\r\\n                                        <ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\r\\n                                            <ngb-highlight [result]=\\\"r.name\\\" [term]=\\\"t\\\"></ngb-highlight>\\r\\n                                        </ng-template>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n\\r\\n                                <div class=\\\"col-md-6\\\" *ngIf=\\\"product.metaSeo\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Meta keywords</label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"metakw\\\"\\r\\n                                               [(ngModel)]=\\\"product.metaSeo.keywords\\\"\\r\\n                                               placeholder=\\\"Enter keywords for meta SEO\\\"/>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\" *ngIf=\\\"product.metaSeo\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Meta description</label>\\r\\n                                        <textarea class=\\\"form-control\\\" name=\\\"metadesc\\\"\\r\\n                                                  [(ngModel)]=\\\"product.metaSeo.description\\\"\\r\\n                                                  placeholder=\\\"Enter description for meta SEO\\\"></textarea>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                    <hr>\\r\\n                                    <h4>Enter zip code or select the free ship areas.</h4>\\r\\n                                    <span *ngFor=\\\"let item of freeShipAreas; let i = index\\\"\\r\\n                                          class=\\\"label label-warning position-relative\\\">\\r\\n                    {{item.areaType}}: {{item.name ? item.name : item.value}}<a (click)=\\\"removeArea(item,i)\\\"\\r\\n                                                                                class=\\\"remove-item\\\">x</a>\\r\\n                  </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-2\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Zip Code</label>\\r\\n                                        <input type=\\\"text\\\" name=\\\"Zipcode\\\" [(ngModel)]=\\\"zipCode\\\" class=\\\"form-control\\\"/>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-2\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Free Ship Country</label>\\r\\n                                        <select [(ngModel)]=\\\"freeCountry\\\" class=\\\"form-control\\\" name=\\\"freeCountry\\\"\\r\\n                                                (change)=\\\"loadStates(freeCountry.isoCode)\\\">\\r\\n                                            <option *ngFor=\\\"let item of countries\\\"\\r\\n                                                    [ngValue]=\\\"item\\\">{{item.name}}</option>\\r\\n                                        </select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-2\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Free Ship State</label>\\r\\n                                        <select [(ngModel)]=\\\"freeState\\\" class=\\\"form-control\\\" name=\\\"freeCountry\\\"\\r\\n                                                (change)=\\\"loadCities(freeState._id)\\\">\\r\\n                                            <option *ngFor=\\\"let item of states\\\" [ngValue]=\\\"item\\\">{{item.name}}</option>\\r\\n                                        </select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-2\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Free Ship City</label>\\r\\n                                        <select [(ngModel)]=\\\"freeCity\\\" class=\\\"form-control\\\" name=\\\"freeCity\\\">\\r\\n                                            <option *ngFor=\\\"let item of cities\\\" [ngValue]=\\\"item\\\">{{item.name}}</option>\\r\\n                                        </select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-2\\\">\\r\\n                                    <label style=\\\"width: 100%\\\">&nbsp;</label>\\r\\n                                    <div class=\\\"btn btn-success\\\" (click)=\\\"addFreeShipAreas()\\\">Add</div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <hr/>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <div class=\\\"form-check\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"dailyDeal\\\"\\r\\n                                                       [(ngModel)]=\\\"product.dailyDeal\\\"/> Daily deal\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-check\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"freeShip\\\" [(ngModel)]=\\\"product.freeShip\\\"/>\\r\\n                                                Free ship for all\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-check\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"active\\\" [(ngModel)]=\\\"product.isActive\\\"/>\\r\\n                                                Active\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\" *ngIf=\\\"product.dailyDeal\\\">\\r\\n                                    <hr/>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <div class=\\\"checkbox\\\">\\r\\n                                            <label>Deal To (UTC time): <span class=\\\"label label-info\\\"\\r\\n                                                                             *ngIf=\\\"product.dealTo\\\">{{product?.dealTo | date:'short'}}</span></label>\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <ngb-datepicker [(ngModel)]=\\\"dealDate\\\" name=\\\"dealTo\\\"\\r\\n                                                                (select)=\\\"updateDealTime()\\\"></ngb-datepicker>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"tab-pane\\\" role=\\\"tabpanel\\\"\\r\\n                         [ngClass]=\\\"{'show active': tab === 'spec', hide: tab !== 'spec'}\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label>Specifications</label>\\r\\n                                    <table class=\\\"table\\\">\\r\\n                                        <tbody class=\\\"sortable\\\" [sortablejs]=\\\"product.specifications\\\">\\r\\n                                        <tr *ngFor=\\\"let c of product.specifications; let i = index\\\">\\r\\n                                            <td>\\r\\n                          <span>\\r\\n                            <i class=\\\"fa fa-bars\\\"></i> <strong>{{c.key}}</strong>\\r\\n                          </span>\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                                <input type=\\\"text\\\" name=\\\"spec{{i}}\\\" [(ngModel)]=\\\"c.value\\\"\\r\\n                                                       class=\\\"form-control\\\"/>\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                                <a (click)=\\\"removeSpec(i)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                        </tbody>\\r\\n                                        <tfoot>\\r\\n                                        <tr>\\r\\n                                            <td>\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                       placeholder=\\\"Enter specification type\\\" name=\\\"newSpec\\\"\\r\\n                                                       [(ngModel)]=\\\"newSpecification.key\\\"/>\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                                <div class=\\\"input-group mb-3\\\">\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                           placeholder=\\\"Enter specification value\\\"\\r\\n                                                           name=\\\"newChemicalValue\\\"\\r\\n                                                           [(ngModel)]=\\\"newSpecification.value\\\"/>\\r\\n                                                    <div class=\\\"input-group-append\\\">\\r\\n                                                        <button class=\\\"btn btn-outline-secondary\\\" type=\\\"button\\\"\\r\\n                                                                (click)=\\\"addSpecification()\\\">Add\\r\\n                                                        </button>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                            <td></td>\\r\\n                                        </tr>\\r\\n                                        </tfoot>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"tab-pane\\\" role=\\\"tabpanel\\\"\\r\\n                         [ngClass]=\\\"{'show active': tab === 'images', hide: tab !== 'images'}\\\">\\r\\n                        <h3>Click to set main image.</h3>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-3 text-center\\\" *ngFor=\\\"let media of images; let i = index\\\">\\r\\n                                <img class=\\\"img-thumbnail\\\" [src]=\\\"media.thumbUrl\\\"\\r\\n                                     [ngClass]=\\\"{selected: media._id === mainImage}\\\"/>\\r\\n\\r\\n                                <div class=\\\"btn-group\\\" role=\\\"group\\\">\\r\\n                                    <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\"\\r\\n                                            [ngClass]=\\\"{'btn-success' : media._id === mainImage}\\\"\\r\\n                                            (click)=\\\"setMain(media)\\\">\\r\\n                                        <i class=\\\"fa fa-check\\\"></i>\\r\\n                                    </button>\\r\\n                                    <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"removeImage(media, i)\\\">\\r\\n                                        <i class=\\\"fa fa-trash\\\"></i>\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <hr/>\\r\\n                        <media-select (onSelect)=\\\"selectImage($event)\\\" [options]=\\\"imagesOptions\\\"></media-select>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"tab-pane fade show active\\\" role=\\\"tabpanel\\\"\\r\\n                         [ngClass]=\\\"{'show active': tab === 'size-chart'}\\\">\\r\\n                        <h3>Click to set Size Chart image.</h3>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>\\r\\n                                    <media-select (onSelect)=\\\"selectSizeImage($event)\\\"></media-select>\\r\\n                                </label>\\r\\n                                <hr/>\\r\\n                                <img *ngIf=\\\"sizeChart\\\" width=\\\"150\\\" [src]=\\\"sizeChart\\\"/>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"tab-pane\\\" role=\\\"tabpanel\\\"\\r\\n                         [ngClass]=\\\"{'show active': tab === 'catalogs', hide: tab !== 'catalogs'}\\\">\\r\\n                        <product-variants [product]=\\\"product\\\" *ngIf=\\\"product?._id\\\"></product-variants>\\r\\n                        <div class=\\\"alert\\\" *ngIf=\\\"!product?._id\\\">\\r\\n                            Please create product then add variants\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div [hidden]=\\\"!product._id\\\" class=\\\"tab-pane\\\" role=\\\"tabpanel\\\"\\r\\n                         [ngClass]=\\\"{'show active': tab === 'review', hide: tab !== 'review'}\\\">\\r\\n                        <product-review [productId]=\\\"product._id\\\" *ngIf=\\\"product._id\\\"></product-review>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <hr/>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n\";"],"sourceRoot":"webpack:///"}