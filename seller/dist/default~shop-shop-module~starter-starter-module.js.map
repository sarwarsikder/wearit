{"version":3,"sources":["./src/app/shop/shop.module.ts","./src/app/shop/shop-update/shop-basic-info/shop-basic-info.html","./src/app/shop/shop-update/shop-social-info/shop-social-info.component.ts","./src/app/shop/shop-update/shop-social-info/shop-social-info.html","./src/app/shop/shop-update/shop-shipping-info/shop-shipping-info.component.ts","./src/app/shop/shop-update/shop-shipping-info/shop-shipping-info.html","./src/app/shop/shop-update/shop-notification-info/shop-notification-info.html","./src/app/shop/shop-update/shop-notification-info/shop-notification-info.component.ts","./src/app/shop/shop-update/shop-update.component.ts","./src/app/shop/shop-update/shop-basic-info/shop-basic-info.component.ts","./src/app/shop/shop-update/shop-bank-info/shop-bank-info.component.ts","./src/app/shop/shop-update/shop-business-info/shop-business-info.component.ts","./src/app/shop/shop-update/shop-bank-info/shop-bank-info.html","./src/app/shop/shop-update/shop-business-info/shop-business-info.html","./src/app/shop/shop-update/shop-update.html","./src/app/shop/shop.service.ts","./src/app/shop/shop.routing.ts"],"names":[],"mappings":"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","file":"default~shop-shop-module~starter-starter-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ShopRoutingModule } from './shop.routing';\r\nimport { ShopService } from './shop.service';\r\nimport { UserService } from '../user/user.service';\r\nimport { ShopUpdateComponent } from './shop-update/shop-update.component';\r\nimport { ShopBankInfoComponent } from './shop-update/shop-bank-info/shop-bank-info.component';\r\nimport { ShopBasicInfoComponent } from './shop-update/shop-basic-info/shop-basic-info.component';\r\nimport { ShopBusinessInfoComponent } from './shop-update/shop-business-info/shop-business-info.component';\r\nimport { ShopSocialInfoComponent } from './shop-update/shop-social-info/shop-social-info.component';\r\nimport { ShopShippingInfoComponent } from './shop-update/shop-shipping-info/shop-shipping-info.component';\r\nimport { ShopNotificationInfoComponent } from './shop-update/shop-notification-info/shop-notification-info.component';\r\nimport { LocationService } from '../shared/services/location.service';\r\nimport { MediaModule } from '../media/media.module';\r\nimport { ReviewModule } from '../review/review.module';\r\nimport { UtilsModule } from '../utils/utils.module';\r\nimport {AutocompleteLibModule} from 'angular-ng-autocomplete';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    //our custom module\r\n    ShopRoutingModule,\r\n    NgbModule,\r\n    MediaModule,\r\n    ReviewModule,\r\n    UtilsModule,\r\n    AutocompleteLibModule,\r\n  ],\r\n  declarations: [\r\n    ShopUpdateComponent,\r\n    ShopBankInfoComponent,\r\n    ShopBasicInfoComponent,\r\n    ShopBusinessInfoComponent,\r\n    ShopSocialInfoComponent,\r\n    ShopShippingInfoComponent,\r\n    ShopNotificationInfoComponent\r\n  ],\r\n  providers: [ShopService, UserService, LocationService],\r\n  exports: [\r\n    ShopBankInfoComponent,\r\n    ShopBasicInfoComponent,\r\n    ShopBusinessInfoComponent,\r\n    ShopSocialInfoComponent,\r\n    ShopShippingInfoComponent,\r\n    ShopNotificationInfoComponent\r\n  ]\r\n})\r\nexport class ShopModule { }\r\n","export default \"<form role=\\\"form\\\" #frm=\\\"ngForm\\\" (submit)=\\\"submit(frm)\\\" ngNativeValidate method=\\\"post\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Shop Name (*)</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter shop name\\\" [(ngModel)]=\\\"shop.name\\\" required name=\\\"name\\\" #name=\\\"ngModel\\\" />\\r\\n        <div *ngIf=\\\"name.errors && (name.dirty || name.touched || isSubmitted)\\\">\\r\\n          <p [hidden]=\\\"!name.errors.required\\\" class=\\\"required-text\\\">\\r\\n            Please enter shop!\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Shop Alias</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter shop alias\\\" [(ngModel)]=\\\"shop.alias\\\" name=\\\"alias\\\" #name=\\\"ngModel\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Address</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter address\\\" [(ngModel)]=\\\"shop.address\\\" name=\\\"address\\\" #address=\\\"ngModel\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"ng-autocomplete\\\">\\r\\n          <ng-autocomplete\\r\\n            [data]=\\\"malls\\\"\\r\\n            [searchKeyword]=\\\"keyword\\\"\\r\\n            placeholder=\\\"Enter the Mall Name\\\"\\r\\n            (selected)='selectEvent($event)'\\r\\n            (inputFocused)='onFocused($event)'\\r\\n            historyIdentifier=\\\"malls\\\"\\r\\n            name=\\\"mall\\\"\\r\\n            [(ngModel)]= mallFilterSelected.mall\\r\\n            [itemTemplate]=\\\"itemTemplate\\\"\\r\\n            [notFoundTemplate]=\\\"notFoundTemplate\\\">\\r\\n          </ng-autocomplete>\\r\\n        \\r\\n          <ng-template #itemTemplate let-item>\\r\\n            <a [innerHTML]=\\\"item.title\\\"></a>\\r\\n          </ng-template>\\r\\n        \\r\\n          <ng-template #notFoundTemplate let-notFound>\\r\\n              <div [innerHTML]=\\\"notFound\\\"></div>\\r\\n            </ng-template>\\r\\n          </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>City</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter city\\\" [(ngModel)]=\\\"shop.city\\\" name=\\\"city\\\" #city=\\\"ngModel\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>State</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter state\\\" [(ngModel)]=\\\"shop.state\\\" name=\\\"state\\\" #state=\\\"ngModel\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Country</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter country\\\" [(ngModel)]=\\\"shop.country\\\" name=\\\"country\\\" #country=\\\"ngModel\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Zip code</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter zip code\\\" [(ngModel)]=\\\"shop.zipcode\\\" name=\\\"zipcode\\\" #zipcode=\\\"ngModel\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Email (*)</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"user@example.com\\\" [(ngModel)]=\\\"shop.email\\\" name=\\\"email\\\" required #email=\\\"ngModel\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\" />\\r\\n      <div *ngIf=\\\"email.errors && (email.dirty || email.touched || isSubmitted)\\\">\\r\\n        <p [hidden]=\\\"!email.errors.required\\\" class=\\\"required-text\\\">\\r\\n          Email is required.\\r\\n        </p>\\r\\n        <p [hidden]=\\\"!email.errors.pattern\\\" class=\\\"required-text\\\">\\r\\n          Please enter a valid email address.\\r\\n        </p>\\r\\n      </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Phone number</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter phone number\\\" [(ngModel)]=\\\"shop.phoneNumber\\\" name=\\\"phoneNumber\\\" #phoneNumber=\\\"ngModel\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Return Address</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter return address\\\" [(ngModel)]=\\\"shop.returnAddress\\\" name=\\\"returnAddress\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Header Text</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter text\\\" [(ngModel)]=\\\"shop.headerText\\\" name=\\\"text\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Announcement</label>\\r\\n        <textarea type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"fuzzy fuzzy ...\\\" [(ngModel)]=\\\"shop.announcement\\\" name=\\\"announcement\\\" cols=\\\"3\\\"></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Google anyalytics code</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Google anyalytics code\\\" [(ngModel)]=\\\"shop.gaCode\\\" name=\\\"gaCode\\\" #gaCode=\\\"ngModel\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Logo <media-select (onSelect)=\\\"selectLogo($event)\\\"></media-select></label><br />\\r\\n        <img [src]=\\\"shop?.logo?.thumbUrl\\\" class=\\\"avatar\\\" width=\\\"150\\\" *ngIf=\\\"shop?.logo\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Verification Issue <media-select (onSelect)=\\\"selectVerificationIssue($event)\\\"></media-select></label><br />\\r\\n        <a href=\\\"{{shop?.verificationIssue?.fileUrl}}\\\" download target=\\\"_blank\\\">{{shop?.verificationIssue?.name}}</a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Banner <media-select (onSelect)=\\\"selectBanner($event)\\\"></media-select></label><br />\\r\\n        <img [src]=\\\"shop?.banner?.thumbUrl\\\" class=\\\"avatar\\\" width=\\\"150\\\" *ngIf=\\\"shop?.banner\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\";","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ToastyService } from 'ng2-toasty';\r\nimport { ShopService } from '../../shop.service';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'shop-social-info',\r\n  templateUrl: './shop-social-info.html'\r\n})\r\nexport class ShopSocialInfoComponent implements OnInit {\r\n  @Input() shop: any;\r\n  public isSubmitted = false;\r\n\r\n  // TODO - add option to query user from server by user id\r\n  constructor(private toasty: ToastyService, private shopService: ShopService) { }\r\n\r\n  ngOnInit() {\r\n    // TODO - add event emitter listen the change\r\n  }\r\n  submit(frm: any) {\r\n    this.isSubmitted = true;\r\n    if (!frm.valid) {\r\n      return this.toasty.error('Something went wrong, please check and try again!');\r\n    }\r\n    const data = _.pick(this.shop, ['socials']);\r\n\r\n    this.shopService.update(this.shop.id, data).then(resp => {\r\n      this.toasty.success('Updated successfuly!');\r\n    }).catch((err) => this.toasty.error(err.data.data.message));\r\n  }\r\n}\r\n","export default \"<form role=\\\"form\\\" #frm=\\\"ngForm\\\" (submit)=\\\"submit(frm)\\\" ngNativeValidate method=\\\"post\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Facebook</label>\\r\\n        <!-- <img src=\\\"assets/images/icon/trust.png\\\" width=\\\"17px\\\" *ngIf=\\\"shop.socialConnected.facebook\\\"> -->\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter facebook profile url\\\" pattern=\\\"https?://.+\\\" [(ngModel)]=\\\"shop.socials.facebook\\\" name=\\\"facebook\\\" #facebook=\\\"ngModel\\\" />\\r\\n        <div *ngIf=\\\"facebook.errors && (facebook.dirty || facebook.touched || isSubmitted)\\\">\\r\\n          <p [hidden]=\\\"!facebook.errors.pattern\\\" style=\\\"color:red\\\">\\r\\n            Please enter valid url\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Twitter</label>\\r\\n        <!-- <img src=\\\"assets/images/icon/trust.png\\\" width=\\\"17px\\\" *ngIf=\\\"shop.socialConnected.twitter\\\"> -->\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter twitter profile url\\\" pattern=\\\"https?://.+\\\" [(ngModel)]=\\\"shop.socials.twitter\\\" name=\\\"twitter\\\" #twitter=\\\"ngModel\\\" />\\r\\n        <div *ngIf=\\\"twitter.errors && (twitter.dirty || twitter.touched || isSubmitted)\\\">\\r\\n          <p [hidden]=\\\"!twitter.errors.pattern\\\" style=\\\"color:red\\\">\\r\\n            Please enter valid url\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Google</label>\\r\\n        <!-- <img src=\\\"assets/images/icon/trust.png\\\" width=\\\"17px\\\" *ngIf=\\\"shop.socialConnected.google\\\"> -->\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter google profile url\\\" pattern=\\\"https?://.+\\\" [(ngModel)]=\\\"shop.socials.google\\\" name=\\\"google\\\" #google=\\\"ngModel\\\" />\\r\\n        <div *ngIf=\\\"google.errors && (google.dirty || google.touched || isSubmitted)\\\">\\r\\n          <p [hidden]=\\\"!google.errors.pattern\\\" style=\\\"color:red\\\">\\r\\n            Please enter valid url\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Linkedin</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter linkedin profile url\\\" pattern=\\\"https?://.+\\\" [(ngModel)]=\\\"shop.socials.linkedin\\\" name=\\\"linkedin\\\" #linkedin=\\\"ngModel\\\" />\\r\\n        <div *ngIf=\\\"linkedin.errors && (linkedin.dirty || linkedin.touched || isSubmitted)\\\">\\r\\n          <p [hidden]=\\\"!linkedin.errors.pattern\\\" style=\\\"color:red\\\">\\r\\n            Please enter valid url\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Youtube</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter youtube profile url\\\" pattern=\\\"https?://.+\\\" [(ngModel)]=\\\"shop.socials.youtube\\\" name=\\\"youtube\\\" #youtube=\\\"ngModel\\\" />\\r\\n        <div *ngIf=\\\"youtube.errors && (youtube.dirty || youtube.touched || isSubmitted)\\\">\\r\\n          <p [hidden]=\\\"!youtube.errors.pattern\\\" style=\\\"color:red\\\">\\r\\n            Please enter valid url\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Instagram</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter instagram profile url\\\" pattern=\\\"https?://.+\\\" [(ngModel)]=\\\"shop.socials.instagram\\\" name=\\\"instagram\\\" #instagram=\\\"ngModel\\\" />\\r\\n        <div *ngIf=\\\"instagram.errors && (instagram.dirty || instagram.touched || isSubmitted)\\\">\\r\\n          <p [hidden]=\\\"!instagram.errors.pattern\\\" style=\\\"color:red\\\">\\r\\n            Please enter valid url\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- <div class=\\\"col col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Flickr</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter flickr profile url\\\" pattern=\\\"https?://.+\\\" [(ngModel)]=\\\"shop.socials.flickr\\\" name=\\\"flickr\\\" #flickr=\\\"ngModel\\\" />\\r\\n        <div *ngIf=\\\"flickr.errors && (flickr.dirty || flickr.touched || isSubmitted)\\\">\\r\\n          <p [hidden]=\\\"!flickr.errors.pattern\\\" style=\\\"color:red\\\">\\r\\n            Please enter valid url\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div> -->\\r\\n    <div class=\\\"col col-md-12\\\">\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col col-md-12\\\">\\r\\n      <div class=\\\"form-group button-socials\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save</button>\\r\\n      </div>\\r\\n      <!-- <small class=\\\"text-muted\\\">If your account is successfully verified, we will confirm by the icon </small>\\r\\n      <img src=\\\"assets/images/icon/trust.png\\\" width=\\\"17px\\\"> -->\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\";","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ToastyService } from 'ng2-toasty';\r\nimport { ShopService } from '../../shop.service';\r\nimport { LocationService } from '../../../shared/services/location.service';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'shop-shipping-info',\r\n  templateUrl: './shop-shipping-info.html'\r\n})\r\nexport class ShopShippingInfoComponent implements OnInit {\r\n  @Input() shop: any;\r\n  public isSubmitted = false;\r\n  public countries: any = [];\r\n\r\n  constructor(private toasty: ToastyService, private shopService: ShopService, private location: LocationService) { }\r\n\r\n  ngOnInit() {\r\n    this.location.countries().then(resp => this.countries = resp.data);\r\n  }\r\n  submit(frm: any) {\r\n    this.isSubmitted = true;\r\n    if (!frm.valid) {\r\n      return this.toasty.error('Something went wrong, please check and try again!');\r\n    }\r\n    const data = _.pick(this.shop, ['shippingSettings', 'storeWideShipping']);\r\n\r\n    this.shopService.update(this.shop.id, data).then(resp => {\r\n      this.toasty.success('Updated successfuly!');\r\n    }).catch((err) => this.toasty.error(err.data.data.message));\r\n  }\r\n}\r\n","export default \"<form role=\\\"form\\\" #frm=\\\"ngForm\\\" (submit)=\\\"submit(frm)\\\" novalidate>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Default Price (*)</label>\\r\\n        <input type=\\\"number\\\" name=\\\"defaultPrice\\\" min=\\\"0\\\" step=\\\"0.1\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"shop.shippingSettings.defaultPrice\\\"\\r\\n          required #defaultPrice=\\\"ngModel\\\" />\\r\\n        <div *ngIf=\\\"defaultPrice.errors && (defaultPrice.dirty || defaultPrice.touched || isSubmitted)\\\">\\r\\n          <p [hidden]=\\\"!defaultPrice.errors.required\\\" class=\\\"required-text\\\">\\r\\n            Default price is required!\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Price For Each Product Quantity (*)</label>\\r\\n        <input type=\\\"number\\\" name=\\\"perQuantityPrice\\\" min=\\\"0\\\" step=\\\"0.1\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"shop.shippingSettings.perQuantityPrice\\\"\\r\\n          required #perQuantityPrice=\\\"ngModel\\\" />\\r\\n        <div *ngIf=\\\"perQuantityPrice.errors && (perQuantityPrice.dirty || perQuantityPrice.touched || isSubmitted)\\\">\\r\\n          <p [hidden]=\\\"!perQuantityPrice.errors.required\\\" class=\\\"required-text\\\">\\r\\n            Price for each product quantity is required!\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Ship From (*)</label>\\r\\n        <select [(ngModel)]=\\\"shop.shippingSettings.shipFrom\\\" class=\\\"form-control\\\" name=\\\"shipFrom\\\" required #shipFrom=\\\"ngModel\\\">\\r\\n          <option *ngFor=\\\"let item of countries\\\" [ngValue]=\\\"item.isoCode\\\">{{item.name}}</option>\\r\\n        </select>\\r\\n        <div *ngIf=\\\"shipFrom.errors && (shipFrom.dirty || shipFrom.touched || isSubmitted)\\\">\\r\\n          <p [hidden]=\\\"!shipFrom.errors.required\\\" class=\\\"required-text\\\">\\r\\n            This field is required!\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Processing Time In Day (*)</label>\\r\\n        <select class=\\\"form-control\\\" name=\\\"processingTime\\\" [(ngModel)]=\\\"shop.shippingSettings.processingTime\\\" required\\r\\n          #processingTime=\\\"ngModel\\\">\\r\\n          <option value=\\\"one2Three\\\">One to three working days</option>\\r\\n          <option value=\\\"Four2Five\\\">Four to five working days</option>\\r\\n          <option value=\\\"Five2Eight\\\">Five to eight working days</option>\\r\\n          <option value=\\\"other\\\">Other</option>\\r\\n        </select>\\r\\n        <div *ngIf=\\\"processingTime.errors && (processingTime.dirty || processingTime.touched || isSubmitted)\\\">\\r\\n          <p [hidden]=\\\"!processingTime.errors.required\\\" class=\\\"required-text\\\">\\r\\n            Processing time in day is required!\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Shipping Policy (*)</label>\\r\\n        <textarea name=\\\"shippingPolicy\\\" rows=\\\"3\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Shipping Policy\\\" [(ngModel)]=\\\"shop.shippingSettings.shippingPolicy\\\"\\r\\n          #shippingPolicy=\\\"ngModel\\\" required></textarea>\\r\\n        <div *ngIf=\\\"shippingPolicy.errors && (shippingPolicy.dirty || shippingPolicy.touched || isSubmitted)\\\">\\r\\n          <p [hidden]=\\\"!shippingPolicy.errors.required\\\" class=\\\"required-text\\\">\\r\\n            Shipping Policy is required!\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Refund Policy (*)</label>\\r\\n        <textarea name=\\\"refundPolicy\\\" rows=\\\"3\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Refund Policy\\\" [(ngModel)]=\\\"shop.shippingSettings.refundPolicy\\\"\\r\\n          #refundPolicy=\\\"ngModel\\\" required></textarea>\\r\\n        <div *ngIf=\\\"refundPolicy.errors && (refundPolicy.dirty || refundPolicy.touched || isSubmitted)\\\">\\r\\n          <p [hidden]=\\\"!refundPolicy.errors.required\\\" class=\\\"required-text\\\">\\r\\n            Refund policy is required!\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label><input type=\\\"checkbox\\\" name=\\\"storeWideShipping\\\" [(ngModel)]=\\\"shop.storeWideShipping\\\" #storeWideShipping=\\\"ngModel\\\" />\\r\\n          Store Wide Shipping</label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<form role=\\\"form\\\" #frm=\\\"ngForm\\\" (submit)=\\\"submit(frm)\\\" ngNativeValidate method=\\\"post\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col col-md-4\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label><input type=\\\"checkbox\\\" name=\\\"lowInventory\\\" [(ngModel)]=\\\"shop.notifications.lowInventory\\\" #lowInventory=\\\"ngModel\\\"/> Low Inventory</label>\\r\\n      </div>\\r\\n    </div><div class=\\\"col col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Announcement</label>\\r\\n        <textarea class=\\\"form-control\\\" placeholder=\\\"Enter announcement\\\" [(ngModel)]=\\\"shop.announcement\\\" name=\\\"announcement\\\"\\r\\n        #announcement=\\\"ngModel\\\"></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\";","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ToastyService } from 'ng2-toasty';\r\nimport { ShopService } from '../../shop.service';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'shop-notification-info',\r\n  templateUrl: './shop-notification-info.html'\r\n})\r\nexport class ShopNotificationInfoComponent implements OnInit {\r\n  @Input() shop: any;\r\n  public isSubmitted = false;\r\n\r\n  // TODO - add option to query user from server by user id\r\n  constructor(private toasty: ToastyService, private shopService: ShopService){ }\r\n\r\n  ngOnInit() {\r\n    // TODO - add event emitter listen the change\r\n  }\r\n  submit(frm: any) {\r\n    this.isSubmitted = true;\r\n    if (!frm.valid) {\r\n      return this.toasty.error('Something went wrong, please check and try again!');\r\n    }\r\n    const data = _.pick(this.shop, ['notifications', 'announcement']);\r\n\r\n    this.shopService.update(this.shop.id, data).then(resp => {\r\n      this.toasty.success('Updated successfuly!');\r\n    }).catch ((err) => this.toasty.error(err.data.data.message));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ShopService } from '../shop.service';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { ToastyService } from 'ng2-toasty';\r\nimport * as _ from 'lodash';\r\nimport { AuthService } from '../../shared/services';\r\n\r\n@Component({\r\n  selector: 'shop-update',\r\n  templateUrl: './shop-update.html'\r\n})\r\nexport class ShopUpdateComponent implements OnInit {\r\n  public isSubmitted = false;\r\n  public shop: any = {};\r\n  public tab: string = 'basic';\r\n  public twitterConnectLink = '';\r\n  public socialConnected: any = {};\r\n\r\n  constructor(private router: Router, \r\n    private shopService: ShopService, \r\n    private toasty: ToastyService, \r\n    private route: ActivatedRoute, \r\n    private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.shopService.me().then(resp => {\r\n      this.shop = resp.data;\r\n      this.socialConnected = resp.data.socialConnected;\r\n    });\r\n\r\n    const redirectUrl = window.location.href;\r\n    const accessToken = this.authService.getAccessToken();\r\n    this.twitterConnectLink = `${window.appConfig.apiBaseUrl}/connect/twitter?access_token=${accessToken}&redirectUrl=${redirectUrl}`;\r\n  }\r\n\r\n  changeTab(tab: string) {\r\n    this.tab = tab;\r\n  }\r\n\r\n  onConnected(data) {\r\n    this.socialConnected[data.platform] = data.success;\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ToastyService } from 'ng2-toasty';\r\nimport { ShopService } from '../../shop.service';\r\nimport { AuthService } from '../../../shared/services';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'shop-basic-info',\r\n  templateUrl: './shop-basic-info.html'\r\n})\r\nexport class ShopBasicInfoComponent implements OnInit {\r\n  @Input() shop: any;\r\n  public isSubmitted = false;\r\n  keyword = 'title';\r\n  public malls = [];\r\n  public mallFilterSelected: any = {\r\n    mall: ''\r\n  };\r\n\r\n  selectEvent(item) {\r\n    //this.shop.mallId = item._id;\r\n  }\r\n\r\n  onChangeSearch(search: string) {\r\n    // fetch remote data from here\r\n    // And reassign the 'data' which is binded to 'data' property.\r\n  }\r\n\r\n  onFocused(e) {\r\n    \r\n  }\r\n\r\n  constructor(private auth: AuthService, private toasty: ToastyService, private shopService: ShopService) { }\r\n\r\n  ngOnInit() { \r\n    \r\n    this.auth.getMall().then(mall => {\r\n      \r\n      this.malls = mall.items;\r\n      \r\n      if(this.shop[\"mallInfo\"] != undefined)\r\n      {\r\n        this.mallFilterSelected.mall = this.shop.mallInfo;\r\n      }\r\n      \r\n    });\r\n  }\r\n  submit(frm: any) {\r\n    if(this.mallFilterSelected.mall != '')\r\n    {\r\n      this.shop.mallId = this.mallFilterSelected.mall._id;\r\n    }\r\n    else\r\n    {\r\n      this.shop.mallId = '56cb91bdc3464f14678934ca';//dummy\r\n    }\r\n    this.isSubmitted = true;\r\n    if (!frm.valid) {\r\n      return this.toasty.error('Something went wrong, please check and try again!');\r\n    }\r\n    const data = _.pick(this.shop, ['name', 'alias', 'address', 'city', 'state', 'country', 'zipcode', 'email',\r\n      'phoneNumber', 'logoId', 'verificationIssueId', 'bannerId', 'mallId', 'headerText', 'gaCode', 'announcement', 'returnAddress']);\r\n\r\n    this.shopService.update(this.shop.id, data).then(resp => {\r\n      this.toasty.success('Updated successfuly!');\r\n    }).catch((err) =>\r\n      this.toasty.error(err.data.data.message || err.data.data.details[0].message)\r\n    );\r\n  }\r\n  selectLogo(data: any) {\r\n    this.shop.logoId = data._id;\r\n    this.shop.logo = data;\r\n  }\r\n  selectVerificationIssue(data: any) {\r\n    this.shop.verificationIssueId = data._id;\r\n    this.shop.verificationIssue = data;\r\n  }\r\n  selectBanner(data: any) {\r\n    this.shop.bannerId = data._id;\r\n    this.shop.banner = data;\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ToastyService } from 'ng2-toasty';\r\nimport { ShopService } from '../../shop.service';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'shop-bank-info',\r\n  templateUrl: './shop-bank-info.html'\r\n})\r\nexport class ShopBankInfoComponent implements OnInit {\r\n  @Input() shop: any;\r\n  public isSubmitted = false;\r\n\r\n  constructor(private toasty: ToastyService, private shopService: ShopService){ }\r\n\r\n  ngOnInit() {\r\n  }\r\n  submit(frm: any) {\r\n    this.isSubmitted = true;\r\n    if (!frm.valid) {\r\n      return this.toasty.error('Something went wrong, please check and try again!');\r\n    }\r\n    const data = _.pick(this.shop, ['bankInfo']);\r\n\r\n    this.shopService.update(this.shop.id, data).then(resp => {\r\n      this.toasty.success('Updated successfuly!');\r\n    }).catch ((err) => this.toasty.error(err.data.data.message));\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ToastyService } from 'ng2-toasty';\r\nimport { ShopService } from '../../shop.service';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'shop-business-info',\r\n  templateUrl: './shop-business-info.html'\r\n})\r\nexport class ShopBusinessInfoComponent implements OnInit {\r\n  @Input() shop: any;\r\n  public isSubmitted = false;\r\n\r\n  // TODO - add option to query user from server by user id\r\n  constructor(private toasty: ToastyService, private shopService: ShopService){ }\r\n\r\n  ngOnInit() {\r\n    // TODO - add event emitter listen the change\r\n  }\r\n  submit(frm: any) {\r\n    this.isSubmitted = true;\r\n    if (!frm.valid) {\r\n      return this.toasty.error('Something went wrong, please check and try again!');\r\n    }\r\n    const data = _.pick(this.shop, ['businessInfo']);\r\n\r\n    this.shopService.update(this.shop.id, data).then(resp => {\r\n      this.toasty.success('Updated successfuly!');\r\n    }).catch ((err) => this.toasty.error(err.data.data.message));\r\n  }\r\n}\r\n","export default \"<form role=\\\"form\\\" #frm=\\\"ngForm\\\" (submit)=\\\"submit(frm)\\\" ngNativeValidate method=\\\"post\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Bank Name (*)</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter bank name\\\" [(ngModel)]=\\\"shop.bankInfo.bankName\\\" required name=\\\"bankName\\\" #bankName=\\\"ngModel\\\"/>\\r\\n        <div *ngIf=\\\"bankName.errors && (bankName.dirty || bankName.touched || isSubmitted)\\\">\\r\\n            <p [hidden]=\\\"!bankName.errors.required\\\" class=\\\"required-text\\\">\\r\\n              Please enter bank name!\\r\\n            </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Bank ID (*)</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter bank ID\\\" [(ngModel)]=\\\"shop.bankInfo.bankId\\\" required name=\\\"bankId\\\" #bankId=\\\"ngModel\\\"/>\\r\\n        <div *ngIf=\\\"bankId.errors && (bankId.dirty || bankId.touched || isSubmitted)\\\">\\r\\n          <p [hidden]=\\\"!bankId.errors.required\\\" class=\\\"required-text\\\">\\r\\n            Please enter bank ID!\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Bank Branch Name (*)</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter bank branch name\\\" [(ngModel)]=\\\"shop.bankInfo.bankBranchName\\\" required name=\\\"bankBranchName\\\" #bankBranchName=\\\"ngModel\\\"/>\\r\\n        <div *ngIf=\\\"bankBranchName.errors && (bankBranchName.dirty || bankBranchName.touched || isSubmitted)\\\">\\r\\n          <p [hidden]=\\\"!bankBranchName.errors.required\\\" class=\\\"required-text\\\">\\r\\n            Please enter bank branch name!\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Bank Branch ID (*)</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter bank branch ID\\\" [(ngModel)]=\\\"shop.bankInfo.bankBranchId\\\" required name=\\\"bankBranchId\\\" #bankBranchId=\\\"ngModel\\\"/>\\r\\n        <div *ngIf=\\\"bankBranchId.errors && (bankBranchId.dirty || bankBranchId.touched || isSubmitted)\\\">\\r\\n          <p [hidden]=\\\"!bankBranchId.errors.required\\\" class=\\\"required-text\\\">\\r\\n            Please enter bank branch ID!\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Account Name (*)</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter account name\\\" [(ngModel)]=\\\"shop.bankInfo.accountName\\\" required name=\\\"accountName\\\" #accountName=\\\"ngModel\\\"/>\\r\\n        <div *ngIf=\\\"accountName.errors && (accountName.dirty || accountName.touched || isSubmitted)\\\">\\r\\n          <p [hidden]=\\\"!accountName.errors.required\\\" class=\\\"required-text\\\">\\r\\n            Please enter account name!\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Account Number (*)</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter account number\\\" [minlength]=\\\"11\\\" [maxlength]=\\\"30\\\" [(ngModel)]=\\\"shop.bankInfo.accountNumber\\\" pattern=\\\"[a-zA-Z0-9]+\\\" required name=\\\"accountNumber\\\" #accountNumber=\\\"ngModel\\\"/>\\r\\n        <div *ngIf=\\\"accountNumber.errors && (accountNumber.dirty || accountNumber.touched || isSubmitted)\\\">\\r\\n          <p [hidden]=\\\"!accountNumber.errors.required\\\" class=\\\"required-text\\\">\\r\\n            Please enter account number!\\r\\n          </p>\\r\\n          <p [hidden]=\\\"!accountNumber.errors.pattern\\\" class=\\\"required-text\\\">\\r\\n              Account Number is alphanumeric characters\\r\\n            </p>\\r\\n            <p [hidden]=\\\"!accountNumber.errors.minlength\\\" class=\\\"error\\\" translate>\\r\\n              Account Number must be at least 11 characters\\r\\n            </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Swift Code (*)</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter swift code\\\" [minlength]=\\\"8\\\" [maxlength]=\\\"11\\\" [(ngModel)]=\\\"shop.bankInfo.swiftCode\\\" pattern=\\\"[a-zA-Z0-9]+\\\" required name=\\\"swiftCode\\\" #swiftCode=\\\"ngModel\\\"/>\\r\\n        <div *ngIf=\\\"swiftCode.errors && (swiftCode.dirty || swiftCode.touched || isSubmitted)\\\">\\r\\n            <p [hidden]=\\\"!swiftCode.errors.required\\\" class=\\\"required-text\\\">\\r\\n              Please enter swift code!\\r\\n            </p>\\r\\n            <p [hidden]=\\\"!swiftCode.errors.pattern\\\" class=\\\"required-text\\\">\\r\\n              Swift Code is alphanumeric characters\\r\\n            </p>\\r\\n            <p [hidden]=\\\"!swiftCode.errors.minlength\\\" class=\\\"error\\\" translate>\\r\\n              Swift Code must be 8 or 11 characters\\r\\n            </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<form role=\\\"form\\\" #frm=\\\"ngForm\\\" (submit)=\\\"submit(frm)\\\" ngNativeValidate method=\\\"post\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Business Name</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter business name\\\" [(ngModel)]=\\\"shop.businessInfo.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\"/>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"col col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Identifier</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter identifier\\\" [(ngModel)]=\\\"shop.businessInfo.identifier\\\" name=\\\"identifier\\\" #identifier=\\\"ngModel\\\"/>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Address</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter address\\\" [(ngModel)]=\\\"shop.businessInfo.address\\\" name=\\\"address\\\" #identifier=\\\"ngModel\\\"/>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\";","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col col-md-3\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"nav flex-column nav-pills\\\">\\r\\n          <a class=\\\"nav-link active\\\" [ngClass]=\\\"{active: tab == 'basic'}\\\" (click)=\\\"changeTab('basic')\\\">Basic Info</a>\\r\\n\\r\\n          <a class=\\\"nav-link\\\" [ngClass]=\\\"{active: tab == 'business'}\\\" (click)=\\\"changeTab('business')\\\">Business Info</a>\\r\\n\\r\\n          <a class=\\\"nav-link\\\" [ngClass]=\\\"{active: tab == 'social'}\\\" (click)=\\\"changeTab('social')\\\">Social Info</a>\\r\\n\\r\\n          <a class=\\\"nav-link\\\" [ngClass]=\\\"{active: tab == 'shipping'}\\\" (click)=\\\"changeTab('shipping')\\\">Shipping Info</a>\\r\\n\\r\\n          <a class=\\\"nav-link\\\" [ngClass]=\\\"{active: tab == 'notification'}\\\" (click)=\\\"changeTab('notification')\\\">Notification Info</a>\\r\\n\\r\\n          <a class=\\\"nav-link\\\" [ngClass]=\\\"{active: tab == 'bank'}\\\" (click)=\\\"changeTab('bank')\\\">Bank Info</a>\\r\\n\\r\\n          <a class=\\\"nav-link\\\" [ngClass]=\\\"{active: tab == 'review'}\\\" (click)=\\\"changeTab('review')\\\">Reviews From User</a>\\r\\n        </div>\\r\\n\\r\\n        <hr />\\r\\n\\r\\n        <h3>Verify your social account</h3>\\r\\n        <p>\\r\\n          <strong>Facebook: </strong> {{socialConnected?.facebook ? 'Verified' : 'Not verified'}} <br />\\r\\n          <strong>Google: </strong> {{socialConnected?.google ? 'Verified' : 'Not verified'}} <br />\\r\\n          <strong>Twitter: </strong> {{socialConnected?.twitter ? 'Verified' : 'Not verified'}}\\r\\n        </p>\\r\\n        <hr />\\r\\n        <div class=\\\"form-group text-center socials-box social-box-new\\\">\\r\\n          <div class=\\\"social-login facebook\\\">\\r\\n            <facebook-login (onConnected)=\\\"onConnected($event)\\\"></facebook-login>\\r\\n          </div>\\r\\n          <div class=\\\"social-login google\\\">\\r\\n            <google-login (onConnected)=\\\"onConnected($event)\\\"></google-login>\\r\\n          </div>\\r\\n          <p class=\\\"text-center\\\">\\r\\n            <a [href]=\\\"twitterConnectLink\\\" class=\\\"btn btn-info\\\"><i class=\\\"fa fa-twitter\\\"></i> Twitter</a>\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-9\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tab-content\\\">\\r\\n          <div class=\\\"shop-tab-block show active\\\" *ngIf=\\\"tab === 'basic'\\\">\\r\\n            <shop-basic-info [shop]=\\\"shop\\\"></shop-basic-info>\\r\\n          </div>\\r\\n          <div class=\\\"shop-tab-block\\\" *ngIf=\\\"tab === 'business'\\\">\\r\\n            <shop-business-info [shop]=\\\"shop\\\"></shop-business-info>\\r\\n          </div>\\r\\n          <div class=\\\"shop-tab-block\\\" *ngIf=\\\"tab === 'social'\\\">\\r\\n            <shop-social-info [shop]=\\\"shop\\\"></shop-social-info>\\r\\n          </div>\\r\\n          <div class=\\\"shop-tab-block\\\" *ngIf=\\\"tab === 'shipping'\\\">\\r\\n            <shop-shipping-info [shop]=\\\"shop\\\"></shop-shipping-info>\\r\\n          </div>\\r\\n          <div class=\\\"shop-tab-block\\\" *ngIf=\\\"tab === 'notification'\\\">\\r\\n            <shop-notification-info [shop]=\\\"shop\\\"></shop-notification-info>\\r\\n          </div>\\r\\n          <div class=\\\"shop-tab-block\\\" *ngIf=\\\"tab === 'bank'\\\">\\r\\n            <shop-bank-info [shop]=\\\"shop\\\"></shop-bank-info>\\r\\n          </div>\\r\\n          <div class=\\\"shop-tab-block\\\" *ngIf=\\\"tab === 'review'\\\">\\r\\n            <shop-review [shopId]=\\\"shop._id\\\" *ngIf=\\\"shop._id\\\"></shop-review>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","import { Injectable } from '@angular/core';\r\nimport { RestangularModule, Restangular } from 'ngx-restangular';\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\n@Injectable()\r\nexport class ShopService {\r\n  constructor(private restangular: Restangular) { }\r\n\r\n  me(): Promise<any> {\r\n    return this.restangular.one('shops', 'me').get().toPromise();\r\n  }\r\n\r\n  update(id, data): Promise<any> {\r\n    return this.restangular.one('shops', id).customPUT(data).toPromise();\r\n  }\r\n\r\n  findOne(id): Promise<any> {\r\n    return this.restangular.one('shops', id).get().toPromise();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ShopUpdateComponent } from './shop-update/shop-update.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'update', component: ShopUpdateComponent,\r\n    data: {\r\n      title: 'Shop Update',\r\n      urls: [{ title: 'Profile Update' }]\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ShopRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}