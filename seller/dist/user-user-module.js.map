{"version":3,"sources":["./src/app/user/profile-card/profile-card.component.ts","./src/app/user/user.module.ts","./src/app/user/user.routing.ts","./src/app/user/user.service.ts","./src/app/user/profile-complain/profile-complain.component.ts","./src/app/user/profile-card/profile-card.html","./src/app/user/profile-complain/profile-complain.html","./src/app/user/profile/profile-update.component.ts","./src/app/user/profile/form.html"],"names":[],"mappings":"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","file":"user-user-module.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'profile-card',\r\n  templateUrl: './profile-card.html'\r\n})\r\nexport class ProfileCardComponent implements OnInit {\r\n  @Input() user: any;\r\n\r\n  // TODO - add option to query user from server by user id\r\n  constructor(){ }\r\n\r\n  ngOnInit() {\r\n    // TODO - add event emitter listen the change\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UserRoutingModule } from './user.routing';\r\nimport { ProfileCardComponent } from './profile-card/profile-card.component';\r\nimport { ProfileComplainComponent } from './profile-complain/profile-complain.component';\r\nimport { UserService } from './user.service';\r\nimport { ProfileUpdateComponent } from './profile/profile-update.component';\r\nimport { MediaModule } from '../media/media.module';\r\nimport { UtilsModule } from '../utils/utils.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    //our custom module\r\n    UserRoutingModule,\r\n    NgbModule,\r\n    MediaModule,\r\n    UtilsModule\r\n  ],\r\n  declarations: [\r\n    ProfileUpdateComponent,\r\n    ProfileCardComponent,\r\n    ProfileComplainComponent\r\n  ],\r\n  providers: [UserService],\r\n  exports: [\r\n    ProfileCardComponent\r\n  ],\r\n  entryComponents: [ProfileComplainComponent]\r\n})\r\nexport class UserModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProfileUpdateComponent } from './profile/profile-update.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'profile/update', component: ProfileUpdateComponent,\r\n    data: {\r\n      title: 'Profile update',\r\n      urls: [{ title: 'Profile Update' }]\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { RestangularModule, Restangular } from 'ngx-restangular';\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  constructor(private restangular: Restangular) { }\r\n\r\n  me(): Promise<any> {\r\n    return this.restangular.one('users', 'me').get().toPromise();\r\n  }\r\n\r\n  updateMe(data): Promise<any> {\r\n    return this.restangular.all('users').customPUT(data).toPromise();\r\n  }\r\n\r\n  findOne(id): Promise<any> {\r\n    return this.restangular.one('users', id).get().toPromise();\r\n  }\r\n\r\n  complain(params: any): Promise<any> {\r\n    return this.restangular.one('complains').customPOST(params).toPromise();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UserService } from '../user.service';\r\nimport { ToastyService } from 'ng2-toasty';\r\n@Component({\r\n  selector: 'profile-complain',\r\n  templateUrl: './profile-complain.html'\r\n})\r\nexport class ProfileComplainComponent implements OnInit {\r\n\r\n  public content: String = \"\";\r\n  constructor(public activeModal: NgbActiveModal, private userService: UserService, private toasty: ToastyService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  submit() {\r\n    if (this.content === '') {\r\n      return this.toasty.error('Please leave some text in the complain box');\r\n    }\r\n\r\n    this.userService.complain({ content: this.content }).then((res) => {\r\n      this.toasty.success('Complain has been sent!');\r\n    }).catch((err) => {\r\n      this.toasty.error('Something went wrong, please check and try again!');\r\n    })\r\n    this.activeModal.close();\r\n  }\r\n}\r\n","export default \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"m-t-30 text-center\\\">\\r\\n      <img class=\\\"img-circle\\\" [src]=\\\"user.avatarUrl\\\" width=\\\"150\\\" *ngIf=\\\"user.avatarUrl\\\" />\\r\\n      <h4 class=\\\"card-title m-t-10\\\">{{user.name}}</h4>\\r\\n      <h6 class=\\\"card-subtitle\\\">seller</h6>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div>\\r\\n    <hr>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <small class=\\\"text-muted\\\">Email address </small>\\r\\n    <h6>{{user.email}}</h6>\\r\\n    <small class=\\\"text-muted p-t-30 db\\\">Phone</small>\\r\\n    <h6>{{user.phoneNumber || 'N/A'}}</h6>\\r\\n    <small class=\\\"text-muted p-t-30 db\\\">Address</small>\\r\\n    <h6>{{user.address || 'N/A'}}</h6>\\r\\n    <div *ngIf=\\\"user.socialProfile\\\">\\r\\n      <small class=\\\"text-muted p-t-30 db\\\">Social Profile</small><br />\\r\\n      <button class=\\\"btn btn-circle btn-secondary\\\"><i class=\\\"fa fa-facebook\\\"></i></button>\\r\\n      <button class=\\\"btn btn-circle btn-secondary\\\"><i class=\\\"fa fa-twitter\\\"></i>\\r\\n      </button><button class=\\\"btn btn-circle btn-secondary\\\"><i class=\\\"fa fa-youtube\\\"></i></button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div>\\r\\n    <hr>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <small class=\\\"text-muted\\\">Created / joined at </small>\\r\\n    <h6>{{user.createdAt | date}}</h6>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"modal-content\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">\\r\\n      <label>Send Complain to Admin</label>\\r\\n    </h4>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <h5>Complain (*):</h5>\\r\\n    <textarea rows=\\\"3\\\" cols=\\\"44\\\" [(ngModel)]=\\\"content\\\" placeholder=\\\"Leave some text here..\\\"></textarea>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"submit()\\\">Send</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"activeModal.close('Close click')\\\">Close</button>\\r\\n  </div>\\r\\n</div>\";","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../user.service';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ProfileComplainComponent } from '../profile-complain/profile-complain.component';\r\nimport { ToastyService } from 'ng2-toasty';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'profile-update',\r\n  templateUrl: './form.html'\r\n})\r\nexport class ProfileUpdateComponent implements OnInit {\r\n  public info: any = {};\r\n  public avatarUrl = '';\r\n  public isSubmitted = false;\r\n  public avatarOptions: any = {};\r\n  public user: any = {};\r\n  private userId: string;\r\n\r\n  constructor(private router: Router, private userService: UserService, private toasty: ToastyService, private route: ActivatedRoute, private modalService: NgbModal) { }\r\n\r\n  ngOnInit() {\r\n    this.avatarOptions = {\r\n      url: window.appConfig.apiBaseUrl + '/users/avatar',\r\n      fileFieldName: 'avatar',\r\n      onFinish: (resp) => {\r\n        this.avatarUrl = resp.data.url;\r\n        this.user.avatarUrl = resp.data.url;\r\n      }\r\n    };\r\n\r\n    this.userService.me().then(resp => {\r\n      this.user = resp.data;\r\n      this.info = _.pick(resp.data, [\r\n        'name', 'email', 'address', 'phoneNumber'\r\n      ]);\r\n      this.avatarUrl = resp.data.avatarUrl;\r\n    });\r\n  }\r\n\r\n  submit(frm: any) {\r\n    this.isSubmitted = true;\r\n    if (!frm.valid) {\r\n      return this.toasty.error('Something went wrong, please check and try again!');\r\n    }\r\n\r\n    this.userService.updateMe(this.info).then(resp => {\r\n      this.toasty.success('Updated successfuly!');\r\n    }).catch((err) => this.toasty.error(err.data.data.message || err.data.data.email));\r\n  }\r\n\r\n  complain() {\r\n    let ngbModalOptions: NgbModalOptions = {\r\n      backdrop : 'static',\r\n      keyboard : false\r\n    };\r\n    this.modalService.open(ProfileComplainComponent, ngbModalOptions);\r\n  }\r\n}\r\n","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col col-md-3\\\">\\r\\n    <profile-card [user]=\\\"user\\\"></profile-card>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-9\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <form role=\\\"form\\\" #frm=\\\"ngForm\\\" (submit)=\\\"submit(frm)\\\" ngNativeValidate method=\\\"post\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>First and last name (*)</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter name\\\" [(ngModel)]=\\\"info.name\\\" required name=\\\"name\\\" #name=\\\"ngModel\\\" />\\r\\n                <div *ngIf=\\\"name.errors && (name.dirty || name.touched || isSubmitted)\\\">\\r\\n                  <p [hidden]=\\\"!name.errors.required\\\" class=\\\"required-text\\\">\\r\\n                    Please enter user first name and last name!\\r\\n                  </p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Email (*)</label>\\r\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"user@example.com\\\" [(ngModel)]=\\\"info.email\\\" name=\\\"email\\\" required #email=\\\"ngModel\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\" disabled />\\r\\n                <div *ngIf=\\\"email.errors && (email.dirty || email.touched || isSubmitted)\\\">\\r\\n                  <p [hidden]=\\\"!email.errors.required\\\" class=\\\"required-text\\\">\\r\\n                    Email is required.\\r\\n                  </p>\\r\\n                  <p [hidden]=\\\"!email.errors.pattern\\\" class=\\\"required-text\\\">\\r\\n                    Please enter a valid email address.\\r\\n                  </p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Phone number</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"info.phoneNumber\\\" name=\\\"phone\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Address</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"info.address\\\" name=\\\"address\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Password (*)</label>\\r\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"info.password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" minlength=\\\"6\\\" />\\r\\n                <div *ngIf=\\\"password.errors && (password.dirty || password.touched || isSubmitted)\\\">\\r\\n                  <p [hidden]=\\\"!password.errors.minlength\\\" class=\\\"required-text\\\">\\r\\n                    Password must be at least 6 characters!\\r\\n                  </p>\\r\\n                </div>\\r\\n                <p class=\\\"help help-block\\\">\\r\\n                  <small>Blank to keep current password</small>\\r\\n                </p>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col col-md-6\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col col-md-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Avatar</label>\\r\\n                    <div class=\\\"clearfix\\\"></div>\\r\\n                    <img [src]=\\\"avatarUrl\\\" class=\\\"avatar\\\" width=\\\"150\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col col-md-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>&nbsp;</label>\\r\\n                    <file-upload [options]=\\\"avatarOptions\\\"></file-upload>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col col-md-12\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"complain()\\\">Complain</button>\\r\\n                &nbsp;\\r\\n                <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";"],"sourceRoot":"webpack:///"}