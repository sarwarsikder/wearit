{"version":3,"file":"ngx-stripe.js.map","sources":["ng://ngx-stripe/lib/services/stripe-instance.class.ts","ng://ngx-stripe/lib/interfaces/ngx-stripe.interface.ts","ng://ngx-stripe/lib/services/window-ref.service.ts","ng://ngx-stripe/lib/services/document-ref.service.ts","ng://ngx-stripe/lib/services/api-loader.service.ts","ng://ngx-stripe/lib/services/stripe.service.ts","ng://ngx-stripe/lib/services/stripe-elements.service.ts","ng://ngx-stripe/lib/components/card.component.ts","ng://ngx-stripe/lib/directives/card-group.directive.ts","ng://ngx-stripe/lib/components/card-number.component.ts","ng://ngx-stripe/lib/components/card-expiry.component.ts","ng://ngx-stripe/lib/components/card-cvc.component.ts","ng://ngx-stripe/lib/components/fpx-bank.component.ts","ng://ngx-stripe/lib/components/ideal-bank.component.ts","ng://ngx-stripe/lib/components/iban.component.ts","ng://ngx-stripe/lib/components/au-bank-account.component.ts","ng://ngx-stripe/lib/components/payment-request-button.component.ts","ng://ngx-stripe/lib/services/stripe-factory.service.ts","ng://ngx-stripe/lib/ngx-stripe.module.ts"],"sourcesContent":["import { BehaviorSubject, from, Observable } from 'rxjs';\nimport { filter, first, map, switchMap } from 'rxjs/operators';\n\nimport {\n  ConfirmAuBecsDebitPaymentData,\n  ConfirmAuBecsDebitSetupData,\n  ConfirmBancontactPaymentData,\n  ConfirmBancontactPaymentOptions,\n  ConfirmCardPaymentData,\n  ConfirmCardPaymentOptions,\n  ConfirmEpsPaymentData,\n  ConfirmEpsPaymentOptions,\n  ConfirmFpxPaymentData,\n  ConfirmFpxPaymentOptions,\n  ConfirmGiropayPaymentData,\n  ConfirmGiropayPaymentOptions,\n  ConfirmIdealPaymentData,\n  ConfirmIdealPaymentOptions,\n  ConfirmP24PaymentData,\n  ConfirmP24PaymentOptions,\n  ConfirmCardSetupData,\n  ConfirmCardSetupOptions,\n  ConfirmSepaDebitPaymentData,\n  ConfirmSepaDebitSetupData,\n  CreatePaymentMethodData,\n  CreateSourceData,\n  CreateTokenIbanData,\n  CreateTokenCardData,\n  CreateTokenPiiData,\n  CreateTokenBankAccountData,\n  PaymentIntent,\n  PaymentMethod,\n  PaymentRequest,\n  PaymentRequestOptions,\n  RedirectToCheckoutOptions,\n  RetrieveSourceParam,\n  SetupIntent,\n  Stripe,\n  StripeCardElement,\n  StripeCardNumberElement,\n  StripeCardCvcElement,\n  StripeConstructorOptions,\n  StripeElements,\n  StripeElementsOptions,\n  StripeElement,\n  StripeError,\n  StripeIbanElement,\n  Source,\n  Token,\n  TokenCreateParams\n} from '@stripe/stripe-js';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { WindowRef } from './window-ref.service';\nimport {\n  LazyStripeAPILoader,\n  LazyStripeAPILoaderStatus\n} from './api-loader.service';\n\nexport class StripeInstance implements StripeServiceInterface {\n  private stripe$ = new BehaviorSubject<Stripe | undefined>(undefined);\n  stripe = this.stripe$\n    .asObservable()\n    .pipe(filter((stripe) => Boolean(stripe)));\n\n  constructor(\n    private loader: LazyStripeAPILoader,\n    private window: WindowRef,\n    private key: string,\n    private options?: StripeConstructorOptions\n  ) {\n    this.loader\n      .asStream()\n      .pipe(\n        filter((status: LazyStripeAPILoaderStatus) => status.loaded === true),\n        first(),\n        map(() => (this.window.getNativeWindow() as any).Stripe)\n      )\n      .subscribe((stripeInstance: any) => {\n        const stripe = this.options\n          ? (stripeInstance(this.key, this.options) as Stripe)\n          : (stripeInstance(this.key) as Stripe);\n\n        this.stripe$.next(stripe);\n      });\n  }\n\n  getInstance(): Stripe | undefined {\n    return this.stripe$.getValue();\n  }\n\n  elements(options?: StripeElementsOptions): Observable<StripeElements> {\n    return this.stripe$.asObservable().pipe(\n      filter((stripe) => Boolean(stripe)),\n      map((stripe) => stripe.elements(options)),\n      first()\n    );\n  }\n\n  redirectToCheckout(\n    options?: RedirectToCheckoutOptions\n  ): Observable<never | { error: StripeError }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.redirectToCheckout(options))),\n      first()\n    );\n  }\n\n  confirmAuBecsDebitPayment(\n    clientSecret: string,\n    data?: ConfirmAuBecsDebitPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmAuBecsDebitPayment(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  confirmBancontactPayment(\n    clientSecret: string,\n    data?: ConfirmBancontactPaymentData,\n    options?: ConfirmBancontactPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmBancontactPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmCardPayment(\n    clientSecret: string,\n    data?: ConfirmCardPaymentData,\n    options?: ConfirmCardPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmCardPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmEpsPayment(\n    clientSecret: string,\n    data?: ConfirmEpsPaymentData,\n    options?: ConfirmEpsPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmEpsPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmFpxPayment(\n    clientSecret: string,\n    data?: ConfirmFpxPaymentData,\n    options?: ConfirmFpxPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmFpxPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmGiropayPayment(\n    clientSecret: string,\n    data?: ConfirmGiropayPaymentData,\n    options?: ConfirmGiropayPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmGiropayPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmIdealPayment(\n    clientSecret: string,\n    data?: ConfirmIdealPaymentData,\n    options?: ConfirmIdealPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmIdealPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmP24Payment(\n    clientSecret: string,\n    data?: ConfirmP24PaymentData,\n    options?: ConfirmP24PaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmP24Payment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmSepaDebitPayment(\n    clientSecret: string,\n    data?: ConfirmSepaDebitPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmSepaDebitPayment(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  handleCardAction(\n    clientSecret: string\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.handleCardAction(clientSecret))),\n      first()\n    );\n  }\n\n  createPaymentMethod(\n    paymentMethodData: CreatePaymentMethodData\n  ): Observable<{\n    paymentMethod?: PaymentMethod;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.createPaymentMethod(paymentMethodData))\n      ),\n      first()\n    );\n  }\n\n  retrievePaymentIntent(\n    clientSecret: string\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.retrievePaymentIntent(clientSecret))),\n      first()\n    );\n  }\n\n  confirmAuBecsDebitSetup(\n    clientSecret: string,\n    data?: ConfirmAuBecsDebitSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmAuBecsDebitSetup(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  confirmCardSetup(\n    clientSecret: string,\n    data?: ConfirmCardSetupData,\n    options?: ConfirmCardSetupOptions\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmCardSetup(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmSepaDebitSetup(\n    clientSecret: string,\n    data?: ConfirmSepaDebitSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmSepaDebitSetup(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  retrieveSetupIntent(\n    clientSecret: string\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmSepaDebitSetup(clientSecret))),\n      first()\n    );\n  }\n\n  paymentRequest(options: PaymentRequestOptions): PaymentRequest | undefined {\n    const stripe = this.getInstance();\n\n    return stripe ? stripe.paymentRequest(options) : undefined;\n  }\n\n  createToken(\n    tokenType: StripeIbanElement,\n    data: CreateTokenIbanData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: StripeCardElement | StripeCardNumberElement,\n    data?: CreateTokenCardData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'pii',\n    data: CreateTokenPiiData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'bank_account',\n    data: CreateTokenBankAccountData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'cvc_update',\n    element?: StripeCardCvcElement\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'account',\n    data: TokenCreateParams.Account\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'person',\n    data: TokenCreateParams.Person\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(tokenType, data) {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.createToken(tokenType, data))),\n      first()\n    );\n  }\n\n  createSource(\n    element: StripeElement,\n    sourceData: CreateSourceData\n  ): Observable<{ source?: Source; error?: StripeError }>;\n  createSource(\n    sourceData: CreateSourceData\n  ): Observable<{ source?: Source; error?: StripeError }>;\n  createSource(a, b?): Observable<{ source?: Source; error?: StripeError }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.createSource(a, b))),\n      first()\n    );\n  }\n\n  retrieveSource(\n    source: RetrieveSourceParam\n  ): Observable<{ source?: Source; error?: StripeError }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.retrieveSource(source))),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  handleCardPayment(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).handleCardPayment(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  confirmPaymentIntent(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).confirmPaymentIntent(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  handleCardSetup(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).handleCardSetup(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  confirmSetupIntent(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).confirmSetupIntent(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  handleFpxPayment(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).handleFpxPayment(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StripeConstructorOptions } from '@stripe/stripe-js';\n\nexport const STRIPE_PUBLISHABLE_KEY = new InjectionToken<string>(\n  'Stripe Publishable Key'\n);\nexport const STRIPE_OPTIONS = new InjectionToken<StripeConstructorOptions>(\n  'Stripe Options'\n);\n","import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class WindowRef {\n  constructor(@Inject(PLATFORM_ID) public platformId: any) {}\n\n  public getNativeWindow(): Window {\n    if (isPlatformBrowser(this.platformId)) {\n      return window;\n    }\n    return {} as Window;\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class DocumentRef {\n  constructor(@Inject(PLATFORM_ID) public platformId: any) {}\n\n  public getNativeDocument(): Document {\n    if (isPlatformBrowser(this.platformId)) {\n      return document;\n    }\n    return {} as Document;\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\nimport { Observable, BehaviorSubject } from 'rxjs';\n\nimport { WindowRef } from './window-ref.service';\nimport { DocumentRef } from './document-ref.service';\n\nexport interface LazyStripeAPILoaderStatus {\n  loaded: boolean;\n  loading: boolean;\n  error: boolean;\n}\n\n@Injectable()\nexport class LazyStripeAPILoader {\n  public status = new BehaviorSubject<LazyStripeAPILoaderStatus>({\n    error: false,\n    loaded: false,\n    loading: false\n  });\n\n  constructor(\n    @Inject(PLATFORM_ID) public platformId: any,\n    public window: WindowRef,\n    public document: DocumentRef\n  ) {}\n\n  public asStream(): Observable<LazyStripeAPILoaderStatus> {\n    this.load();\n    return this.status.asObservable();\n  }\n\n  public isReady(): boolean {\n    return this.status.getValue().loaded;\n  }\n\n  public load() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    const status: LazyStripeAPILoaderStatus = this.status.getValue();\n    if (this.window.getNativeWindow().hasOwnProperty('Stripe')) {\n      this.status.next({\n        error: false,\n        loaded: true,\n        loading: false\n      });\n    } else if (!status.loaded && !status.loading) {\n      this.status.next({\n        ...status,\n        loading: true\n      });\n\n      const script = this.document.getNativeDocument().createElement('script');\n      script.type = 'text/javascript';\n      script.async = true;\n      script.defer = true;\n      script.src = 'https://js.stripe.com/v3/';\n\n      script.onload = () => {\n        this.status.next({\n          error: false,\n          loaded: true,\n          loading: false\n        });\n      };\n\n      script.onerror = () => {\n        this.status.next({\n          error: true,\n          loaded: false,\n          loading: false\n        });\n      };\n\n      this.document.getNativeDocument().body.appendChild(script);\n    }\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport {\n  ConfirmAuBecsDebitPaymentData,\n  ConfirmAuBecsDebitSetupData,\n  ConfirmBancontactPaymentData,\n  ConfirmBancontactPaymentOptions,\n  ConfirmCardPaymentData,\n  ConfirmCardPaymentOptions,\n  ConfirmEpsPaymentData,\n  ConfirmEpsPaymentOptions,\n  ConfirmFpxPaymentData,\n  ConfirmFpxPaymentOptions,\n  ConfirmGiropayPaymentData,\n  ConfirmGiropayPaymentOptions,\n  ConfirmIdealPaymentData,\n  ConfirmIdealPaymentOptions,\n  ConfirmP24PaymentData,\n  ConfirmP24PaymentOptions,\n  ConfirmCardSetupData,\n  ConfirmCardSetupOptions,\n  ConfirmSepaDebitPaymentData,\n  ConfirmSepaDebitSetupData,\n  CreatePaymentMethodData,\n  CreateSourceData,\n  CreateTokenIbanData,\n  CreateTokenCardData,\n  CreateTokenPiiData,\n  CreateTokenBankAccountData,\n  PaymentIntent,\n  PaymentMethod,\n  PaymentRequest,\n  PaymentRequestOptions,\n  RedirectToCheckoutOptions,\n  RetrieveSourceParam,\n  SetupIntent,\n  Stripe,\n  StripeCardElement,\n  StripeCardNumberElement,\n  StripeCardCvcElement,\n  StripeConstructorOptions,\n  StripeElements,\n  StripeElementsOptions,\n  StripeElement,\n  StripeError,\n  StripeIbanElement,\n  Source,\n  Token,\n  TokenCreateParams\n} from '@stripe/stripe-js';\n\nimport {\n  STRIPE_PUBLISHABLE_KEY,\n  STRIPE_OPTIONS\n} from '../interfaces/ngx-stripe.interface';\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { WindowRef } from './window-ref.service';\nimport {\n  LazyStripeAPILoader,\n  LazyStripeAPILoaderStatus\n} from './api-loader.service';\n\nimport { StripeInstance } from './stripe-instance.class';\n\n@Injectable()\nexport class StripeService implements StripeServiceInterface {\n  stripe!: StripeInstance;\n\n  constructor(\n    @Inject(STRIPE_PUBLISHABLE_KEY) public key: string,\n    @Inject(STRIPE_OPTIONS) public options: StripeConstructorOptions,\n    public loader: LazyStripeAPILoader,\n    public window: WindowRef\n  ) {\n    if (key) {\n      this.stripe = new StripeInstance(this.loader, this.window, key, options);\n    }\n  }\n\n  getStripeReference(): Observable<any> {\n    return this.loader.asStream().pipe(\n      filter((status: LazyStripeAPILoaderStatus) => status.loaded === true),\n      map(() => (this.window.getNativeWindow() as any).Stripe)\n    );\n  }\n\n  getInstance(): Stripe | undefined {\n    return this.stripe.getInstance();\n  }\n\n  setKey(key: string, options?: StripeConstructorOptions) {\n    return this.changeKey(key, options);\n  }\n\n  changeKey(key: string, options?: StripeConstructorOptions) {\n    this.stripe = new StripeInstance(this.loader, this.window, key, options);\n\n    return this.stripe;\n  }\n\n  elements(options?: StripeElementsOptions): Observable<StripeElements> {\n    return this.stripe.elements(options);\n  }\n\n  redirectToCheckout(\n    options?: RedirectToCheckoutOptions\n  ): Observable<never | { error: StripeError }> {\n    return this.stripe.redirectToCheckout(options);\n  }\n\n  confirmAuBecsDebitPayment(\n    clientSecret: string,\n    data?: ConfirmAuBecsDebitPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmAuBecsDebitPayment(clientSecret, data);\n  }\n\n  confirmBancontactPayment(\n    clientSecret: string,\n    data?: ConfirmBancontactPaymentData,\n    options?: ConfirmBancontactPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmBancontactPayment(clientSecret, data, options);\n  }\n\n  confirmCardPayment(\n    clientSecret: string,\n    data?: ConfirmCardPaymentData,\n    options?: ConfirmCardPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmCardPayment(clientSecret, data, options);\n  }\n\n  confirmEpsPayment(\n    clientSecret: string,\n    data?: ConfirmEpsPaymentData,\n    options?: ConfirmEpsPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmEpsPayment(clientSecret, data, options);\n  }\n\n  confirmFpxPayment(\n    clientSecret: string,\n    data?: ConfirmFpxPaymentData,\n    options?: ConfirmFpxPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmFpxPayment(clientSecret, data, options);\n  }\n\n  confirmGiropayPayment(\n    clientSecret: string,\n    data?: ConfirmGiropayPaymentData,\n    options?: ConfirmGiropayPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmGiropayPayment(clientSecret, data, options);\n  }\n\n  confirmIdealPayment(\n    clientSecret: string,\n    data?: ConfirmIdealPaymentData,\n    options?: ConfirmIdealPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmIdealPayment(clientSecret, data, options);\n  }\n\n  confirmP24Payment(\n    clientSecret: string,\n    data?: ConfirmP24PaymentData,\n    options?: ConfirmP24PaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmP24Payment(clientSecret, data, options);\n  }\n\n  confirmSepaDebitPayment(\n    clientSecret: string,\n    data?: ConfirmSepaDebitPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmSepaDebitPayment(clientSecret, data);\n  }\n\n  handleCardAction(\n    clientSecret: string\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.handleCardAction(clientSecret);\n  }\n\n  createPaymentMethod(\n    paymentMethodData: CreatePaymentMethodData\n  ): Observable<{\n    paymentMethod?: PaymentMethod;\n    error?: StripeError;\n  }> {\n    return this.stripe.createPaymentMethod(paymentMethodData);\n  }\n\n  retrievePaymentIntent(\n    clientSecret: string\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.retrievePaymentIntent(clientSecret);\n  }\n\n  confirmAuBecsDebitSetup(\n    clientSecret: string,\n    data?: ConfirmAuBecsDebitSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmAuBecsDebitSetup(clientSecret, data);\n  }\n\n  confirmCardSetup(\n    clientSecret: string,\n    data?: ConfirmCardSetupData,\n    options?: ConfirmCardSetupOptions\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmCardSetup(clientSecret, data, options);\n  }\n\n  confirmSepaDebitSetup(\n    clientSecret: string,\n    data?: ConfirmSepaDebitSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmSepaDebitSetup(clientSecret, data);\n  }\n\n  retrieveSetupIntent(\n    clientSecret: string\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.retrieveSetupIntent(clientSecret);\n  }\n\n  paymentRequest(options: PaymentRequestOptions): PaymentRequest | undefined {\n    return this.stripe.paymentRequest(options);\n  }\n\n  createToken(\n    tokenType: StripeIbanElement,\n    data: CreateTokenIbanData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: StripeCardElement | StripeCardNumberElement,\n    data?: CreateTokenCardData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'pii',\n    data: CreateTokenPiiData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'bank_account',\n    data: CreateTokenBankAccountData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'cvc_update',\n    element?: StripeCardCvcElement\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'account',\n    data: TokenCreateParams.Account\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'person',\n    data: TokenCreateParams.Person\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(tokenType, data) {\n    return this.stripe.createToken(tokenType, data);\n  }\n\n  createSource(\n    element: StripeElement,\n    sourceData: CreateSourceData\n  ): Observable<{ source?: Source; error?: StripeError }>;\n  createSource(\n    sourceData: CreateSourceData\n  ): Observable<{ source?: Source; error?: StripeError }>;\n  createSource(a, b?): Observable<{ source?: Source; error?: StripeError }> {\n    return this.stripe.createSource(a, b);\n  }\n\n  retrieveSource(\n    source: RetrieveSourceParam\n  ): Observable<{ source?: Source; error?: StripeError }> {\n    return this.stripe.retrieveSource(source);\n  }\n\n  /**\n   * @deprecated\n   */\n  handleCardPayment(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.handleCardPayment(clientSecret, element, data);\n  }\n\n  /**\n   * @deprecated\n   */\n  confirmPaymentIntent(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmPaymentIntent(clientSecret, element, data);\n  }\n\n  /**\n   * @deprecated\n   */\n  handleCardSetup(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.handleCardSetup(clientSecret, element, data);\n  }\n\n  /**\n   * @deprecated\n   */\n  confirmSetupIntent(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmSetupIntent(clientSecret, element, data);\n  }\n\n  /**\n   * @deprecated\n   */\n  handleFpxPayment(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.handleFpxPayment(clientSecret, element, data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport {\n  PaymentRequest,\n  PaymentRequestOptions,\n  StripeCardElementOptions,\n  StripeAuBankAccountElementOptions,\n  StripeCardNumberElementOptions,\n  StripeCardExpiryElementOptions,\n  StripeElements,\n  StripeElementsOptions,\n  StripeFpxBankElementOptions,\n  StripeIbanElementOptions,\n  StripeIdealBankElementOptions,\n  StripePaymentRequestButtonElementOptions\n} from '@stripe/stripe-js';\n\nimport { StripeService } from './stripe.service';\n\n@Injectable()\nexport class StripeElementsService {\n  constructor(private stripeService: StripeService) {}\n\n  elements(\n    stripe,\n    options: StripeElementsOptions = {}\n  ): Observable<StripeElements> {\n    if (stripe) {\n      if (Object.keys(options).length > 0) {\n        return stripe.elements(options);\n      }\n      return stripe.elements();\n    } else {\n      if (Object.keys(options).length > 0) {\n        return this.stripeService.elements(options);\n      }\n      return this.stripeService.elements();\n    }\n  }\n\n  paymentRequest(\n    stripe,\n    options: PaymentRequestOptions\n  ): PaymentRequest | undefined {\n    return stripe\n      ? stripe.paymentRequest(options)\n      : this.stripeService.paymentRequest(options);\n  }\n\n  mergeOptions(\n    options: StripeCardElementOptions,\n    containerClass: string\n  ): StripeCardElementOptions;\n  mergeOptions(\n    options: StripeCardNumberElementOptions,\n    containerClass: string\n  ): StripeCardNumberElementOptions;\n  mergeOptions(\n    options: StripeCardExpiryElementOptions,\n    containerClass: string\n  ): StripeCardExpiryElementOptions;\n  mergeOptions(\n    options: StripeFpxBankElementOptions,\n    containerClass: string\n  ): StripeFpxBankElementOptions;\n  mergeOptions(\n    options: StripeIbanElementOptions,\n    containerClass: string\n  ): StripeIbanElementOptions;\n  mergeOptions(\n    options: StripeIdealBankElementOptions,\n    containerClass: string\n  ): StripeIdealBankElementOptions;\n  mergeOptions(\n    options: StripeAuBankAccountElementOptions,\n    containerClass: string\n  ): StripeAuBankAccountElementOptions;\n  mergeOptions(\n    options: StripePaymentRequestButtonElementOptions,\n    containerClass: string\n  ): StripePaymentRequestButtonElementOptions;\n  mergeOptions(options, containerClass: string) {\n    if (!containerClass || (options && options.classes)) {\n      return options || {};\n    }\n\n    if (!options || !options.classes) {\n      return {\n        ...(options || {}),\n        classes: {\n          base: containerClass,\n          complete: `${containerClass}--complete`,\n          empty: `${containerClass}--empty`,\n          focus: `${containerClass}--focus`,\n          invalid: `${containerClass}--invalid`,\n          webkitAutoFill: `${containerClass}--webkit-autoFill`\n        }\n      };\n    }\n\n    return options || {};\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeCardElementOptions,\n  StripeCardElement,\n  StripeElements,\n  StripeCardElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-card',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeCardComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeCardElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeCardElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeCardElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeCardElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeCardElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getCard() {\n    return this.element;\n  }\n\n  private createElement(options: Partial<StripeCardElementOptions> = {}) {\n    this.element = this.elements.create('card', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  Output,\n  EventEmitter\n} from '@angular/core';\n\nimport { StripeElements, StripeElementsOptions } from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Directive({\n  selector: 'ngx-stripe-card-group,[ngxStripeCardGroup]'\n})\nexport class StripeCardGroupDirective implements OnInit, OnChanges {\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() elements = new EventEmitter<StripeElements>();\n\n  _elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const elementsOptions = this.elementsOptions;\n    const stripe = this.stripe;\n\n    if (changes.elementsOptions || changes.stripe || !this._elements) {\n      this._elements = await this.stripeElementsService\n        .elements(stripe, elementsOptions)\n        .toPromise();\n      this.elements.emit(this._elements);\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this._elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.elements.emit(this._elements);\n\n      this.state = 'ready';\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElements,\n  StripeCardNumberElement,\n  StripeCardNumberElementOptions,\n  StripeCardNumberElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { StripeCardGroupDirective } from '../directives/card-group.directive';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-card-number',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeCardNumberComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeCardNumberElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeCardNumberElementOptions>;\n\n  @Output() load = new EventEmitter<StripeCardNumberElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeCardNumberElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  cardGroupSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private cardGroup: StripeCardGroupDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.options || changes.containerClass) {\n      this.setupElement('options');\n    }\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe(\n        (elements: StripeElements) => {\n          this.elements = elements;\n          this.setupElement('elements');\n        }\n      );\n    } else {\n      throw new Error(\n        'StripeCardNumberComponent must have StripeCardGroupDirective parent'\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeCardNumberElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getCardNumber() {\n    return this.element;\n  }\n\n  private setupElement(source: 'elements' | 'options') {\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardNumber', options);\n      this.element.on('change', (ev) => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n\n      this.element.mount(this.stripeElementRef.nativeElement);\n\n      this.load.emit(this.element);\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElements,\n  StripeCardExpiryElement,\n  StripeCardExpiryElementOptions,\n  StripeCardExpiryElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { StripeCardGroupDirective } from '../directives/card-group.directive';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-card-expiry',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeCardExpiryComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeCardExpiryElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeCardExpiryElementOptions>;\n\n  @Output() load = new EventEmitter<StripeCardExpiryElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeCardExpiryElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  cardGroupSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private cardGroup: StripeCardGroupDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.options || changes.containerClass) {\n      this.setupElement('options');\n    }\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe(\n        (elements: StripeElements) => {\n          this.elements = elements;\n          this.setupElement('elements');\n        }\n      );\n    } else {\n      throw new Error(\n        'StripeCardExpiryComponent must have StripeCardGroupDirective parent'\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeCardExpiryElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getCardExpiry() {\n    return this.element;\n  }\n\n  private setupElement(source: 'elements' | 'options') {\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardExpiry', options);\n      this.element.on('change', (ev) => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n\n      this.element.mount(this.stripeElementRef.nativeElement);\n\n      this.load.emit(this.element);\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElements,\n  StripeCardCvcElement,\n  StripeCardCvcElementChangeEvent,\n  StripeCardCvcElementOptions\n} from '@stripe/stripe-js';\n\nimport { StripeCardGroupDirective } from '../directives/card-group.directive';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-card-cvc',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeCardCvcComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeCardCvcElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeCardCvcElementOptions>;\n\n  @Output() load = new EventEmitter<StripeCardCvcElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeCardCvcElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  cardGroupSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private cardGroup: StripeCardGroupDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.options || changes.containerClass) {\n      this.setupElement('options');\n    }\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe(\n        (elements: StripeElements) => {\n          this.elements = elements;\n          this.setupElement('elements');\n        }\n      );\n    } else {\n      throw new Error(\n        'StripeCardCvcComponent must have StripeCardGroupDirective parent'\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeCardCvcElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getCardCvc() {\n    return this.element;\n  }\n\n  private setupElement(source: 'elements' | 'options') {\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardCvc', options);\n      this.element.on('change', (ev) => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n\n      this.element.mount(this.stripeElementRef.nativeElement);\n\n      this.load.emit(this.element);\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeFpxBankElement,\n  StripeFpxBankElementChangeEvent,\n  StripeFpxBankElementOptions\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-fpx-bank',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeFpxBankComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeFpxBankElement;\n\n  @Input() containerClass: string;\n  @Input() options: StripeFpxBankElementOptions;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeFpxBankElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeFpxBankElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeFpxBankElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getFpxBank() {\n    return this.element;\n  }\n\n  private createElement(\n    options: StripeFpxBankElementOptions = { accountHolderType: 'individual' }\n  ) {\n    this.element = this.elements.create('fpxBank', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeIdealBankElement,\n  StripeIdealBankElementOptions,\n  StripeIdealBankElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-ideal-bank',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeIdealBankComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeIdealBankElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeIdealBankElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeIdealBankElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeIdealBankElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeIdealBankElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getIdealBank() {\n    return this.element;\n  }\n\n  private createElement(options: Partial<StripeIdealBankElementOptions> = {}) {\n    this.element = this.elements.create('idealBank', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeIbanElement,\n  StripeIbanElementOptions,\n  StripeIbanElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-iban',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeIbanComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeIbanElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeIbanElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeIbanElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeIbanElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeIbanElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getIban() {\n    return this.element;\n  }\n\n  private createElement(options: Partial<StripeIbanElementOptions> = {}) {\n    this.element = this.elements.create('iban', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeAuBankAccountElement,\n  StripeAuBankAccountElementOptions,\n  StripeAuBankAccountElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-au-bank-account',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeAuBankAccountComponent\n  implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeAuBankAccountElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeAuBankAccountElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeAuBankAccountElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeAuBankAccountElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeAuBankAccountElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getAuBankAccount() {\n    return this.element;\n  }\n\n  private createElement(\n    options: Partial<StripeAuBankAccountElementOptions> = {}\n  ) {\n    this.element = this.elements.create('auBankAccount', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { Observable, from } from 'rxjs';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  PaymentRequestOptions,\n  PaymentRequest,\n  CanMakePaymentResult,\n  PaymentRequestUpdateOptions,\n  StripePaymentRequestButtonElement,\n  StripePaymentRequestButtonElementOptions,\n  StripePaymentRequestButtonElementClickEvent,\n  PaymentRequestTokenEvent,\n  PaymentRequestPaymentMethodEvent,\n  PaymentRequestSourceEvent,\n  PaymentRequestShippingAddressEvent,\n  PaymentRequestShippingOptionEvent\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-payment-request-button',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripePaymentRequestButtonComponent implements OnChanges {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripePaymentRequestButtonElement;\n  paymentRequest!: PaymentRequest;\n\n  @Input() containerClass: string;\n  @Input() paymentOptions: PaymentRequestOptions;\n  @Input() options: StripePaymentRequestButtonElementOptions;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<{\n    paymentRequestButton: StripePaymentRequestButtonElement;\n    paymentRequest: PaymentRequest;\n  }>();\n\n  @Output() change = new EventEmitter<\n    StripePaymentRequestButtonElementClickEvent\n  >();\n  @Output() blur = new EventEmitter<void>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n\n  @Output() token = new EventEmitter<PaymentRequestTokenEvent>();\n  @Output() paymentMethod = new EventEmitter<\n    PaymentRequestPaymentMethodEvent\n  >();\n  @Output() source = new EventEmitter<PaymentRequestSourceEvent>();\n  @Output() cancel = new EventEmitter<void>();\n  @Output() shippingaddresschange = new EventEmitter<\n    PaymentRequestShippingAddressEvent\n  >();\n  @Output() shippingoptionchange = new EventEmitter<\n    PaymentRequestShippingOptionEvent\n  >();\n  @Output() notavailable = new EventEmitter<void>();\n\n  elements: StripeElements;\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    const elementsOptions = this.elementsOptions;\n    const stripe = this.stripe;\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      const elements = await this.stripeElementsService\n        .elements(stripe, elementsOptions)\n        .toPromise();\n      this.elements = elements;\n      updateElements = true;\n    }\n\n    if (changes.paymentOptions && this.paymentRequest) {\n      this.updateRequest(this.paymentOptions);\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.paymentRequest = this.stripeElementsService.paymentRequest(\n          stripe,\n          this.paymentOptions\n        );\n        this.paymentRequest.on('token', (ev) => this.token.emit(ev));\n        this.paymentRequest.on('paymentmethod', (ev) =>\n          this.paymentMethod.emit(ev)\n        );\n        this.paymentRequest.on('source', (ev) => this.source.emit(ev));\n        this.paymentRequest.on('cancel', () => this.cancel.emit());\n        this.paymentRequest.on('shippingaddresschange', (ev) =>\n          this.shippingaddresschange.emit(ev)\n        );\n        this.paymentRequest.on('shippingoptionchange', (ev) =>\n          this.shippingoptionchange.emit(ev)\n        );\n        this.element = this.elements.create('paymentRequestButton', {\n          paymentRequest: this.paymentRequest,\n          ...options\n        });\n\n        this.canMakePayment().subscribe((result) => {\n          if (result) {\n            this.element.on('click', (ev) => this.change.emit(ev));\n            this.element.on('blur', () => this.blur.emit());\n            this.element.on('focus', () => this.focus.emit());\n            this.element.on('ready', () => this.ready.emit());\n\n            this.element.mount(this.stripeElementRef.nativeElement);\n\n            this.load.emit({\n              paymentRequestButton: this.element,\n              paymentRequest: this.paymentRequest\n            });\n          } else {\n            this.notavailable.emit();\n          }\n        });\n      }\n    }\n  }\n\n  canMakePayment(): Observable<CanMakePaymentResult | null> {\n    return from(this.paymentRequest.canMakePayment());\n  }\n\n  update(options: Partial<StripePaymentRequestButtonElementOptions>) {\n    this.element.update(options);\n  }\n\n  updateRequest(options: PaymentRequestUpdateOptions) {\n    this.paymentRequest.update(options);\n  }\n\n  show() {\n    this.paymentRequest.show();\n  }\n\n  /**\n   * @deprecated\n   */\n  getButton() {\n    return this.element;\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { StripeConstructorOptions } from '@stripe/stripe-js';\n\nimport {\n  STRIPE_OPTIONS,\n  STRIPE_PUBLISHABLE_KEY\n} from '../interfaces/ngx-stripe.interface';\n\nimport { LazyStripeAPILoader } from './api-loader.service';\nimport { WindowRef } from './window-ref.service';\n\nimport { StripeInstance } from './stripe-instance.class';\n\n@Injectable()\nexport class StripeFactoryService {\n  constructor(\n    @Inject(STRIPE_PUBLISHABLE_KEY) public baseKey: string,\n    @Inject(STRIPE_OPTIONS) public baseOptions: StripeConstructorOptions,\n    public loader: LazyStripeAPILoader,\n    public window: WindowRef\n  ) {}\n\n  public create(\n    key?: string,\n    options?: StripeConstructorOptions\n  ): StripeInstance {\n    if (!key && !this.baseKey) {\n      return null;\n    }\n\n    return new StripeInstance(\n      this.loader,\n      this.window,\n      key || this.baseKey,\n      options || this.baseOptions\n    );\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { StripeConstructorOptions } from '@stripe/stripe-js';\n\nimport { StripeCardComponent } from './components/card.component';\nimport { StripeCardNumberComponent } from './components/card-number.component';\nimport { StripeCardExpiryComponent } from './components/card-expiry.component';\nimport { StripeCardCvcComponent } from './components/card-cvc.component';\nimport { StripeFpxBankComponent } from './components/fpx-bank.component';\nimport { StripeIdealBankComponent } from './components/ideal-bank.component';\nimport { StripeIbanComponent } from './components/iban.component';\nimport { StripeAuBankAccountComponent } from './components/au-bank-account.component';\nimport { StripePaymentRequestButtonComponent } from './components/payment-request-button.component';\n\nimport { StripeCardGroupDirective } from './directives/card-group.directive';\n\nimport {\n  STRIPE_OPTIONS,\n  STRIPE_PUBLISHABLE_KEY\n} from './interfaces/ngx-stripe.interface';\n\nimport { LazyStripeAPILoader } from './services/api-loader.service';\nimport { WindowRef } from './services/window-ref.service';\nimport { DocumentRef } from './services/document-ref.service';\nimport { StripeService } from './services/stripe.service';\nimport { StripeFactoryService } from './services/stripe-factory.service';\nimport { StripeElementsService } from './services/stripe-elements.service';\n\nconst components = [\n  StripeCardComponent,\n  StripeCardNumberComponent,\n  StripeCardExpiryComponent,\n  StripeCardCvcComponent,\n  StripeFpxBankComponent,\n  StripeIdealBankComponent,\n  StripeIbanComponent,\n  StripeAuBankAccountComponent,\n  StripePaymentRequestButtonComponent\n];\n\nconst directives = [StripeCardGroupDirective];\n\n@NgModule({\n  declarations: [...components, ...directives],\n  exports: [...components, ...directives]\n})\nexport class NgxStripeModule {\n  public static forRoot(\n    publishableKey?: string,\n    options?: StripeConstructorOptions\n  ): ModuleWithProviders<NgxStripeModule> {\n    return {\n      ngModule: NgxStripeModule,\n      providers: [\n        LazyStripeAPILoader,\n        StripeService,\n        StripeFactoryService,\n        StripeElementsService,\n        WindowRef,\n        DocumentRef,\n        {\n          provide: STRIPE_PUBLISHABLE_KEY,\n          useValue: publishableKey\n        },\n        {\n          provide: STRIPE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n\n  public static forChild(\n    publishableKey?: string,\n    options?: StripeConstructorOptions\n  ): ModuleWithProviders<NgxStripeModule> {\n    return {\n      ngModule: NgxStripeModule,\n      providers: [\n        LazyStripeAPILoader,\n        StripeService,\n        StripeFactoryService,\n        StripeElementsService,\n        WindowRef,\n        DocumentRef,\n        {\n          provide: STRIPE_PUBLISHABLE_KEY,\n          useValue: publishableKey\n        },\n        {\n          provide: STRIPE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n}\n"],"names":[],"mappings":"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"}
