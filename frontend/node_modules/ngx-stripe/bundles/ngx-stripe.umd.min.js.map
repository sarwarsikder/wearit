{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://ngx-stripe/lib/interfaces/ngx-stripe.interface.ts","ng://ngx-stripe/lib/services/window-ref.service.ts","ng://ngx-stripe/lib/services/document-ref.service.ts","ng://ngx-stripe/lib/services/api-loader.service.ts","ng://ngx-stripe/lib/services/stripe-instance.class.ts","ng://ngx-stripe/lib/services/stripe.service.ts","ng://ngx-stripe/lib/services/stripe-elements.service.ts","ng://ngx-stripe/lib/components/card.component.ts","ng://ngx-stripe/lib/directives/card-group.directive.ts","ng://ngx-stripe/lib/components/card-number.component.ts","ng://ngx-stripe/lib/components/card-expiry.component.ts","ng://ngx-stripe/lib/components/card-cvc.component.ts","ng://ngx-stripe/lib/components/fpx-bank.component.ts","ng://ngx-stripe/lib/components/ideal-bank.component.ts","ng://ngx-stripe/lib/components/iban.component.ts","ng://ngx-stripe/lib/components/au-bank-account.component.ts","ng://ngx-stripe/lib/components/payment-request-button.component.ts","ng://ngx-stripe/lib/services/stripe-factory.service.ts","ng://ngx-stripe/lib/ngx-stripe.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","adopt","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","r","ar","error","__spread","concat","STRIPE_PUBLISHABLE_KEY","InjectionToken","STRIPE_OPTIONS","WindowRef","platformId","getNativeWindow","isPlatformBrowser","window","Injectable","Inject","args","PLATFORM_ID","DocumentRef","getNativeDocument","document","LazyStripeAPILoader","status","BehaviorSubject","loaded","loading","asStream","load","asObservable","isReady","getValue","_this","isPlatformServer","script","createElement","type","async","defer","src","onload","onerror","appendChild","StripeInstance","loader","key","options","stripe$","undefined","stripe","pipe","filter","Boolean","first","map","Stripe","subscribe","stripeInstance","getInstance","elements","redirectToCheckout","switchMap","from","confirmAuBecsDebitPayment","clientSecret","data","confirmBancontactPayment","confirmCardPayment","confirmEpsPayment","confirmFpxPayment","confirmGiropayPayment","confirmIdealPayment","confirmP24Payment","confirmSepaDebitPayment","handleCardAction","createPaymentMethod","paymentMethodData","retrievePaymentIntent","confirmAuBecsDebitSetup","confirmCardSetup","confirmSepaDebitSetup","retrieveSetupIntent","paymentRequest","createToken","tokenType","createSource","a","b","retrieveSource","source","handleCardPayment","element","confirmPaymentIntent","handleCardSetup","confirmSetupIntent","handleFpxPayment","StripeService","getStripeReference","setKey","changeKey","StripeElementsService","stripeService","keys","mergeOptions","containerClass","classes","base","complete","empty","focus","invalid","webkitAutoFill","StripeCardComponent","stripeElementsService","EventEmitter","blur","change","ready","escape","state","ngOnChanges","changes","updateElements","elementsOptions","_a","toPromise","_b","update","ngOnInit","ngOnDestroy","destroy","getCard","create","on","ev","emit","mount","stripeElementRef","nativeElement","Component","selector","template","ViewChild","Input","Output","StripeCardGroupDirective","_elements","Directive","StripeCardNumberComponent","cardGroup","setupElement","Error","cardGroupSubscription","unsubscribe","getCardNumber","decorators","Optional","StripeCardExpiryComponent","getCardExpiry","StripeCardCvcComponent","getCardCvc","StripeFpxBankComponent","getFpxBank","accountHolderType","StripeIdealBankComponent","getIdealBank","StripeIbanComponent","getIban","StripeAuBankAccountComponent","getAuBankAccount","StripePaymentRequestButtonComponent","token","paymentMethod","cancel","shippingaddresschange","shippingoptionchange","notavailable","paymentOptions","updateRequest","canMakePayment","paymentRequestButton","show","getButton","StripeFactoryService","baseKey","baseOptions","components","directives","NgxStripeModule","forRoot","publishableKey","ngModule","providers","provide","useValue","forChild","NgModule","declarations","exports"],"mappings":"2ZA6BO,IAAIA,EAAW,WAQlB,OAPAA,EAAWC,OAAOC,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAE9E,OAAON,IAEKU,MAAMC,KAAMP,YAGhC,SAAAQ,EA2B0BC,EAASC,EAAYC,EAAGC,GAE9C,OAAO,IAAKD,IAAMA,EAAIE,UAAU,SAAUC,EAASC,GAC/C,SAAAC,EAAmBC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAAAC,EAAkBJ,GAAS,IAAMC,EAAKN,EAAiB,SAAEK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAAAF,EAAcI,GAAUA,EAAOC,KAAOT,EAAQQ,EAAOL,OAJzD,SAAAO,EAAeP,GAAS,OAAOA,aAAiBN,EAAIM,EAAQ,IAAIN,EAAE,SAAUG,GAAWA,EAAQG,KAI7BO,CAAMF,EAAOL,OAAOQ,KAAKT,EAAWK,GAClGH,GAAMN,EAAYA,EAAUN,MAAMG,EAASC,GAAc,KAAKS,UAItE,SAAAO,EAA4BjB,EAASkB,GACjC,IAAsGC,EAAGC,EAAGjC,EAAGkC,EAA3GC,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPrC,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOsC,KAAM,GAAIC,IAAK,IAChG,OAAOL,EAAI,CAAEX,KAAMiB,EAAK,GAAIC,QAASD,EAAK,GAAIE,SAAUF,EAAK,IAAwB,mBAAXG,SAA0BT,EAAES,OAAOC,UAAY,WAAa,OAAOjC,OAAUuB,EACvJ,SAAAM,EAAcrC,GAAK,OAAO,SAAU0C,GAAK,OACzC,SAAAvB,EAAcwB,GACV,GAAId,EAAG,MAAM,IAAIe,UAAU,mCAC3B,KAAOZ,GAAG,IACN,GAAIH,EAAI,EAAGC,IAAMjC,EAAY,EAAR8C,EAAG,GAASb,EAAU,UAAIa,EAAG,GAAKb,EAAS,YAAOjC,EAAIiC,EAAU,YAAMjC,EAAES,KAAKwB,GAAI,GAAKA,EAAEV,SAAWvB,EAAIA,EAAES,KAAKwB,EAAGa,EAAG,KAAKnB,KAAM,OAAO3B,EAE3J,OADIiC,EAAI,EAAGjC,IAAG8C,EAAK,CAAS,EAARA,EAAG,GAAQ9C,EAAEqB,QACzByB,EAAG,IACP,KAAK,EAAG,KAAK,EAAG9C,EAAI8C,EAAI,MACxB,KAAK,EAAc,OAAXX,EAAEC,QAAgB,CAAEf,MAAOyB,EAAG,GAAInB,MAAM,GAChD,KAAK,EAAGQ,EAAEC,QAASH,EAAIa,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKX,EAAEI,IAAIS,MAAOb,EAAEG,KAAKU,MAAO,SACxC,QACI,KAAkBhD,EAAe,GAA3BA,EAAImC,EAAEG,MAAYjC,QAAcL,EAAEA,EAAEK,OAAS,MAAkB,IAAVyC,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEX,EAAI,EAAG,SACjG,GAAc,IAAVW,EAAG,MAAc9C,GAAM8C,EAAG,GAAK9C,EAAE,IAAM8C,EAAG,GAAK9C,EAAE,IAAM,CAAEmC,EAAEC,MAAQU,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYX,EAAEC,MAAQpC,EAAE,GAAI,CAAEmC,EAAEC,MAAQpC,EAAE,GAAIA,EAAI8C,EAAI,MAC7D,GAAI9C,GAAKmC,EAAEC,MAAQpC,EAAE,GAAI,CAAEmC,EAAEC,MAAQpC,EAAE,GAAImC,EAAEI,IAAIU,KAAKH,GAAK,MACvD9C,EAAE,IAAImC,EAAEI,IAAIS,MAChBb,EAAEG,KAAKU,MAAO,SAEtBF,EAAKf,EAAKtB,KAAKI,EAASsB,GAC1B,MAAOX,GAAKsB,EAAK,CAAC,EAAGtB,GAAIS,EAAI,UAAeD,EAAIhC,EAAI,EACtD,GAAY,EAAR8C,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAEzB,MAAOyB,EAAG,GAAKA,EAAG,QAAK,EAAQnB,MAAM,GArB9BL,CAAK,CAACnB,EAAG0C,MAyB7D,SAAAK,EAgBuBC,EAAGhD,GACtB,IAAIiD,EAAsB,mBAAXT,QAAyBQ,EAAER,OAAOC,UACjD,IAAKQ,EAAG,OAAOD,EACf,IAAmBE,EAAY7B,EAA3BtB,EAAIkD,EAAE3C,KAAK0C,GAAOG,EAAK,GAC3B,IACI,WAAc,IAANnD,GAAsB,EAANA,QAAckD,EAAInD,EAAEqB,QAAQI,MAAM2B,EAAGL,KAAKI,EAAEhC,OAExE,MAAOkC,GAAS/B,EAAI,CAAE+B,MAAOA,WAEzB,IACQF,IAAMA,EAAE1B,OAASyB,EAAIlD,EAAU,YAAIkD,EAAE3C,KAAKP,WAExC,GAAIsB,EAAG,MAAMA,EAAE+B,OAE7B,OAAOD,EAGX,SAAAE,IACI,IAAK,IAAIF,EAAK,GAAIpD,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CoD,EAAKA,EAAGG,OAAOP,EAAO9C,UAAUF,KACpC,OAAOoD,ECzIX,IAAaI,EAAyB,IAAIC,EAAAA,eACxC,0BAEWC,EAAiB,IAAID,EAAAA,eAChC,kBCRFE,EAAA,WAKE,SAAAA,EAAwCC,GAAAnD,KAAAmD,WAAAA,EAQ1C,OANSD,EAAAtD,UAAAwD,gBAAP,WACE,OAAIC,EAAAA,kBAAkBrD,KAAKmD,YAClBG,OAET,wBARHC,EAAAA,kFAEcC,EAAAA,OAAMC,KAAA,CAACC,EAAAA,kBAQtBR,EAbA,GCAAS,EAAA,WAKE,SAAAA,EAAwCR,GAAAnD,KAAAmD,WAAAA,EAQ1C,OANSQ,EAAA/D,UAAAgE,kBAAP,WACE,OAAIP,EAAAA,kBAAkBrD,KAAKmD,YAClBU,SAET,wBARHN,EAAAA,kFAEcC,EAAAA,OAAMC,KAAA,CAACC,EAAAA,kBAQtBC,EAbA,gBCsBE,SAAAG,EAC8BX,EACrBG,EACAO,GAFqB7D,KAAAmD,WAAAA,EACrBnD,KAAAsD,OAAAA,EACAtD,KAAA6D,SAAAA,EATF7D,KAAA+D,OAAS,IAAIC,EAAAA,gBAA2C,CAC7DpB,OAAO,EACPqB,QAAQ,EACRC,SAAS,IA4Db,OAnDSJ,EAAAlE,UAAAuE,SAAP,WAEE,OADAnE,KAAKoE,OACEpE,KAAK+D,OAAOM,gBAGdP,EAAAlE,UAAA0E,QAAP,WACE,OAAOtE,KAAK+D,OAAOQ,WAAWN,QAGzBH,EAAAlE,UAAAwE,KAAP,WAAA,IAAAI,EAAAxE,KACE,IAAIyE,EAAAA,iBAAiBzE,KAAKmD,YAA1B,KAGMY,EAAoC/D,KAAK+D,OAAOQ,WACtD,GAAIvE,KAAKsD,OAAOF,kBAAkBvD,eAAe,UAC/CG,KAAK+D,OAAOnD,KAAK,CACfgC,OAAO,EACPqB,QAAQ,EACRC,SAAS,SAEN,IAAKH,EAAOE,SAAWF,EAAOG,QAAS,CAC5ClE,KAAK+D,OAAOnD,KAAI1B,EAAA,GACX6E,EAAM,CACTG,SAAS,SAGLQ,EAAS1E,KAAK6D,SAASD,oBAAoBe,cAAc,UAC/DD,EAAOE,KAAO,kBACdF,EAAOG,OAAQ,EACfH,EAAOI,OAAQ,EACfJ,EAAOK,IAAM,4BAEbL,EAAOM,OAAM,WACXR,EAAKT,OAAOnD,KAAK,CACfgC,OAAO,EACPqB,QAAQ,EACRC,SAAS,KAIbQ,EAAOO,QAAO,WACZT,EAAKT,OAAOnD,KAAK,CACfgC,OAAO,EACPqB,QAAQ,EACRC,SAAS,KAIblE,KAAK6D,SAASD,oBAAoBxC,KAAK8D,YAAYR,0BA9DxDnB,EAAAA,kFASIC,EAAAA,OAAMC,KAAA,CAACC,EAAAA,sBAlBHR,SACAS,KAyETG,KC/EAqB,EAAA,WAkEE,SAAAA,EACUC,EACA9B,EACA+B,EACAC,GAJV,IAAAd,EAAAxE,KACUA,KAAAoF,OAAAA,EACApF,KAAAsD,OAAAA,EACAtD,KAAAqF,IAAAA,EACArF,KAAAsF,QAAAA,EATFtF,KAAAuF,QAAU,IAAIvB,EAAAA,gBAAoCwB,WAC1DxF,KAAAyF,OAASzF,KAAKuF,QACXlB,eACAqB,KAAKC,EAAAA,OAAM,SAAEF,GAAW,OAAAG,QAAQH,MAQjCzF,KAAKoF,OACFjB,WACAuB,KACCC,EAAAA,OAAM,SAAE5B,GAAsC,OAAkB,IAAlBA,EAAOE,SACrD4B,EAAAA,QACAC,EAAAA,IAAG,WAAO,OAACtB,EAAKlB,OAAOF,kBAA0B2C,UAElDC,UAAS,SAAEC,OACJR,EAASjB,EAAKc,QACfW,EAAezB,EAAKa,IAAKb,EAAKc,SAC9BW,EAAezB,EAAKa,KAEzBb,EAAKe,QAAQ3E,KAAK6E,KAqa1B,OAjaEN,EAAAvF,UAAAsG,YAAA,WACE,OAAOlG,KAAKuF,QAAQhB,YAGtBY,EAAAvF,UAAAuG,SAAA,SAASb,GACP,OAAOtF,KAAKuF,QAAQlB,eAAeqB,KACjCC,EAAAA,OAAM,SAAEF,GAAW,OAAAG,QAAQH,KAC3BK,EAAAA,IAAG,SAAEL,GAAW,OAAAA,EAAOU,SAASb,KAChCO,EAAAA,UAIJV,EAAAvF,UAAAwG,mBAAA,SACEd,GAEA,OAAOtF,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GAAW,OAAAa,EAAAA,KAAKb,EAAOW,mBAAmBd,MACrDO,EAAAA,UAIJV,EAAAvF,UAAA2G,0BAAA,SACEC,EACAC,GAKA,OAAOzG,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GACT,OAAAa,EAAAA,KAAKb,EAAOc,0BAA0BC,EAAcC,MAEtDZ,EAAAA,UAIJV,EAAAvF,UAAA8G,yBAAA,SACEF,EACAC,EACAnB,GAKA,OAAOtF,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GACT,OAAAa,EAAAA,KAAKb,EAAOiB,yBAAyBF,EAAcC,EAAMnB,MAE3DO,EAAAA,UAIJV,EAAAvF,UAAA+G,mBAAA,SACEH,EACAC,EACAnB,GAKA,OAAOtF,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GACT,OAAAa,EAAAA,KAAKb,EAAOkB,mBAAmBH,EAAcC,EAAMnB,MAErDO,EAAAA,UAIJV,EAAAvF,UAAAgH,kBAAA,SACEJ,EACAC,EACAnB,GAKA,OAAOtF,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GACT,OAAAa,EAAAA,KAAKb,EAAOmB,kBAAkBJ,EAAcC,EAAMnB,MAEpDO,EAAAA,UAIJV,EAAAvF,UAAAiH,kBAAA,SACEL,EACAC,EACAnB,GAKA,OAAOtF,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GACT,OAAAa,EAAAA,KAAKb,EAAOoB,kBAAkBL,EAAcC,EAAMnB,MAEpDO,EAAAA,UAIJV,EAAAvF,UAAAkH,sBAAA,SACEN,EACAC,EACAnB,GAKA,OAAOtF,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GACT,OAAAa,EAAAA,KAAKb,EAAOqB,sBAAsBN,EAAcC,EAAMnB,MAExDO,EAAAA,UAIJV,EAAAvF,UAAAmH,oBAAA,SACEP,EACAC,EACAnB,GAKA,OAAOtF,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GACT,OAAAa,EAAAA,KAAKb,EAAOsB,oBAAoBP,EAAcC,EAAMnB,MAEtDO,EAAAA,UAIJV,EAAAvF,UAAAoH,kBAAA,SACER,EACAC,EACAnB,GAKA,OAAOtF,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GACT,OAAAa,EAAAA,KAAKb,EAAOuB,kBAAkBR,EAAcC,EAAMnB,MAEpDO,EAAAA,UAIJV,EAAAvF,UAAAqH,wBAAA,SACET,EACAC,GAKA,OAAOzG,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GACT,OAAAa,EAAAA,KAAKb,EAAOwB,wBAAwBT,EAAcC,MAEpDZ,EAAAA,UAIJV,EAAAvF,UAAAsH,iBAAA,SACEV,GAKA,OAAOxG,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GAAW,OAAAa,EAAAA,KAAKb,EAAOyB,iBAAiBV,MACnDX,EAAAA,UAIJV,EAAAvF,UAAAuH,oBAAA,SACEC,GAKA,OAAOpH,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GACT,OAAAa,EAAAA,KAAKb,EAAO0B,oBAAoBC,MAElCvB,EAAAA,UAIJV,EAAAvF,UAAAyH,sBAAA,SACEb,GAKA,OAAOxG,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GAAW,OAAAa,EAAAA,KAAKb,EAAO4B,sBAAsBb,MACxDX,EAAAA,UAIJV,EAAAvF,UAAA0H,wBAAA,SACEd,EACAC,GAKA,OAAOzG,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GACT,OAAAa,EAAAA,KAAKb,EAAO6B,wBAAwBd,EAAcC,MAEpDZ,EAAAA,UAIJV,EAAAvF,UAAA2H,iBAAA,SACEf,EACAC,EACAnB,GAKA,OAAOtF,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GACT,OAAAa,EAAAA,KAAKb,EAAO8B,iBAAiBf,EAAcC,EAAMnB,MAEnDO,EAAAA,UAIJV,EAAAvF,UAAA4H,sBAAA,SACEhB,EACAC,GAKA,OAAOzG,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GACT,OAAAa,EAAAA,KAAKb,EAAO+B,sBAAsBhB,EAAcC,MAElDZ,EAAAA,UAIJV,EAAAvF,UAAA6H,oBAAA,SACEjB,GAKA,OAAOxG,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GAAW,OAAAa,EAAAA,KAAKb,EAAO+B,sBAAsBhB,MACxDX,EAAAA,UAIJV,EAAAvF,UAAA8H,eAAA,SAAepC,OACPG,EAASzF,KAAKkG,cAEpB,OAAOT,EAASA,EAAOiC,eAAepC,GAAWE,WA+BnDL,EAAAvF,UAAA+H,YAAA,SAAYC,EAAWnB,GACrB,OAAOzG,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GAAW,OAAAa,EAAAA,KAAKb,EAAOkC,YAAYC,EAAWnB,MACzDZ,EAAAA,UAWJV,EAAAvF,UAAAiI,aAAA,SAAaC,EAAGC,GACd,OAAO/H,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GAAW,OAAAa,EAAAA,KAAKb,EAAOoC,aAAaC,EAAGC,MAClDlC,EAAAA,UAIJV,EAAAvF,UAAAoI,eAAA,SACEC,GAEA,OAAOjI,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GAAW,OAAAa,EAAAA,KAAKb,EAAOuC,eAAeC,MACjDpC,EAAAA,UAOJV,EAAAvF,UAAAsI,kBAAA,SACE1B,EACA2B,EACA1B,GAKA,OAAOzG,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GACT,OAAAa,EAAAA,KAAK,EAAgB4B,kBAAkB1B,EAAc2B,EAAS1B,MAEhEZ,EAAAA,UAOJV,EAAAvF,UAAAwI,qBAAA,SACE5B,EACA2B,EACA1B,GAKA,OAAOzG,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GACT,OAAAa,EAAAA,KAAK,EAAgB8B,qBAAqB5B,EAAc2B,EAAS1B,MAEnEZ,EAAAA,UAOJV,EAAAvF,UAAAyI,gBAAA,SACE7B,EACA2B,EACA1B,GAKA,OAAOzG,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GACT,OAAAa,EAAAA,KAAK,EAAgB+B,gBAAgB7B,EAAc2B,EAAS1B,MAE9DZ,EAAAA,UAOJV,EAAAvF,UAAA0I,mBAAA,SACE9B,EACA2B,EACA1B,GAKA,OAAOzG,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GACT,OAAAa,EAAAA,KAAK,EAAgBgC,mBAAmB9B,EAAc2B,EAAS1B,MAEjEZ,EAAAA,UAOJV,EAAAvF,UAAA2I,iBAAA,SACE/B,EACA2B,EACA1B,GAKA,OAAOzG,KAAKyF,OAAOC,KACjBW,EAAAA,UAAS,SAAEZ,GACT,OAAAa,EAAAA,KAAK,EAAgBiC,iBAAiB/B,EAAc2B,EAAS1B,MAE/DZ,EAAAA,UAGNV,EAzfA,GCAAqD,EAAA,WAuEE,SAAAA,EACyCnD,EACRC,EACxBF,EACA9B,GAHgCtD,KAAAqF,IAAAA,EACRrF,KAAAsF,QAAAA,EACxBtF,KAAAoF,OAAAA,EACApF,KAAAsD,OAAAA,EAEH+B,IACFrF,KAAKyF,OAAS,IAAIN,EAAenF,KAAKoF,OAAQpF,KAAKsD,OAAQ+B,EAAKC,IAiUtE,OA7TEkD,EAAA5I,UAAA6I,mBAAA,WAAA,IAAAjE,EAAAxE,KACE,OAAOA,KAAKoF,OAAOjB,WAAWuB,KAC5BC,EAAAA,OAAM,SAAE5B,GAAsC,OAAkB,IAAlBA,EAAOE,SACrD6B,EAAAA,IAAG,WAAO,OAACtB,EAAKlB,OAAOF,kBAA0B2C,WAIrDyC,EAAA5I,UAAAsG,YAAA,WACE,OAAOlG,KAAKyF,OAAOS,eAGrBsC,EAAA5I,UAAA8I,OAAA,SAAOrD,EAAaC,GAClB,OAAOtF,KAAK2I,UAAUtD,EAAKC,IAG7BkD,EAAA5I,UAAA+I,UAAA,SAAUtD,EAAaC,GAGrB,OAFAtF,KAAKyF,OAAS,IAAIN,EAAenF,KAAKoF,OAAQpF,KAAKsD,OAAQ+B,EAAKC,GAEzDtF,KAAKyF,QAGd+C,EAAA5I,UAAAuG,SAAA,SAASb,GACP,OAAOtF,KAAKyF,OAAOU,SAASb,IAG9BkD,EAAA5I,UAAAwG,mBAAA,SACEd,GAEA,OAAOtF,KAAKyF,OAAOW,mBAAmBd,IAGxCkD,EAAA5I,UAAA2G,0BAAA,SACEC,EACAC,GAKA,OAAOzG,KAAKyF,OAAOc,0BAA0BC,EAAcC,IAG7D+B,EAAA5I,UAAA8G,yBAAA,SACEF,EACAC,EACAnB,GAKA,OAAOtF,KAAKyF,OAAOiB,yBAAyBF,EAAcC,EAAMnB,IAGlEkD,EAAA5I,UAAA+G,mBAAA,SACEH,EACAC,EACAnB,GAKA,OAAOtF,KAAKyF,OAAOkB,mBAAmBH,EAAcC,EAAMnB,IAG5DkD,EAAA5I,UAAAgH,kBAAA,SACEJ,EACAC,EACAnB,GAKA,OAAOtF,KAAKyF,OAAOmB,kBAAkBJ,EAAcC,EAAMnB,IAG3DkD,EAAA5I,UAAAiH,kBAAA,SACEL,EACAC,EACAnB,GAKA,OAAOtF,KAAKyF,OAAOoB,kBAAkBL,EAAcC,EAAMnB,IAG3DkD,EAAA5I,UAAAkH,sBAAA,SACEN,EACAC,EACAnB,GAKA,OAAOtF,KAAKyF,OAAOqB,sBAAsBN,EAAcC,EAAMnB,IAG/DkD,EAAA5I,UAAAmH,oBAAA,SACEP,EACAC,EACAnB,GAKA,OAAOtF,KAAKyF,OAAOsB,oBAAoBP,EAAcC,EAAMnB,IAG7DkD,EAAA5I,UAAAoH,kBAAA,SACER,EACAC,EACAnB,GAKA,OAAOtF,KAAKyF,OAAOuB,kBAAkBR,EAAcC,EAAMnB,IAG3DkD,EAAA5I,UAAAqH,wBAAA,SACET,EACAC,GAKA,OAAOzG,KAAKyF,OAAOwB,wBAAwBT,EAAcC,IAG3D+B,EAAA5I,UAAAsH,iBAAA,SACEV,GAKA,OAAOxG,KAAKyF,OAAOyB,iBAAiBV,IAGtCgC,EAAA5I,UAAAuH,oBAAA,SACEC,GAKA,OAAOpH,KAAKyF,OAAO0B,oBAAoBC,IAGzCoB,EAAA5I,UAAAyH,sBAAA,SACEb,GAKA,OAAOxG,KAAKyF,OAAO4B,sBAAsBb,IAG3CgC,EAAA5I,UAAA0H,wBAAA,SACEd,EACAC,GAKA,OAAOzG,KAAKyF,OAAO6B,wBAAwBd,EAAcC,IAG3D+B,EAAA5I,UAAA2H,iBAAA,SACEf,EACAC,EACAnB,GAKA,OAAOtF,KAAKyF,OAAO8B,iBAAiBf,EAAcC,EAAMnB,IAG1DkD,EAAA5I,UAAA4H,sBAAA,SACEhB,EACAC,GAKA,OAAOzG,KAAKyF,OAAO+B,sBAAsBhB,EAAcC,IAGzD+B,EAAA5I,UAAA6H,oBAAA,SACEjB,GAKA,OAAOxG,KAAKyF,OAAOgC,oBAAoBjB,IAGzCgC,EAAA5I,UAAA8H,eAAA,SAAepC,GACb,OAAOtF,KAAKyF,OAAOiC,eAAepC,IA+BpCkD,EAAA5I,UAAA+H,YAAA,SAAYC,EAAWnB,GACrB,OAAOzG,KAAKyF,OAAOkC,YAAYC,EAAWnB,IAU5C+B,EAAA5I,UAAAiI,aAAA,SAAaC,EAAGC,GACd,OAAO/H,KAAKyF,OAAOoC,aAAaC,EAAGC,IAGrCS,EAAA5I,UAAAoI,eAAA,SACEC,GAEA,OAAOjI,KAAKyF,OAAOuC,eAAeC,IAMpCO,EAAA5I,UAAAsI,kBAAA,SACE1B,EACA2B,EACA1B,GAKA,OAAOzG,KAAKyF,OAAOyC,kBAAkB1B,EAAc2B,EAAS1B,IAM9D+B,EAAA5I,UAAAwI,qBAAA,SACE5B,EACA2B,EACA1B,GAKA,OAAOzG,KAAKyF,OAAO2C,qBAAqB5B,EAAc2B,EAAS1B,IAMjE+B,EAAA5I,UAAAyI,gBAAA,SACE7B,EACA2B,EACA1B,GAKA,OAAOzG,KAAKyF,OAAO4C,gBAAgB7B,EAAc2B,EAAS1B,IAM5D+B,EAAA5I,UAAA0I,mBAAA,SACE9B,EACA2B,EACA1B,GAKA,OAAOzG,KAAKyF,OAAO6C,mBAAmB9B,EAAc2B,EAAS1B,IAM/D+B,EAAA5I,UAAA2I,iBAAA,SACE/B,EACA2B,EACA1B,GAKA,OAAOzG,KAAKyF,OAAO8C,iBAAiB/B,EAAc2B,EAAS1B,wBA1U9DlD,EAAAA,+EAKIC,EAAAA,OAAMC,KAAA,CAACV,wCACPS,EAAAA,OAAMC,KAAA,CAACR,YAZVa,SAFOZ,KAoVTsF,EA/YA,gBCsBE,SAAAI,EAAoBC,GAAA7I,KAAA6I,cAAAA,EAiFtB,OA/EED,EAAAhJ,UAAAuG,SAAA,SACEV,EACAH,GAEA,YAFA,IAAAA,IAAAA,EAAA,IAEIG,EACgC,EAA9BtG,OAAO2J,KAAKxD,GAAS5F,OAChB+F,EAAOU,SAASb,GAElBG,EAAOU,WAEoB,EAA9BhH,OAAO2J,KAAKxD,GAAS5F,OAChBM,KAAK6I,cAAc1C,SAASb,GAE9BtF,KAAK6I,cAAc1C,YAI9ByC,EAAAhJ,UAAA8H,eAAA,SACEjC,EACAH,GAEA,OAAOG,EACHA,EAAOiC,eAAepC,GACtBtF,KAAK6I,cAAcnB,eAAepC,IAmCxCsD,EAAAhJ,UAAAmJ,aAAA,SAAazD,EAAS0D,GACpB,OAAKA,GAAmB1D,GAAWA,EAAQ2D,QAClC3D,GAAW,GAGfA,GAAYA,EAAQ2D,QAclB3D,GAAW,GAbhBpG,EAAA,GACMoG,GAAW,GAAE,CACjB2D,QAAS,CACPC,KAAMF,EACNG,SAAaH,EAAc,aAC3BI,MAAUJ,EAAc,UACxBK,MAAUL,EAAc,UACxBM,QAAYN,EAAc,YAC1BO,eAAmBP,EAAc,4CA5E1CzF,EAAAA,sDAFQiF,KAqFTI,kBCvDE,SAAAY,EAAmBC,GAAAzJ,KAAAyJ,sBAAAA,EAXTzJ,KAAAoE,KAAO,IAAIsF,EAAAA,aAEX1J,KAAA2J,KAAO,IAAID,EAAAA,aACX1J,KAAA4J,OAAS,IAAIF,EAAAA,aACb1J,KAAAqJ,MAAQ,IAAIK,EAAAA,aACZ1J,KAAA6J,MAAQ,IAAIH,EAAAA,aACZ1J,KAAA8J,OAAS,IAAIJ,EAAAA,aAGvB1J,KAAA+J,MAA2C,WA8E7C,OA1EQP,EAAA5J,UAAAoK,YAAN,SAAkBC,4GAChBjK,KAAK+J,MAAQ,WAEPzE,EAAUtF,KAAKyJ,sBAAsBV,aACzC/I,KAAKsF,QACLtF,KAAKgJ,gBAEHkB,GAAiB,EAEjBD,EAAQE,iBAAmBF,EAAQxE,SAAWzF,KAAKmG,SACrC,CAAA,GAAhBiE,EAAApK,MAA2ByJ,sBACxBtD,SAASnG,KAAKyF,OAAQzF,KAAKmK,iBAC3BE,aAHD,CAAA,EAAA,UACFD,EAAKjE,SAAWmE,EAAA5I,OAGhBwI,GAAiB,0BAIjBD,EAAQ3E,SACR2E,EAAQjB,iBACPhJ,KAAKmI,SACN+B,KAEIlK,KAAKmI,UAAY+B,EACnBlK,KAAKuK,OAAOjF,GACHtF,KAAKmG,UAAY+D,GAC1BlK,KAAK2E,cAAcW,IAIvBtF,KAAK+J,MAAQ,kBAGTP,EAAA5J,UAAA4K,SAAN,+GACqB,aAAfxK,KAAK+J,MAAL,CAAA,EAAA,IACF/J,KAAK+J,MAAQ,WAEG,CAAA,GAAhBK,EAAApK,MAA2ByJ,sBACxBtD,SAASnG,KAAKyF,QACd4E,qBAFHD,EAAKjE,SAAWmE,EAAA5I,OAGhB1B,KAAK2E,gBAEL3E,KAAK+J,MAAQ,yCAIjBP,EAAA5J,UAAA6K,YAAA,WACMzK,KAAKmI,SACPnI,KAAKmI,QAAQuC,WAIjBlB,EAAA5J,UAAA2K,OAAA,SAAOjF,GACLtF,KAAKmI,QAAQoC,OAAOjF,IAMtBkE,EAAA5J,UAAA+K,QAAA,WACE,OAAO3K,KAAKmI,SAGNqB,EAAA5J,UAAA+E,cAAR,SAAsBW,GAAtB,IAAAd,EAAAxE,UAAsB,IAAAsF,IAAAA,EAAA,IACpBtF,KAAKmI,QAAUnI,KAAKmG,SAASyE,OAAO,OAAQtF,GAC5CtF,KAAKmI,QAAQ0C,GAAG,SAAQ,SAAGC,GAAO,OAAAtG,EAAKoF,OAAOmB,KAAKD,KACnD9K,KAAKmI,QAAQ0C,GAAG,OAAM,WAAQ,OAAArG,EAAKmF,KAAKoB,SACxC/K,KAAKmI,QAAQ0C,GAAG,QAAO,WAAQ,OAAArG,EAAK6E,MAAM0B,SAC1C/K,KAAKmI,QAAQ0C,GAAG,QAAO,WAAQ,OAAArG,EAAKqF,MAAMkB,SAC1C/K,KAAKmI,QAAQ0C,GAAG,SAAQ,WAAQ,OAAArG,EAAKsF,OAAOiB,SAE5C/K,KAAKmI,QAAQ6C,MAAMhL,KAAKiL,iBAAiBC,eAEzClL,KAAKoE,KAAK2G,KAAK/K,KAAKmI,8BAlGvBgD,EAAAA,UAAS1H,KAAA,CAAC,CACT2H,SAAU,kBACVC,SAAU,2FAJHzC,+CAON0C,EAAAA,UAAS7H,KAAA,CAAC,4CAGV8H,EAAAA,uBACAA,EAAAA,+BACAA,EAAAA,sBACAA,EAAAA,oBAEAC,EAAAA,qBAEAA,EAAAA,uBACAA,EAAAA,sBACAA,EAAAA,sBACAA,EAAAA,uBACAA,EAAAA,UAiFHhC,kBCjGE,SAAAiC,EAAmBhC,GAAAzJ,KAAAyJ,sBAAAA,EALTzJ,KAAAmG,SAAW,IAAIuD,EAAAA,aAGzB1J,KAAA+J,MAA2C,WAgC7C,OA5BQ0B,EAAA7L,UAAAoK,YAAN,SAAkBC,4GAChBjK,KAAK+J,MAAQ,WAEPI,EAAkBnK,KAAKmK,gBACvB1E,EAASzF,KAAKyF,OAEhBwE,EAAQE,iBAAmBF,EAAQxE,SAAWzF,KAAK0L,UACpC,CAAA,GAAjBtB,EAAApK,MAA4ByJ,sBACzBtD,SAASV,EAAQ0E,GACjBE,aAHD,CAAA,EAAA,UACFD,EAAKsB,UAAYpB,EAAA5I,OAGjB1B,KAAKmG,SAAS4E,KAAK/K,KAAK0L,mCAG1B1L,KAAK+J,MAAQ,kBAGT0B,EAAA7L,UAAA4K,SAAN,+GACqB,aAAfxK,KAAK+J,MAAL,CAAA,EAAA,IACF/J,KAAK+J,MAAQ,WAEI,CAAA,GAAjBK,EAAApK,MAA4ByJ,sBACzBtD,SAASnG,KAAKyF,QACd4E,qBAFHD,EAAKsB,UAAYpB,EAAA5I,OAGjB1B,KAAKmG,SAAS4E,KAAK/K,KAAK0L,WAExB1L,KAAK+J,MAAQ,6DAvClB4B,EAAAA,UAASlI,KAAA,CAAC,CACT2H,SAAU,0FAHHxC,8CAMN2C,EAAAA,sBACAA,EAAAA,wBAEAC,EAAAA,UAmCHC,kBCVE,SAAAG,EACSnC,EACaoC,GADb7L,KAAAyJ,sBAAAA,EACazJ,KAAA6L,UAAAA,EAbZ7L,KAAAoE,KAAO,IAAIsF,EAAAA,aAEX1J,KAAA2J,KAAO,IAAID,EAAAA,aACX1J,KAAA4J,OAAS,IAAIF,EAAAA,aACb1J,KAAAqJ,MAAQ,IAAIK,EAAAA,aACZ1J,KAAA6J,MAAQ,IAAIH,EAAAA,aACZ1J,KAAA8J,OAAS,IAAIJ,EAAAA,aAwEzB,OA9DQkC,EAAAhM,UAAAoK,YAAN,SAAkBC,2EACZA,EAAQ3E,SAAW2E,EAAQjB,iBAC7BhJ,KAAK8L,aAAa,oBAItBF,EAAAhM,UAAA4K,SAAA,WAAA,IAAAhG,EAAAxE,KACE,IAAIA,KAAK6L,UAQP,MAAM,IAAIE,MACR,uEARF/L,KAAKgM,sBAAwBhM,KAAK6L,UAAU1F,SAASH,UAAS,SAC3DG,GACC3B,EAAK2B,SAAWA,EAChB3B,EAAKsH,aAAa,eAU1BF,EAAAhM,UAAA6K,YAAA,WACMzK,KAAKmI,SACPnI,KAAKmI,QAAQuC,UAEX1K,KAAKgM,uBACPhM,KAAKgM,sBAAsBC,eAI/BL,EAAAhM,UAAA2K,OAAA,SAAOjF,GACLtF,KAAKmI,QAAQoC,OAAOjF,IAMtBsG,EAAAhM,UAAAsM,cAAA,WACE,OAAOlM,KAAKmI,SAGNyD,EAAAhM,UAAAkM,aAAR,SAAqB7D,GAArB,IAAAzD,EAAAxE,KACQsF,EAAUtF,KAAKyJ,sBAAsBV,aACzC/I,KAAKsF,QACLtF,KAAKgJ,gBAGHhJ,KAAKmI,SAAsB,YAAXF,EAClBjI,KAAKuK,OAAOjF,GACHtF,KAAKmG,UAAuB,aAAX8B,IAC1BjI,KAAKmI,QAAUnI,KAAKmG,SAASyE,OAAO,aAActF,GAClDtF,KAAKmI,QAAQ0C,GAAG,SAAQ,SAAGC,GAAO,OAAAtG,EAAKoF,OAAOmB,KAAKD,KACnD9K,KAAKmI,QAAQ0C,GAAG,OAAM,WAAQ,OAAArG,EAAKmF,KAAKoB,SACxC/K,KAAKmI,QAAQ0C,GAAG,QAAO,WAAQ,OAAArG,EAAK6E,MAAM0B,SAC1C/K,KAAKmI,QAAQ0C,GAAG,QAAO,WAAQ,OAAArG,EAAKqF,MAAMkB,SAC1C/K,KAAKmI,QAAQ0C,GAAG,SAAQ,WAAQ,OAAArG,EAAKsF,OAAOiB,SAE5C/K,KAAKmI,QAAQ6C,MAAMhL,KAAKiL,iBAAiBC,eAEzClL,KAAKoE,KAAK2G,KAAK/K,KAAKmI,+BAtFzBgD,EAAAA,UAAS1H,KAAA,CAAC,CACT2H,SAAU,yBACVC,SAAU,2FAJHzC,SADA6C,EAAwBU,WAAA,CAAA,CAAAvH,KA2B5BwH,EAAAA,wDAnBFd,EAAAA,UAAS7H,KAAA,CAAC,4CAGV8H,EAAAA,uBACAA,EAAAA,oBAEAC,EAAAA,qBAEAA,EAAAA,uBACAA,EAAAA,sBACAA,EAAAA,sBACAA,EAAAA,uBACAA,EAAAA,UAwEHI,kBCnEE,SAAAS,EACS5C,EACaoC,GADb7L,KAAAyJ,sBAAAA,EACazJ,KAAA6L,UAAAA,EAbZ7L,KAAAoE,KAAO,IAAIsF,EAAAA,aAEX1J,KAAA2J,KAAO,IAAID,EAAAA,aACX1J,KAAA4J,OAAS,IAAIF,EAAAA,aACb1J,KAAAqJ,MAAQ,IAAIK,EAAAA,aACZ1J,KAAA6J,MAAQ,IAAIH,EAAAA,aACZ1J,KAAA8J,OAAS,IAAIJ,EAAAA,aAwEzB,OA9DQ2C,EAAAzM,UAAAoK,YAAN,SAAkBC,2EACZA,EAAQ3E,SAAW2E,EAAQjB,iBAC7BhJ,KAAK8L,aAAa,oBAItBO,EAAAzM,UAAA4K,SAAA,WAAA,IAAAhG,EAAAxE,KACE,IAAIA,KAAK6L,UAQP,MAAM,IAAIE,MACR,uEARF/L,KAAKgM,sBAAwBhM,KAAK6L,UAAU1F,SAASH,UAAS,SAC3DG,GACC3B,EAAK2B,SAAWA,EAChB3B,EAAKsH,aAAa,eAU1BO,EAAAzM,UAAA6K,YAAA,WACMzK,KAAKmI,SACPnI,KAAKmI,QAAQuC,UAEX1K,KAAKgM,uBACPhM,KAAKgM,sBAAsBC,eAI/BI,EAAAzM,UAAA2K,OAAA,SAAOjF,GACLtF,KAAKmI,QAAQoC,OAAOjF,IAMtB+G,EAAAzM,UAAA0M,cAAA,WACE,OAAOtM,KAAKmI,SAGNkE,EAAAzM,UAAAkM,aAAR,SAAqB7D,GAArB,IAAAzD,EAAAxE,KACQsF,EAAUtF,KAAKyJ,sBAAsBV,aACzC/I,KAAKsF,QACLtF,KAAKgJ,gBAGHhJ,KAAKmI,SAAsB,YAAXF,EAClBjI,KAAKuK,OAAOjF,GACHtF,KAAKmG,UAAuB,aAAX8B,IAC1BjI,KAAKmI,QAAUnI,KAAKmG,SAASyE,OAAO,aAActF,GAClDtF,KAAKmI,QAAQ0C,GAAG,SAAQ,SAAGC,GAAO,OAAAtG,EAAKoF,OAAOmB,KAAKD,KACnD9K,KAAKmI,QAAQ0C,GAAG,OAAM,WAAQ,OAAArG,EAAKmF,KAAKoB,SACxC/K,KAAKmI,QAAQ0C,GAAG,QAAO,WAAQ,OAAArG,EAAK6E,MAAM0B,SAC1C/K,KAAKmI,QAAQ0C,GAAG,QAAO,WAAQ,OAAArG,EAAKqF,MAAMkB,SAC1C/K,KAAKmI,QAAQ0C,GAAG,SAAQ,WAAQ,OAAArG,EAAKsF,OAAOiB,SAE5C/K,KAAKmI,QAAQ6C,MAAMhL,KAAKiL,iBAAiBC,eAEzClL,KAAKoE,KAAK2G,KAAK/K,KAAKmI,+BAtFzBgD,EAAAA,UAAS1H,KAAA,CAAC,CACT2H,SAAU,yBACVC,SAAU,2FAJHzC,SADA6C,EAAwBU,WAAA,CAAA,CAAAvH,KA2B5BwH,EAAAA,wDAnBFd,EAAAA,UAAS7H,KAAA,CAAC,4CAGV8H,EAAAA,uBACAA,EAAAA,oBAEAC,EAAAA,qBAEAA,EAAAA,uBACAA,EAAAA,sBACAA,EAAAA,sBACAA,EAAAA,uBACAA,EAAAA,UAwEHa,kBCnEE,SAAAE,EACS9C,EACaoC,GADb7L,KAAAyJ,sBAAAA,EACazJ,KAAA6L,UAAAA,EAbZ7L,KAAAoE,KAAO,IAAIsF,EAAAA,aAEX1J,KAAA2J,KAAO,IAAID,EAAAA,aACX1J,KAAA4J,OAAS,IAAIF,EAAAA,aACb1J,KAAAqJ,MAAQ,IAAIK,EAAAA,aACZ1J,KAAA6J,MAAQ,IAAIH,EAAAA,aACZ1J,KAAA8J,OAAS,IAAIJ,EAAAA,aAwEzB,OA9DQ6C,EAAA3M,UAAAoK,YAAN,SAAkBC,2EACZA,EAAQ3E,SAAW2E,EAAQjB,iBAC7BhJ,KAAK8L,aAAa,oBAItBS,EAAA3M,UAAA4K,SAAA,WAAA,IAAAhG,EAAAxE,KACE,IAAIA,KAAK6L,UAQP,MAAM,IAAIE,MACR,oEARF/L,KAAKgM,sBAAwBhM,KAAK6L,UAAU1F,SAASH,UAAS,SAC3DG,GACC3B,EAAK2B,SAAWA,EAChB3B,EAAKsH,aAAa,eAU1BS,EAAA3M,UAAA6K,YAAA,WACMzK,KAAKmI,SACPnI,KAAKmI,QAAQuC,UAEX1K,KAAKgM,uBACPhM,KAAKgM,sBAAsBC,eAI/BM,EAAA3M,UAAA2K,OAAA,SAAOjF,GACLtF,KAAKmI,QAAQoC,OAAOjF,IAMtBiH,EAAA3M,UAAA4M,WAAA,WACE,OAAOxM,KAAKmI,SAGNoE,EAAA3M,UAAAkM,aAAR,SAAqB7D,GAArB,IAAAzD,EAAAxE,KACQsF,EAAUtF,KAAKyJ,sBAAsBV,aACzC/I,KAAKsF,QACLtF,KAAKgJ,gBAGHhJ,KAAKmI,SAAsB,YAAXF,EAClBjI,KAAKuK,OAAOjF,GACHtF,KAAKmG,UAAuB,aAAX8B,IAC1BjI,KAAKmI,QAAUnI,KAAKmG,SAASyE,OAAO,UAAWtF,GAC/CtF,KAAKmI,QAAQ0C,GAAG,SAAQ,SAAGC,GAAO,OAAAtG,EAAKoF,OAAOmB,KAAKD,KACnD9K,KAAKmI,QAAQ0C,GAAG,OAAM,WAAQ,OAAArG,EAAKmF,KAAKoB,SACxC/K,KAAKmI,QAAQ0C,GAAG,QAAO,WAAQ,OAAArG,EAAK6E,MAAM0B,SAC1C/K,KAAKmI,QAAQ0C,GAAG,QAAO,WAAQ,OAAArG,EAAKqF,MAAMkB,SAC1C/K,KAAKmI,QAAQ0C,GAAG,SAAQ,WAAQ,OAAArG,EAAKsF,OAAOiB,SAE5C/K,KAAKmI,QAAQ6C,MAAMhL,KAAKiL,iBAAiBC,eAEzClL,KAAKoE,KAAK2G,KAAK/K,KAAKmI,+BAtFzBgD,EAAAA,UAAS1H,KAAA,CAAC,CACT2H,SAAU,sBACVC,SAAU,2FAJHzC,SADA6C,EAAwBU,WAAA,CAAA,CAAAvH,KA2B5BwH,EAAAA,wDAnBFd,EAAAA,UAAS7H,KAAA,CAAC,4CAGV8H,EAAAA,uBACAA,EAAAA,oBAEAC,EAAAA,qBAEAA,EAAAA,uBACAA,EAAAA,sBACAA,EAAAA,sBACAA,EAAAA,uBACAA,EAAAA,UAwEHe,kBClEE,SAAAE,EAAmBhD,GAAAzJ,KAAAyJ,sBAAAA,EAXTzJ,KAAAoE,KAAO,IAAIsF,EAAAA,aAEX1J,KAAA2J,KAAO,IAAID,EAAAA,aACX1J,KAAA4J,OAAS,IAAIF,EAAAA,aACb1J,KAAAqJ,MAAQ,IAAIK,EAAAA,aACZ1J,KAAA6J,MAAQ,IAAIH,EAAAA,aACZ1J,KAAA8J,OAAS,IAAIJ,EAAAA,aAGvB1J,KAAA+J,MAA2C,WAgF7C,OA5EQ0C,EAAA7M,UAAAoK,YAAN,SAAkBC,4GAChBjK,KAAK+J,MAAQ,WAEPzE,EAAUtF,KAAKyJ,sBAAsBV,aACzC/I,KAAKsF,QACLtF,KAAKgJ,gBAEHkB,GAAiB,EAEjBD,EAAQE,iBAAmBF,EAAQxE,SAAWzF,KAAKmG,SACrC,CAAA,GAAhBiE,EAAApK,MAA2ByJ,sBACxBtD,SAASnG,KAAKyF,OAAQzF,KAAKmK,iBAC3BE,aAHD,CAAA,EAAA,UACFD,EAAKjE,SAAWmE,EAAA5I,OAGhBwI,GAAiB,0BAIjBD,EAAQ3E,SACR2E,EAAQjB,iBACPhJ,KAAKmI,SACN+B,KAEIlK,KAAKmI,UAAY+B,EACnBlK,KAAKuK,OAAOjF,GACHtF,KAAKmG,UAAY+D,GAC1BlK,KAAK2E,cAAcW,IAIvBtF,KAAK+J,MAAQ,kBAGT0C,EAAA7M,UAAA4K,SAAN,+GACqB,aAAfxK,KAAK+J,MAAL,CAAA,EAAA,IACF/J,KAAK+J,MAAQ,WAEG,CAAA,GAAhBK,EAAApK,MAA2ByJ,sBACxBtD,SAASnG,KAAKyF,QACd4E,qBAFHD,EAAKjE,SAAWmE,EAAA5I,OAGhB1B,KAAK2E,gBAEL3E,KAAK+J,MAAQ,yCAIjB0C,EAAA7M,UAAA6K,YAAA,WACMzK,KAAKmI,SACPnI,KAAKmI,QAAQuC,WAIjB+B,EAAA7M,UAAA2K,OAAA,SAAOjF,GACLtF,KAAKmI,QAAQoC,OAAOjF,IAMtBmH,EAAA7M,UAAA8M,WAAA,WACE,OAAO1M,KAAKmI,SAGNsE,EAAA7M,UAAA+E,cAAR,SACEW,GADF,IAAAd,EAAAxE,UACE,IAAAsF,IAAAA,EAAA,CAAyCqH,kBAAmB,eAE5D3M,KAAKmI,QAAUnI,KAAKmG,SAASyE,OAAO,UAAWtF,GAC/CtF,KAAKmI,QAAQ0C,GAAG,SAAQ,SAAGC,GAAO,OAAAtG,EAAKoF,OAAOmB,KAAKD,KACnD9K,KAAKmI,QAAQ0C,GAAG,OAAM,WAAQ,OAAArG,EAAKmF,KAAKoB,SACxC/K,KAAKmI,QAAQ0C,GAAG,QAAO,WAAQ,OAAArG,EAAK6E,MAAM0B,SAC1C/K,KAAKmI,QAAQ0C,GAAG,QAAO,WAAQ,OAAArG,EAAKqF,MAAMkB,SAC1C/K,KAAKmI,QAAQ0C,GAAG,SAAQ,WAAQ,OAAArG,EAAKsF,OAAOiB,SAE5C/K,KAAKmI,QAAQ6C,MAAMhL,KAAKiL,iBAAiBC,eAEzClL,KAAKoE,KAAK2G,KAAK/K,KAAKmI,8BApGvBgD,EAAAA,UAAS1H,KAAA,CAAC,CACT2H,SAAU,sBACVC,SAAU,2FAJHzC,+CAON0C,EAAAA,UAAS7H,KAAA,CAAC,4CAGV8H,EAAAA,uBACAA,EAAAA,+BACAA,EAAAA,sBACAA,EAAAA,oBAEAC,EAAAA,qBAEAA,EAAAA,uBACAA,EAAAA,sBACAA,EAAAA,sBACAA,EAAAA,uBACAA,EAAAA,UAmFHiB,kBC9EE,SAAAG,EAAmBnD,GAAAzJ,KAAAyJ,sBAAAA,EAXTzJ,KAAAoE,KAAO,IAAIsF,EAAAA,aAEX1J,KAAA2J,KAAO,IAAID,EAAAA,aACX1J,KAAA4J,OAAS,IAAIF,EAAAA,aACb1J,KAAAqJ,MAAQ,IAAIK,EAAAA,aACZ1J,KAAA6J,MAAQ,IAAIH,EAAAA,aACZ1J,KAAA8J,OAAS,IAAIJ,EAAAA,aAGvB1J,KAAA+J,MAA2C,WA8E7C,OA1EQ6C,EAAAhN,UAAAoK,YAAN,SAAkBC,4GAChBjK,KAAK+J,MAAQ,WAEPzE,EAAUtF,KAAKyJ,sBAAsBV,aACzC/I,KAAKsF,QACLtF,KAAKgJ,gBAEHkB,GAAiB,EAEjBD,EAAQE,iBAAmBF,EAAQxE,SAAWzF,KAAKmG,SACrC,CAAA,GAAhBiE,EAAApK,MAA2ByJ,sBACxBtD,SAASnG,KAAKyF,OAAQzF,KAAKmK,iBAC3BE,aAHD,CAAA,EAAA,UACFD,EAAKjE,SAAWmE,EAAA5I,OAGhBwI,GAAiB,0BAIjBD,EAAQ3E,SACR2E,EAAQjB,iBACPhJ,KAAKmI,SACN+B,KAEIlK,KAAKmI,UAAY+B,EACnBlK,KAAKuK,OAAOjF,GACHtF,KAAKmG,UAAY+D,GAC1BlK,KAAK2E,cAAcW,IAIvBtF,KAAK+J,MAAQ,kBAGT6C,EAAAhN,UAAA4K,SAAN,+GACqB,aAAfxK,KAAK+J,MAAL,CAAA,EAAA,IACF/J,KAAK+J,MAAQ,WAEG,CAAA,GAAhBK,EAAApK,MAA2ByJ,sBACxBtD,SAASnG,KAAKyF,QACd4E,qBAFHD,EAAKjE,SAAWmE,EAAA5I,OAGhB1B,KAAK2E,gBAEL3E,KAAK+J,MAAQ,yCAIjB6C,EAAAhN,UAAA6K,YAAA,WACMzK,KAAKmI,SACPnI,KAAKmI,QAAQuC,WAIjBkC,EAAAhN,UAAA2K,OAAA,SAAOjF,GACLtF,KAAKmI,QAAQoC,OAAOjF,IAMtBsH,EAAAhN,UAAAiN,aAAA,WACE,OAAO7M,KAAKmI,SAGNyE,EAAAhN,UAAA+E,cAAR,SAAsBW,GAAtB,IAAAd,EAAAxE,UAAsB,IAAAsF,IAAAA,EAAA,IACpBtF,KAAKmI,QAAUnI,KAAKmG,SAASyE,OAAO,YAAatF,GACjDtF,KAAKmI,QAAQ0C,GAAG,SAAQ,SAAGC,GAAO,OAAAtG,EAAKoF,OAAOmB,KAAKD,KACnD9K,KAAKmI,QAAQ0C,GAAG,OAAM,WAAQ,OAAArG,EAAKmF,KAAKoB,SACxC/K,KAAKmI,QAAQ0C,GAAG,QAAO,WAAQ,OAAArG,EAAK6E,MAAM0B,SAC1C/K,KAAKmI,QAAQ0C,GAAG,QAAO,WAAQ,OAAArG,EAAKqF,MAAMkB,SAC1C/K,KAAKmI,QAAQ0C,GAAG,SAAQ,WAAQ,OAAArG,EAAKsF,OAAOiB,SAE5C/K,KAAKmI,QAAQ6C,MAAMhL,KAAKiL,iBAAiBC,eAEzClL,KAAKoE,KAAK2G,KAAK/K,KAAKmI,8BAlGvBgD,EAAAA,UAAS1H,KAAA,CAAC,CACT2H,SAAU,wBACVC,SAAU,2FAJHzC,+CAON0C,EAAAA,UAAS7H,KAAA,CAAC,4CAGV8H,EAAAA,uBACAA,EAAAA,+BACAA,EAAAA,sBACAA,EAAAA,oBAEAC,EAAAA,qBAEAA,EAAAA,uBACAA,EAAAA,sBACAA,EAAAA,sBACAA,EAAAA,uBACAA,EAAAA,UAiFHoB,kBC5EE,SAAAE,EAAmBrD,GAAAzJ,KAAAyJ,sBAAAA,EAXTzJ,KAAAoE,KAAO,IAAIsF,EAAAA,aAEX1J,KAAA2J,KAAO,IAAID,EAAAA,aACX1J,KAAA4J,OAAS,IAAIF,EAAAA,aACb1J,KAAAqJ,MAAQ,IAAIK,EAAAA,aACZ1J,KAAA6J,MAAQ,IAAIH,EAAAA,aACZ1J,KAAA8J,OAAS,IAAIJ,EAAAA,aAGvB1J,KAAA+J,MAA2C,WA8E7C,OA1EQ+C,EAAAlN,UAAAoK,YAAN,SAAkBC,4GAChBjK,KAAK+J,MAAQ,WAEPzE,EAAUtF,KAAKyJ,sBAAsBV,aACzC/I,KAAKsF,QACLtF,KAAKgJ,gBAEHkB,GAAiB,EAEjBD,EAAQE,iBAAmBF,EAAQxE,SAAWzF,KAAKmG,SACrC,CAAA,GAAhBiE,EAAApK,MAA2ByJ,sBACxBtD,SAASnG,KAAKyF,OAAQzF,KAAKmK,iBAC3BE,aAHD,CAAA,EAAA,UACFD,EAAKjE,SAAWmE,EAAA5I,OAGhBwI,GAAiB,0BAIjBD,EAAQ3E,SACR2E,EAAQjB,iBACPhJ,KAAKmI,SACN+B,KAEIlK,KAAKmI,UAAY+B,EACnBlK,KAAKuK,OAAOjF,GACHtF,KAAKmG,UAAY+D,GAC1BlK,KAAK2E,cAAcW,IAIvBtF,KAAK+J,MAAQ,kBAGT+C,EAAAlN,UAAA4K,SAAN,+GACqB,aAAfxK,KAAK+J,MAAL,CAAA,EAAA,IACF/J,KAAK+J,MAAQ,WAEG,CAAA,GAAhBK,EAAApK,MAA2ByJ,sBACxBtD,SAASnG,KAAKyF,QACd4E,qBAFHD,EAAKjE,SAAWmE,EAAA5I,OAGhB1B,KAAK2E,gBAEL3E,KAAK+J,MAAQ,yCAIjB+C,EAAAlN,UAAA6K,YAAA,WACMzK,KAAKmI,SACPnI,KAAKmI,QAAQuC,WAIjBoC,EAAAlN,UAAA2K,OAAA,SAAOjF,GACLtF,KAAKmI,QAAQoC,OAAOjF,IAMtBwH,EAAAlN,UAAAmN,QAAA,WACE,OAAO/M,KAAKmI,SAGN2E,EAAAlN,UAAA+E,cAAR,SAAsBW,GAAtB,IAAAd,EAAAxE,UAAsB,IAAAsF,IAAAA,EAAA,IACpBtF,KAAKmI,QAAUnI,KAAKmG,SAASyE,OAAO,OAAQtF,GAC5CtF,KAAKmI,QAAQ0C,GAAG,SAAQ,SAAGC,GAAO,OAAAtG,EAAKoF,OAAOmB,KAAKD,KACnD9K,KAAKmI,QAAQ0C,GAAG,OAAM,WAAQ,OAAArG,EAAKmF,KAAKoB,SACxC/K,KAAKmI,QAAQ0C,GAAG,QAAO,WAAQ,OAAArG,EAAK6E,MAAM0B,SAC1C/K,KAAKmI,QAAQ0C,GAAG,QAAO,WAAQ,OAAArG,EAAKqF,MAAMkB,SAC1C/K,KAAKmI,QAAQ0C,GAAG,SAAQ,WAAQ,OAAArG,EAAKsF,OAAOiB,SAE5C/K,KAAKmI,QAAQ6C,MAAMhL,KAAKiL,iBAAiBC,eAEzClL,KAAKoE,KAAK2G,KAAK/K,KAAKmI,8BAlGvBgD,EAAAA,UAAS1H,KAAA,CAAC,CACT2H,SAAU,kBACVC,SAAU,2FAJHzC,+CAON0C,EAAAA,UAAS7H,KAAA,CAAC,4CAGV8H,EAAAA,uBACAA,EAAAA,+BACAA,EAAAA,sBACAA,EAAAA,oBAEAC,EAAAA,qBAEAA,EAAAA,uBACAA,EAAAA,sBACAA,EAAAA,sBACAA,EAAAA,uBACAA,EAAAA,UAiFHsB,kBC3EE,SAAAE,EAAmBvD,GAAAzJ,KAAAyJ,sBAAAA,EAXTzJ,KAAAoE,KAAO,IAAIsF,EAAAA,aAEX1J,KAAA2J,KAAO,IAAID,EAAAA,aACX1J,KAAA4J,OAAS,IAAIF,EAAAA,aACb1J,KAAAqJ,MAAQ,IAAIK,EAAAA,aACZ1J,KAAA6J,MAAQ,IAAIH,EAAAA,aACZ1J,KAAA8J,OAAS,IAAIJ,EAAAA,aAGvB1J,KAAA+J,MAA2C,WAgF7C,OA5EQiD,EAAApN,UAAAoK,YAAN,SAAkBC,4GAChBjK,KAAK+J,MAAQ,WAEPzE,EAAUtF,KAAKyJ,sBAAsBV,aACzC/I,KAAKsF,QACLtF,KAAKgJ,gBAEHkB,GAAiB,EAEjBD,EAAQE,iBAAmBF,EAAQxE,SAAWzF,KAAKmG,SACrC,CAAA,GAAhBiE,EAAApK,MAA2ByJ,sBACxBtD,SAASnG,KAAKyF,OAAQzF,KAAKmK,iBAC3BE,aAHD,CAAA,EAAA,UACFD,EAAKjE,SAAWmE,EAAA5I,OAGhBwI,GAAiB,0BAIjBD,EAAQ3E,SACR2E,EAAQjB,iBACPhJ,KAAKmI,SACN+B,KAEIlK,KAAKmI,UAAY+B,EACnBlK,KAAKuK,OAAOjF,GACHtF,KAAKmG,UAAY+D,GAC1BlK,KAAK2E,cAAcW,IAIvBtF,KAAK+J,MAAQ,kBAGTiD,EAAApN,UAAA4K,SAAN,+GACqB,aAAfxK,KAAK+J,MAAL,CAAA,EAAA,IACF/J,KAAK+J,MAAQ,WAEG,CAAA,GAAhBK,EAAApK,MAA2ByJ,sBACxBtD,SAASnG,KAAKyF,QACd4E,qBAFHD,EAAKjE,SAAWmE,EAAA5I,OAGhB1B,KAAK2E,gBAEL3E,KAAK+J,MAAQ,yCAIjBiD,EAAApN,UAAA6K,YAAA,WACMzK,KAAKmI,SACPnI,KAAKmI,QAAQuC,WAIjBsC,EAAApN,UAAA2K,OAAA,SAAOjF,GACLtF,KAAKmI,QAAQoC,OAAOjF,IAMtB0H,EAAApN,UAAAqN,iBAAA,WACE,OAAOjN,KAAKmI,SAGN6E,EAAApN,UAAA+E,cAAR,SACEW,GADF,IAAAd,EAAAxE,UACE,IAAAsF,IAAAA,EAAA,IAEAtF,KAAKmI,QAAUnI,KAAKmG,SAASyE,OAAO,gBAAiBtF,GACrDtF,KAAKmI,QAAQ0C,GAAG,SAAQ,SAAGC,GAAO,OAAAtG,EAAKoF,OAAOmB,KAAKD,KACnD9K,KAAKmI,QAAQ0C,GAAG,OAAM,WAAQ,OAAArG,EAAKmF,KAAKoB,SACxC/K,KAAKmI,QAAQ0C,GAAG,QAAO,WAAQ,OAAArG,EAAK6E,MAAM0B,SAC1C/K,KAAKmI,QAAQ0C,GAAG,QAAO,WAAQ,OAAArG,EAAKqF,MAAMkB,SAC1C/K,KAAKmI,QAAQ0C,GAAG,SAAQ,WAAQ,OAAArG,EAAKsF,OAAOiB,SAE5C/K,KAAKmI,QAAQ6C,MAAMhL,KAAKiL,iBAAiBC,eAEzClL,KAAKoE,KAAK2G,KAAK/K,KAAKmI,8BArGvBgD,EAAAA,UAAS1H,KAAA,CAAC,CACT2H,SAAU,6BACVC,SAAU,2FAJHzC,+CAQN0C,EAAAA,UAAS7H,KAAA,CAAC,4CAGV8H,EAAAA,uBACAA,EAAAA,+BACAA,EAAAA,sBACAA,EAAAA,oBAEAC,EAAAA,qBAEAA,EAAAA,uBACAA,EAAAA,sBACAA,EAAAA,sBACAA,EAAAA,uBACAA,EAAAA,UAmFHwB,kBCpDE,SAAAE,EAAmBzD,GAAAzJ,KAAAyJ,sBAAAA,EA5BTzJ,KAAAoE,KAAO,IAAIsF,EAAAA,aAKX1J,KAAA4J,OAAS,IAAIF,EAAAA,aAGb1J,KAAA2J,KAAO,IAAID,EAAAA,aACX1J,KAAAqJ,MAAQ,IAAIK,EAAAA,aACZ1J,KAAA6J,MAAQ,IAAIH,EAAAA,aAEZ1J,KAAAmN,MAAQ,IAAIzD,EAAAA,aACZ1J,KAAAoN,cAAgB,IAAI1D,EAAAA,aAGpB1J,KAAAiI,OAAS,IAAIyB,EAAAA,aACb1J,KAAAqN,OAAS,IAAI3D,EAAAA,aACb1J,KAAAsN,sBAAwB,IAAI5D,EAAAA,aAG5B1J,KAAAuN,qBAAuB,IAAI7D,EAAAA,aAG3B1J,KAAAwN,aAAe,IAAI9D,EAAAA,aAoG/B,OA9FQwD,EAAAtN,UAAAoK,YAAN,SAAkBC,uHACV3E,EAAUtF,KAAKyJ,sBAAsBV,aACzC/I,KAAKsF,QACLtF,KAAKgJ,gBAEDmB,EAAkBnK,KAAKmK,gBACvB1E,EAASzF,KAAKyF,OAChByE,GAAiB,EAEjBD,EAAQE,iBAAmBF,EAAQxE,SAAWzF,KAAKmG,SACpC,CAAA,EAAMnG,KAAKyJ,sBACzBtD,SAASV,EAAQ0E,GACjBE,aAHD,CAAA,EAAA,UACIlE,EAAWiE,EAAA1I,OAGjB1B,KAAKmG,SAAWA,EAChB+D,GAAiB,0BAGfD,EAAQwD,gBAAkBzN,KAAK0H,gBACjC1H,KAAK0N,cAAc1N,KAAKyN,iBAIxBxD,EAAQ3E,SACR2E,EAAQjB,iBACPhJ,KAAKmI,SACN+B,KAEIlK,KAAKmI,UAAY+B,EACnBlK,KAAKuK,OAAOjF,GACHtF,KAAKmG,UAAY+D,IAC1BlK,KAAK0H,eAAiB1H,KAAKyJ,sBAAsB/B,eAC/CjC,EACAzF,KAAKyN,gBAEPzN,KAAK0H,eAAemD,GAAG,QAAO,SAAGC,GAAO,OAAAtG,EAAK2I,MAAMpC,KAAKD,KACxD9K,KAAK0H,eAAemD,GAAG,gBAAe,SAAGC,GACvC,OAAAtG,EAAK4I,cAAcrC,KAAKD,KAE1B9K,KAAK0H,eAAemD,GAAG,SAAQ,SAAGC,GAAO,OAAAtG,EAAKyD,OAAO8C,KAAKD,KAC1D9K,KAAK0H,eAAemD,GAAG,SAAQ,WAAQ,OAAArG,EAAK6I,OAAOtC,SACnD/K,KAAK0H,eAAemD,GAAG,wBAAuB,SAAGC,GAC/C,OAAAtG,EAAK8I,sBAAsBvC,KAAKD,KAElC9K,KAAK0H,eAAemD,GAAG,uBAAsB,SAAGC,GAC9C,OAAAtG,EAAK+I,qBAAqBxC,KAAKD,KAEjC9K,KAAKmI,QAAUnI,KAAKmG,SAASyE,OAAO,uBAAsB1L,EAAA,CACxDwI,eAAgB1H,KAAK0H,gBAClBpC,IAGLtF,KAAK2N,iBAAiB3H,UAAS,SAAEjF,GAC3BA,GACFyD,EAAK2D,QAAQ0C,GAAG,QAAO,SAAGC,GAAO,OAAAtG,EAAKoF,OAAOmB,KAAKD,KAClDtG,EAAK2D,QAAQ0C,GAAG,OAAM,WAAQ,OAAArG,EAAKmF,KAAKoB,SACxCvG,EAAK2D,QAAQ0C,GAAG,QAAO,WAAQ,OAAArG,EAAK6E,MAAM0B,SAC1CvG,EAAK2D,QAAQ0C,GAAG,QAAO,WAAQ,OAAArG,EAAKqF,MAAMkB,SAE1CvG,EAAK2D,QAAQ6C,MAAMxG,EAAKyG,iBAAiBC,eAEzC1G,EAAKJ,KAAK2G,KAAK,CACb6C,qBAAsBpJ,EAAK2D,QAC3BT,eAAgBlD,EAAKkD,kBAGvBlD,EAAKgJ,aAAazC,qBAO5BmC,EAAAtN,UAAA+N,eAAA,WACE,OAAOrH,EAAAA,KAAKtG,KAAK0H,eAAeiG,mBAGlCT,EAAAtN,UAAA2K,OAAA,SAAOjF,GACLtF,KAAKmI,QAAQoC,OAAOjF,IAGtB4H,EAAAtN,UAAA8N,cAAA,SAAcpI,GACZtF,KAAK0H,eAAe6C,OAAOjF,IAG7B4H,EAAAtN,UAAAiO,KAAA,WACE7N,KAAK0H,eAAemG,QAMtBX,EAAAtN,UAAAkO,UAAA,WACE,OAAO9N,KAAKmI,6BAzIfgD,EAAAA,UAAS1H,KAAA,CAAC,CACT2H,SAAU,oCACVC,SAAU,2FAJHzC,+CAON0C,EAAAA,UAAS7H,KAAA,CAAC,4CAIV8H,EAAAA,8BACAA,EAAAA,uBACAA,EAAAA,+BACAA,EAAAA,sBACAA,EAAAA,oBAEAC,EAAAA,uBAKAA,EAAAA,qBAGAA,EAAAA,sBACAA,EAAAA,sBACAA,EAAAA,sBAEAA,EAAAA,8BACAA,EAAAA,uBAGAA,EAAAA,uBACAA,EAAAA,sCACAA,EAAAA,qCAGAA,EAAAA,6BAGAA,EAAAA,UAoGH0B,KC3KAa,EAAA,WAgBE,SAAAA,EACyCC,EACRC,EACxB7I,EACA9B,GAHgCtD,KAAAgO,QAAAA,EACRhO,KAAAiO,YAAAA,EACxBjO,KAAAoF,OAAAA,EACApF,KAAAsD,OAAAA,EAkBX,OAfSyK,EAAAnO,UAAAgL,OAAP,SACEvF,EACAC,GAEA,OAAKD,GAAQrF,KAAKgO,QAIX,IAAI7I,EACTnF,KAAKoF,OACLpF,KAAKsD,OACL+B,GAAOrF,KAAKgO,QACZ1I,GAAWtF,KAAKiO,aAPT,0BAdZ1K,EAAAA,+EAGIC,EAAAA,OAAMC,KAAA,CAACV,wCACPS,EAAAA,OAAMC,KAAA,CAACR,YATHa,SACAZ,KA4BT6K,EAtCA,GC4BMG,EAAa,CACjB1E,EACAoC,EACAS,EACAE,EACAE,EACAG,EACAE,EACAE,EACAE,GAGIiB,EAAa,CAAC1C,GAEpB2C,EAAA,WAAA,SAAAA,KAsDA,OAjDgBA,EAAAC,QAAd,SACEC,EACAhJ,GAEA,MAAO,CACLiJ,SAAUH,EACVI,UAAW,CACT1K,EACA0E,EACAuF,EACAnF,EACA1F,EACAS,EACA,CACE8K,QAAS1L,EACT2L,SAAUJ,GAEZ,CACEG,QAASxL,EACTyL,SAAUpJ,MAMJ8I,EAAAO,SAAd,SACEL,EACAhJ,GAEA,MAAO,CACLiJ,SAAUH,EACVI,UAAW,CACT1K,EACA0E,EACAuF,EACAnF,EACA1F,EACAS,EACA,CACE8K,QAAS1L,EACT2L,SAAUJ,GAEZ,CACEG,QAASxL,EACTyL,SAAUpJ,0BAjDnBsJ,EAAAA,SAAQnL,KAAA,CAAC,CACRoL,aAAYhM,EAAMqL,EAAeC,GACjCW,QAAOjM,EAAMqL,EAAeC,OAoD9BC,EAtDA","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { InjectionToken } from '@angular/core';\n\nimport { StripeConstructorOptions } from '@stripe/stripe-js';\n\nexport const STRIPE_PUBLISHABLE_KEY = new InjectionToken<string>(\n  'Stripe Publishable Key'\n);\nexport const STRIPE_OPTIONS = new InjectionToken<StripeConstructorOptions>(\n  'Stripe Options'\n);\n","import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class WindowRef {\n  constructor(@Inject(PLATFORM_ID) public platformId: any) {}\n\n  public getNativeWindow(): Window {\n    if (isPlatformBrowser(this.platformId)) {\n      return window;\n    }\n    return {} as Window;\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class DocumentRef {\n  constructor(@Inject(PLATFORM_ID) public platformId: any) {}\n\n  public getNativeDocument(): Document {\n    if (isPlatformBrowser(this.platformId)) {\n      return document;\n    }\n    return {} as Document;\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\nimport { Observable, BehaviorSubject } from 'rxjs';\n\nimport { WindowRef } from './window-ref.service';\nimport { DocumentRef } from './document-ref.service';\n\nexport interface LazyStripeAPILoaderStatus {\n  loaded: boolean;\n  loading: boolean;\n  error: boolean;\n}\n\n@Injectable()\nexport class LazyStripeAPILoader {\n  public status = new BehaviorSubject<LazyStripeAPILoaderStatus>({\n    error: false,\n    loaded: false,\n    loading: false\n  });\n\n  constructor(\n    @Inject(PLATFORM_ID) public platformId: any,\n    public window: WindowRef,\n    public document: DocumentRef\n  ) {}\n\n  public asStream(): Observable<LazyStripeAPILoaderStatus> {\n    this.load();\n    return this.status.asObservable();\n  }\n\n  public isReady(): boolean {\n    return this.status.getValue().loaded;\n  }\n\n  public load() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    const status: LazyStripeAPILoaderStatus = this.status.getValue();\n    if (this.window.getNativeWindow().hasOwnProperty('Stripe')) {\n      this.status.next({\n        error: false,\n        loaded: true,\n        loading: false\n      });\n    } else if (!status.loaded && !status.loading) {\n      this.status.next({\n        ...status,\n        loading: true\n      });\n\n      const script = this.document.getNativeDocument().createElement('script');\n      script.type = 'text/javascript';\n      script.async = true;\n      script.defer = true;\n      script.src = 'https://js.stripe.com/v3/';\n\n      script.onload = () => {\n        this.status.next({\n          error: false,\n          loaded: true,\n          loading: false\n        });\n      };\n\n      script.onerror = () => {\n        this.status.next({\n          error: true,\n          loaded: false,\n          loading: false\n        });\n      };\n\n      this.document.getNativeDocument().body.appendChild(script);\n    }\n  }\n}\n","import { BehaviorSubject, from, Observable } from 'rxjs';\nimport { filter, first, map, switchMap } from 'rxjs/operators';\n\nimport {\n  ConfirmAuBecsDebitPaymentData,\n  ConfirmAuBecsDebitSetupData,\n  ConfirmBancontactPaymentData,\n  ConfirmBancontactPaymentOptions,\n  ConfirmCardPaymentData,\n  ConfirmCardPaymentOptions,\n  ConfirmEpsPaymentData,\n  ConfirmEpsPaymentOptions,\n  ConfirmFpxPaymentData,\n  ConfirmFpxPaymentOptions,\n  ConfirmGiropayPaymentData,\n  ConfirmGiropayPaymentOptions,\n  ConfirmIdealPaymentData,\n  ConfirmIdealPaymentOptions,\n  ConfirmP24PaymentData,\n  ConfirmP24PaymentOptions,\n  ConfirmCardSetupData,\n  ConfirmCardSetupOptions,\n  ConfirmSepaDebitPaymentData,\n  ConfirmSepaDebitSetupData,\n  CreatePaymentMethodData,\n  CreateSourceData,\n  CreateTokenIbanData,\n  CreateTokenCardData,\n  CreateTokenPiiData,\n  CreateTokenBankAccountData,\n  PaymentIntent,\n  PaymentMethod,\n  PaymentRequest,\n  PaymentRequestOptions,\n  RedirectToCheckoutOptions,\n  RetrieveSourceParam,\n  SetupIntent,\n  Stripe,\n  StripeCardElement,\n  StripeCardNumberElement,\n  StripeCardCvcElement,\n  StripeConstructorOptions,\n  StripeElements,\n  StripeElementsOptions,\n  StripeElement,\n  StripeError,\n  StripeIbanElement,\n  Source,\n  Token,\n  TokenCreateParams\n} from '@stripe/stripe-js';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { WindowRef } from './window-ref.service';\nimport {\n  LazyStripeAPILoader,\n  LazyStripeAPILoaderStatus\n} from './api-loader.service';\n\nexport class StripeInstance implements StripeServiceInterface {\n  private stripe$ = new BehaviorSubject<Stripe | undefined>(undefined);\n  stripe = this.stripe$\n    .asObservable()\n    .pipe(filter((stripe) => Boolean(stripe)));\n\n  constructor(\n    private loader: LazyStripeAPILoader,\n    private window: WindowRef,\n    private key: string,\n    private options?: StripeConstructorOptions\n  ) {\n    this.loader\n      .asStream()\n      .pipe(\n        filter((status: LazyStripeAPILoaderStatus) => status.loaded === true),\n        first(),\n        map(() => (this.window.getNativeWindow() as any).Stripe)\n      )\n      .subscribe((stripeInstance: any) => {\n        const stripe = this.options\n          ? (stripeInstance(this.key, this.options) as Stripe)\n          : (stripeInstance(this.key) as Stripe);\n\n        this.stripe$.next(stripe);\n      });\n  }\n\n  getInstance(): Stripe | undefined {\n    return this.stripe$.getValue();\n  }\n\n  elements(options?: StripeElementsOptions): Observable<StripeElements> {\n    return this.stripe$.asObservable().pipe(\n      filter((stripe) => Boolean(stripe)),\n      map((stripe) => stripe.elements(options)),\n      first()\n    );\n  }\n\n  redirectToCheckout(\n    options?: RedirectToCheckoutOptions\n  ): Observable<never | { error: StripeError }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.redirectToCheckout(options))),\n      first()\n    );\n  }\n\n  confirmAuBecsDebitPayment(\n    clientSecret: string,\n    data?: ConfirmAuBecsDebitPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmAuBecsDebitPayment(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  confirmBancontactPayment(\n    clientSecret: string,\n    data?: ConfirmBancontactPaymentData,\n    options?: ConfirmBancontactPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmBancontactPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmCardPayment(\n    clientSecret: string,\n    data?: ConfirmCardPaymentData,\n    options?: ConfirmCardPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmCardPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmEpsPayment(\n    clientSecret: string,\n    data?: ConfirmEpsPaymentData,\n    options?: ConfirmEpsPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmEpsPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmFpxPayment(\n    clientSecret: string,\n    data?: ConfirmFpxPaymentData,\n    options?: ConfirmFpxPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmFpxPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmGiropayPayment(\n    clientSecret: string,\n    data?: ConfirmGiropayPaymentData,\n    options?: ConfirmGiropayPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmGiropayPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmIdealPayment(\n    clientSecret: string,\n    data?: ConfirmIdealPaymentData,\n    options?: ConfirmIdealPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmIdealPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmP24Payment(\n    clientSecret: string,\n    data?: ConfirmP24PaymentData,\n    options?: ConfirmP24PaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmP24Payment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmSepaDebitPayment(\n    clientSecret: string,\n    data?: ConfirmSepaDebitPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmSepaDebitPayment(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  handleCardAction(\n    clientSecret: string\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.handleCardAction(clientSecret))),\n      first()\n    );\n  }\n\n  createPaymentMethod(\n    paymentMethodData: CreatePaymentMethodData\n  ): Observable<{\n    paymentMethod?: PaymentMethod;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.createPaymentMethod(paymentMethodData))\n      ),\n      first()\n    );\n  }\n\n  retrievePaymentIntent(\n    clientSecret: string\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.retrievePaymentIntent(clientSecret))),\n      first()\n    );\n  }\n\n  confirmAuBecsDebitSetup(\n    clientSecret: string,\n    data?: ConfirmAuBecsDebitSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmAuBecsDebitSetup(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  confirmCardSetup(\n    clientSecret: string,\n    data?: ConfirmCardSetupData,\n    options?: ConfirmCardSetupOptions\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmCardSetup(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmSepaDebitSetup(\n    clientSecret: string,\n    data?: ConfirmSepaDebitSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmSepaDebitSetup(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  retrieveSetupIntent(\n    clientSecret: string\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmSepaDebitSetup(clientSecret))),\n      first()\n    );\n  }\n\n  paymentRequest(options: PaymentRequestOptions): PaymentRequest | undefined {\n    const stripe = this.getInstance();\n\n    return stripe ? stripe.paymentRequest(options) : undefined;\n  }\n\n  createToken(\n    tokenType: StripeIbanElement,\n    data: CreateTokenIbanData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: StripeCardElement | StripeCardNumberElement,\n    data?: CreateTokenCardData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'pii',\n    data: CreateTokenPiiData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'bank_account',\n    data: CreateTokenBankAccountData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'cvc_update',\n    element?: StripeCardCvcElement\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'account',\n    data: TokenCreateParams.Account\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'person',\n    data: TokenCreateParams.Person\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(tokenType, data) {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.createToken(tokenType, data))),\n      first()\n    );\n  }\n\n  createSource(\n    element: StripeElement,\n    sourceData: CreateSourceData\n  ): Observable<{ source?: Source; error?: StripeError }>;\n  createSource(\n    sourceData: CreateSourceData\n  ): Observable<{ source?: Source; error?: StripeError }>;\n  createSource(a, b?): Observable<{ source?: Source; error?: StripeError }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.createSource(a, b))),\n      first()\n    );\n  }\n\n  retrieveSource(\n    source: RetrieveSourceParam\n  ): Observable<{ source?: Source; error?: StripeError }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.retrieveSource(source))),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  handleCardPayment(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).handleCardPayment(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  confirmPaymentIntent(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).confirmPaymentIntent(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  handleCardSetup(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).handleCardSetup(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  confirmSetupIntent(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).confirmSetupIntent(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  handleFpxPayment(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).handleFpxPayment(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport {\n  ConfirmAuBecsDebitPaymentData,\n  ConfirmAuBecsDebitSetupData,\n  ConfirmBancontactPaymentData,\n  ConfirmBancontactPaymentOptions,\n  ConfirmCardPaymentData,\n  ConfirmCardPaymentOptions,\n  ConfirmEpsPaymentData,\n  ConfirmEpsPaymentOptions,\n  ConfirmFpxPaymentData,\n  ConfirmFpxPaymentOptions,\n  ConfirmGiropayPaymentData,\n  ConfirmGiropayPaymentOptions,\n  ConfirmIdealPaymentData,\n  ConfirmIdealPaymentOptions,\n  ConfirmP24PaymentData,\n  ConfirmP24PaymentOptions,\n  ConfirmCardSetupData,\n  ConfirmCardSetupOptions,\n  ConfirmSepaDebitPaymentData,\n  ConfirmSepaDebitSetupData,\n  CreatePaymentMethodData,\n  CreateSourceData,\n  CreateTokenIbanData,\n  CreateTokenCardData,\n  CreateTokenPiiData,\n  CreateTokenBankAccountData,\n  PaymentIntent,\n  PaymentMethod,\n  PaymentRequest,\n  PaymentRequestOptions,\n  RedirectToCheckoutOptions,\n  RetrieveSourceParam,\n  SetupIntent,\n  Stripe,\n  StripeCardElement,\n  StripeCardNumberElement,\n  StripeCardCvcElement,\n  StripeConstructorOptions,\n  StripeElements,\n  StripeElementsOptions,\n  StripeElement,\n  StripeError,\n  StripeIbanElement,\n  Source,\n  Token,\n  TokenCreateParams\n} from '@stripe/stripe-js';\n\nimport {\n  STRIPE_PUBLISHABLE_KEY,\n  STRIPE_OPTIONS\n} from '../interfaces/ngx-stripe.interface';\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { WindowRef } from './window-ref.service';\nimport {\n  LazyStripeAPILoader,\n  LazyStripeAPILoaderStatus\n} from './api-loader.service';\n\nimport { StripeInstance } from './stripe-instance.class';\n\n@Injectable()\nexport class StripeService implements StripeServiceInterface {\n  stripe!: StripeInstance;\n\n  constructor(\n    @Inject(STRIPE_PUBLISHABLE_KEY) public key: string,\n    @Inject(STRIPE_OPTIONS) public options: StripeConstructorOptions,\n    public loader: LazyStripeAPILoader,\n    public window: WindowRef\n  ) {\n    if (key) {\n      this.stripe = new StripeInstance(this.loader, this.window, key, options);\n    }\n  }\n\n  getStripeReference(): Observable<any> {\n    return this.loader.asStream().pipe(\n      filter((status: LazyStripeAPILoaderStatus) => status.loaded === true),\n      map(() => (this.window.getNativeWindow() as any).Stripe)\n    );\n  }\n\n  getInstance(): Stripe | undefined {\n    return this.stripe.getInstance();\n  }\n\n  setKey(key: string, options?: StripeConstructorOptions) {\n    return this.changeKey(key, options);\n  }\n\n  changeKey(key: string, options?: StripeConstructorOptions) {\n    this.stripe = new StripeInstance(this.loader, this.window, key, options);\n\n    return this.stripe;\n  }\n\n  elements(options?: StripeElementsOptions): Observable<StripeElements> {\n    return this.stripe.elements(options);\n  }\n\n  redirectToCheckout(\n    options?: RedirectToCheckoutOptions\n  ): Observable<never | { error: StripeError }> {\n    return this.stripe.redirectToCheckout(options);\n  }\n\n  confirmAuBecsDebitPayment(\n    clientSecret: string,\n    data?: ConfirmAuBecsDebitPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmAuBecsDebitPayment(clientSecret, data);\n  }\n\n  confirmBancontactPayment(\n    clientSecret: string,\n    data?: ConfirmBancontactPaymentData,\n    options?: ConfirmBancontactPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmBancontactPayment(clientSecret, data, options);\n  }\n\n  confirmCardPayment(\n    clientSecret: string,\n    data?: ConfirmCardPaymentData,\n    options?: ConfirmCardPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmCardPayment(clientSecret, data, options);\n  }\n\n  confirmEpsPayment(\n    clientSecret: string,\n    data?: ConfirmEpsPaymentData,\n    options?: ConfirmEpsPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmEpsPayment(clientSecret, data, options);\n  }\n\n  confirmFpxPayment(\n    clientSecret: string,\n    data?: ConfirmFpxPaymentData,\n    options?: ConfirmFpxPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmFpxPayment(clientSecret, data, options);\n  }\n\n  confirmGiropayPayment(\n    clientSecret: string,\n    data?: ConfirmGiropayPaymentData,\n    options?: ConfirmGiropayPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmGiropayPayment(clientSecret, data, options);\n  }\n\n  confirmIdealPayment(\n    clientSecret: string,\n    data?: ConfirmIdealPaymentData,\n    options?: ConfirmIdealPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmIdealPayment(clientSecret, data, options);\n  }\n\n  confirmP24Payment(\n    clientSecret: string,\n    data?: ConfirmP24PaymentData,\n    options?: ConfirmP24PaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmP24Payment(clientSecret, data, options);\n  }\n\n  confirmSepaDebitPayment(\n    clientSecret: string,\n    data?: ConfirmSepaDebitPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmSepaDebitPayment(clientSecret, data);\n  }\n\n  handleCardAction(\n    clientSecret: string\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.handleCardAction(clientSecret);\n  }\n\n  createPaymentMethod(\n    paymentMethodData: CreatePaymentMethodData\n  ): Observable<{\n    paymentMethod?: PaymentMethod;\n    error?: StripeError;\n  }> {\n    return this.stripe.createPaymentMethod(paymentMethodData);\n  }\n\n  retrievePaymentIntent(\n    clientSecret: string\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.retrievePaymentIntent(clientSecret);\n  }\n\n  confirmAuBecsDebitSetup(\n    clientSecret: string,\n    data?: ConfirmAuBecsDebitSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmAuBecsDebitSetup(clientSecret, data);\n  }\n\n  confirmCardSetup(\n    clientSecret: string,\n    data?: ConfirmCardSetupData,\n    options?: ConfirmCardSetupOptions\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmCardSetup(clientSecret, data, options);\n  }\n\n  confirmSepaDebitSetup(\n    clientSecret: string,\n    data?: ConfirmSepaDebitSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmSepaDebitSetup(clientSecret, data);\n  }\n\n  retrieveSetupIntent(\n    clientSecret: string\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.retrieveSetupIntent(clientSecret);\n  }\n\n  paymentRequest(options: PaymentRequestOptions): PaymentRequest | undefined {\n    return this.stripe.paymentRequest(options);\n  }\n\n  createToken(\n    tokenType: StripeIbanElement,\n    data: CreateTokenIbanData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: StripeCardElement | StripeCardNumberElement,\n    data?: CreateTokenCardData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'pii',\n    data: CreateTokenPiiData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'bank_account',\n    data: CreateTokenBankAccountData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'cvc_update',\n    element?: StripeCardCvcElement\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'account',\n    data: TokenCreateParams.Account\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'person',\n    data: TokenCreateParams.Person\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(tokenType, data) {\n    return this.stripe.createToken(tokenType, data);\n  }\n\n  createSource(\n    element: StripeElement,\n    sourceData: CreateSourceData\n  ): Observable<{ source?: Source; error?: StripeError }>;\n  createSource(\n    sourceData: CreateSourceData\n  ): Observable<{ source?: Source; error?: StripeError }>;\n  createSource(a, b?): Observable<{ source?: Source; error?: StripeError }> {\n    return this.stripe.createSource(a, b);\n  }\n\n  retrieveSource(\n    source: RetrieveSourceParam\n  ): Observable<{ source?: Source; error?: StripeError }> {\n    return this.stripe.retrieveSource(source);\n  }\n\n  /**\n   * @deprecated\n   */\n  handleCardPayment(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.handleCardPayment(clientSecret, element, data);\n  }\n\n  /**\n   * @deprecated\n   */\n  confirmPaymentIntent(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmPaymentIntent(clientSecret, element, data);\n  }\n\n  /**\n   * @deprecated\n   */\n  handleCardSetup(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.handleCardSetup(clientSecret, element, data);\n  }\n\n  /**\n   * @deprecated\n   */\n  confirmSetupIntent(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmSetupIntent(clientSecret, element, data);\n  }\n\n  /**\n   * @deprecated\n   */\n  handleFpxPayment(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.handleFpxPayment(clientSecret, element, data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport {\n  PaymentRequest,\n  PaymentRequestOptions,\n  StripeCardElementOptions,\n  StripeAuBankAccountElementOptions,\n  StripeCardNumberElementOptions,\n  StripeCardExpiryElementOptions,\n  StripeElements,\n  StripeElementsOptions,\n  StripeFpxBankElementOptions,\n  StripeIbanElementOptions,\n  StripeIdealBankElementOptions,\n  StripePaymentRequestButtonElementOptions\n} from '@stripe/stripe-js';\n\nimport { StripeService } from './stripe.service';\n\n@Injectable()\nexport class StripeElementsService {\n  constructor(private stripeService: StripeService) {}\n\n  elements(\n    stripe,\n    options: StripeElementsOptions = {}\n  ): Observable<StripeElements> {\n    if (stripe) {\n      if (Object.keys(options).length > 0) {\n        return stripe.elements(options);\n      }\n      return stripe.elements();\n    } else {\n      if (Object.keys(options).length > 0) {\n        return this.stripeService.elements(options);\n      }\n      return this.stripeService.elements();\n    }\n  }\n\n  paymentRequest(\n    stripe,\n    options: PaymentRequestOptions\n  ): PaymentRequest | undefined {\n    return stripe\n      ? stripe.paymentRequest(options)\n      : this.stripeService.paymentRequest(options);\n  }\n\n  mergeOptions(\n    options: StripeCardElementOptions,\n    containerClass: string\n  ): StripeCardElementOptions;\n  mergeOptions(\n    options: StripeCardNumberElementOptions,\n    containerClass: string\n  ): StripeCardNumberElementOptions;\n  mergeOptions(\n    options: StripeCardExpiryElementOptions,\n    containerClass: string\n  ): StripeCardExpiryElementOptions;\n  mergeOptions(\n    options: StripeFpxBankElementOptions,\n    containerClass: string\n  ): StripeFpxBankElementOptions;\n  mergeOptions(\n    options: StripeIbanElementOptions,\n    containerClass: string\n  ): StripeIbanElementOptions;\n  mergeOptions(\n    options: StripeIdealBankElementOptions,\n    containerClass: string\n  ): StripeIdealBankElementOptions;\n  mergeOptions(\n    options: StripeAuBankAccountElementOptions,\n    containerClass: string\n  ): StripeAuBankAccountElementOptions;\n  mergeOptions(\n    options: StripePaymentRequestButtonElementOptions,\n    containerClass: string\n  ): StripePaymentRequestButtonElementOptions;\n  mergeOptions(options, containerClass: string) {\n    if (!containerClass || (options && options.classes)) {\n      return options || {};\n    }\n\n    if (!options || !options.classes) {\n      return {\n        ...(options || {}),\n        classes: {\n          base: containerClass,\n          complete: `${containerClass}--complete`,\n          empty: `${containerClass}--empty`,\n          focus: `${containerClass}--focus`,\n          invalid: `${containerClass}--invalid`,\n          webkitAutoFill: `${containerClass}--webkit-autoFill`\n        }\n      };\n    }\n\n    return options || {};\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeCardElementOptions,\n  StripeCardElement,\n  StripeElements,\n  StripeCardElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-card',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeCardComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeCardElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeCardElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeCardElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeCardElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeCardElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getCard() {\n    return this.element;\n  }\n\n  private createElement(options: Partial<StripeCardElementOptions> = {}) {\n    this.element = this.elements.create('card', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  Output,\n  EventEmitter\n} from '@angular/core';\n\nimport { StripeElements, StripeElementsOptions } from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Directive({\n  selector: 'ngx-stripe-card-group,[ngxStripeCardGroup]'\n})\nexport class StripeCardGroupDirective implements OnInit, OnChanges {\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() elements = new EventEmitter<StripeElements>();\n\n  _elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const elementsOptions = this.elementsOptions;\n    const stripe = this.stripe;\n\n    if (changes.elementsOptions || changes.stripe || !this._elements) {\n      this._elements = await this.stripeElementsService\n        .elements(stripe, elementsOptions)\n        .toPromise();\n      this.elements.emit(this._elements);\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this._elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.elements.emit(this._elements);\n\n      this.state = 'ready';\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElements,\n  StripeCardNumberElement,\n  StripeCardNumberElementOptions,\n  StripeCardNumberElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { StripeCardGroupDirective } from '../directives/card-group.directive';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-card-number',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeCardNumberComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeCardNumberElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeCardNumberElementOptions>;\n\n  @Output() load = new EventEmitter<StripeCardNumberElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeCardNumberElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  cardGroupSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private cardGroup: StripeCardGroupDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.options || changes.containerClass) {\n      this.setupElement('options');\n    }\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe(\n        (elements: StripeElements) => {\n          this.elements = elements;\n          this.setupElement('elements');\n        }\n      );\n    } else {\n      throw new Error(\n        'StripeCardNumberComponent must have StripeCardGroupDirective parent'\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeCardNumberElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getCardNumber() {\n    return this.element;\n  }\n\n  private setupElement(source: 'elements' | 'options') {\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardNumber', options);\n      this.element.on('change', (ev) => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n\n      this.element.mount(this.stripeElementRef.nativeElement);\n\n      this.load.emit(this.element);\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElements,\n  StripeCardExpiryElement,\n  StripeCardExpiryElementOptions,\n  StripeCardExpiryElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { StripeCardGroupDirective } from '../directives/card-group.directive';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-card-expiry',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeCardExpiryComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeCardExpiryElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeCardExpiryElementOptions>;\n\n  @Output() load = new EventEmitter<StripeCardExpiryElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeCardExpiryElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  cardGroupSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private cardGroup: StripeCardGroupDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.options || changes.containerClass) {\n      this.setupElement('options');\n    }\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe(\n        (elements: StripeElements) => {\n          this.elements = elements;\n          this.setupElement('elements');\n        }\n      );\n    } else {\n      throw new Error(\n        'StripeCardExpiryComponent must have StripeCardGroupDirective parent'\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeCardExpiryElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getCardExpiry() {\n    return this.element;\n  }\n\n  private setupElement(source: 'elements' | 'options') {\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardExpiry', options);\n      this.element.on('change', (ev) => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n\n      this.element.mount(this.stripeElementRef.nativeElement);\n\n      this.load.emit(this.element);\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElements,\n  StripeCardCvcElement,\n  StripeCardCvcElementChangeEvent,\n  StripeCardCvcElementOptions\n} from '@stripe/stripe-js';\n\nimport { StripeCardGroupDirective } from '../directives/card-group.directive';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-card-cvc',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeCardCvcComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeCardCvcElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeCardCvcElementOptions>;\n\n  @Output() load = new EventEmitter<StripeCardCvcElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeCardCvcElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  cardGroupSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private cardGroup: StripeCardGroupDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.options || changes.containerClass) {\n      this.setupElement('options');\n    }\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe(\n        (elements: StripeElements) => {\n          this.elements = elements;\n          this.setupElement('elements');\n        }\n      );\n    } else {\n      throw new Error(\n        'StripeCardCvcComponent must have StripeCardGroupDirective parent'\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeCardCvcElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getCardCvc() {\n    return this.element;\n  }\n\n  private setupElement(source: 'elements' | 'options') {\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardCvc', options);\n      this.element.on('change', (ev) => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n\n      this.element.mount(this.stripeElementRef.nativeElement);\n\n      this.load.emit(this.element);\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeFpxBankElement,\n  StripeFpxBankElementChangeEvent,\n  StripeFpxBankElementOptions\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-fpx-bank',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeFpxBankComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeFpxBankElement;\n\n  @Input() containerClass: string;\n  @Input() options: StripeFpxBankElementOptions;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeFpxBankElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeFpxBankElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeFpxBankElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getFpxBank() {\n    return this.element;\n  }\n\n  private createElement(\n    options: StripeFpxBankElementOptions = { accountHolderType: 'individual' }\n  ) {\n    this.element = this.elements.create('fpxBank', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeIdealBankElement,\n  StripeIdealBankElementOptions,\n  StripeIdealBankElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-ideal-bank',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeIdealBankComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeIdealBankElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeIdealBankElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeIdealBankElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeIdealBankElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeIdealBankElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getIdealBank() {\n    return this.element;\n  }\n\n  private createElement(options: Partial<StripeIdealBankElementOptions> = {}) {\n    this.element = this.elements.create('idealBank', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeIbanElement,\n  StripeIbanElementOptions,\n  StripeIbanElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-iban',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeIbanComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeIbanElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeIbanElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeIbanElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeIbanElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeIbanElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getIban() {\n    return this.element;\n  }\n\n  private createElement(options: Partial<StripeIbanElementOptions> = {}) {\n    this.element = this.elements.create('iban', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeAuBankAccountElement,\n  StripeAuBankAccountElementOptions,\n  StripeAuBankAccountElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-au-bank-account',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeAuBankAccountComponent\n  implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeAuBankAccountElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeAuBankAccountElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeAuBankAccountElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeAuBankAccountElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeAuBankAccountElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getAuBankAccount() {\n    return this.element;\n  }\n\n  private createElement(\n    options: Partial<StripeAuBankAccountElementOptions> = {}\n  ) {\n    this.element = this.elements.create('auBankAccount', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { Observable, from } from 'rxjs';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  PaymentRequestOptions,\n  PaymentRequest,\n  CanMakePaymentResult,\n  PaymentRequestUpdateOptions,\n  StripePaymentRequestButtonElement,\n  StripePaymentRequestButtonElementOptions,\n  StripePaymentRequestButtonElementClickEvent,\n  PaymentRequestTokenEvent,\n  PaymentRequestPaymentMethodEvent,\n  PaymentRequestSourceEvent,\n  PaymentRequestShippingAddressEvent,\n  PaymentRequestShippingOptionEvent\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-payment-request-button',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripePaymentRequestButtonComponent implements OnChanges {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripePaymentRequestButtonElement;\n  paymentRequest!: PaymentRequest;\n\n  @Input() containerClass: string;\n  @Input() paymentOptions: PaymentRequestOptions;\n  @Input() options: StripePaymentRequestButtonElementOptions;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<{\n    paymentRequestButton: StripePaymentRequestButtonElement;\n    paymentRequest: PaymentRequest;\n  }>();\n\n  @Output() change = new EventEmitter<\n    StripePaymentRequestButtonElementClickEvent\n  >();\n  @Output() blur = new EventEmitter<void>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n\n  @Output() token = new EventEmitter<PaymentRequestTokenEvent>();\n  @Output() paymentMethod = new EventEmitter<\n    PaymentRequestPaymentMethodEvent\n  >();\n  @Output() source = new EventEmitter<PaymentRequestSourceEvent>();\n  @Output() cancel = new EventEmitter<void>();\n  @Output() shippingaddresschange = new EventEmitter<\n    PaymentRequestShippingAddressEvent\n  >();\n  @Output() shippingoptionchange = new EventEmitter<\n    PaymentRequestShippingOptionEvent\n  >();\n  @Output() notavailable = new EventEmitter<void>();\n\n  elements: StripeElements;\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    const elementsOptions = this.elementsOptions;\n    const stripe = this.stripe;\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      const elements = await this.stripeElementsService\n        .elements(stripe, elementsOptions)\n        .toPromise();\n      this.elements = elements;\n      updateElements = true;\n    }\n\n    if (changes.paymentOptions && this.paymentRequest) {\n      this.updateRequest(this.paymentOptions);\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.paymentRequest = this.stripeElementsService.paymentRequest(\n          stripe,\n          this.paymentOptions\n        );\n        this.paymentRequest.on('token', (ev) => this.token.emit(ev));\n        this.paymentRequest.on('paymentmethod', (ev) =>\n          this.paymentMethod.emit(ev)\n        );\n        this.paymentRequest.on('source', (ev) => this.source.emit(ev));\n        this.paymentRequest.on('cancel', () => this.cancel.emit());\n        this.paymentRequest.on('shippingaddresschange', (ev) =>\n          this.shippingaddresschange.emit(ev)\n        );\n        this.paymentRequest.on('shippingoptionchange', (ev) =>\n          this.shippingoptionchange.emit(ev)\n        );\n        this.element = this.elements.create('paymentRequestButton', {\n          paymentRequest: this.paymentRequest,\n          ...options\n        });\n\n        this.canMakePayment().subscribe((result) => {\n          if (result) {\n            this.element.on('click', (ev) => this.change.emit(ev));\n            this.element.on('blur', () => this.blur.emit());\n            this.element.on('focus', () => this.focus.emit());\n            this.element.on('ready', () => this.ready.emit());\n\n            this.element.mount(this.stripeElementRef.nativeElement);\n\n            this.load.emit({\n              paymentRequestButton: this.element,\n              paymentRequest: this.paymentRequest\n            });\n          } else {\n            this.notavailable.emit();\n          }\n        });\n      }\n    }\n  }\n\n  canMakePayment(): Observable<CanMakePaymentResult | null> {\n    return from(this.paymentRequest.canMakePayment());\n  }\n\n  update(options: Partial<StripePaymentRequestButtonElementOptions>) {\n    this.element.update(options);\n  }\n\n  updateRequest(options: PaymentRequestUpdateOptions) {\n    this.paymentRequest.update(options);\n  }\n\n  show() {\n    this.paymentRequest.show();\n  }\n\n  /**\n   * @deprecated\n   */\n  getButton() {\n    return this.element;\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { StripeConstructorOptions } from '@stripe/stripe-js';\n\nimport {\n  STRIPE_OPTIONS,\n  STRIPE_PUBLISHABLE_KEY\n} from '../interfaces/ngx-stripe.interface';\n\nimport { LazyStripeAPILoader } from './api-loader.service';\nimport { WindowRef } from './window-ref.service';\n\nimport { StripeInstance } from './stripe-instance.class';\n\n@Injectable()\nexport class StripeFactoryService {\n  constructor(\n    @Inject(STRIPE_PUBLISHABLE_KEY) public baseKey: string,\n    @Inject(STRIPE_OPTIONS) public baseOptions: StripeConstructorOptions,\n    public loader: LazyStripeAPILoader,\n    public window: WindowRef\n  ) {}\n\n  public create(\n    key?: string,\n    options?: StripeConstructorOptions\n  ): StripeInstance {\n    if (!key && !this.baseKey) {\n      return null;\n    }\n\n    return new StripeInstance(\n      this.loader,\n      this.window,\n      key || this.baseKey,\n      options || this.baseOptions\n    );\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { StripeConstructorOptions } from '@stripe/stripe-js';\n\nimport { StripeCardComponent } from './components/card.component';\nimport { StripeCardNumberComponent } from './components/card-number.component';\nimport { StripeCardExpiryComponent } from './components/card-expiry.component';\nimport { StripeCardCvcComponent } from './components/card-cvc.component';\nimport { StripeFpxBankComponent } from './components/fpx-bank.component';\nimport { StripeIdealBankComponent } from './components/ideal-bank.component';\nimport { StripeIbanComponent } from './components/iban.component';\nimport { StripeAuBankAccountComponent } from './components/au-bank-account.component';\nimport { StripePaymentRequestButtonComponent } from './components/payment-request-button.component';\n\nimport { StripeCardGroupDirective } from './directives/card-group.directive';\n\nimport {\n  STRIPE_OPTIONS,\n  STRIPE_PUBLISHABLE_KEY\n} from './interfaces/ngx-stripe.interface';\n\nimport { LazyStripeAPILoader } from './services/api-loader.service';\nimport { WindowRef } from './services/window-ref.service';\nimport { DocumentRef } from './services/document-ref.service';\nimport { StripeService } from './services/stripe.service';\nimport { StripeFactoryService } from './services/stripe-factory.service';\nimport { StripeElementsService } from './services/stripe-elements.service';\n\nconst components = [\n  StripeCardComponent,\n  StripeCardNumberComponent,\n  StripeCardExpiryComponent,\n  StripeCardCvcComponent,\n  StripeFpxBankComponent,\n  StripeIdealBankComponent,\n  StripeIbanComponent,\n  StripeAuBankAccountComponent,\n  StripePaymentRequestButtonComponent\n];\n\nconst directives = [StripeCardGroupDirective];\n\n@NgModule({\n  declarations: [...components, ...directives],\n  exports: [...components, ...directives]\n})\nexport class NgxStripeModule {\n  public static forRoot(\n    publishableKey?: string,\n    options?: StripeConstructorOptions\n  ): ModuleWithProviders<NgxStripeModule> {\n    return {\n      ngModule: NgxStripeModule,\n      providers: [\n        LazyStripeAPILoader,\n        StripeService,\n        StripeFactoryService,\n        StripeElementsService,\n        WindowRef,\n        DocumentRef,\n        {\n          provide: STRIPE_PUBLISHABLE_KEY,\n          useValue: publishableKey\n        },\n        {\n          provide: STRIPE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n\n  public static forChild(\n    publishableKey?: string,\n    options?: StripeConstructorOptions\n  ): ModuleWithProviders<NgxStripeModule> {\n    return {\n      ngModule: NgxStripeModule,\n      providers: [\n        LazyStripeAPILoader,\n        StripeService,\n        StripeFactoryService,\n        StripeElementsService,\n        WindowRef,\n        DocumentRef,\n        {\n          provide: STRIPE_PUBLISHABLE_KEY,\n          useValue: publishableKey\n        },\n        {\n          provide: STRIPE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n}\n"]}