/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/fpx-bank.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, ViewChild, ElementRef, EventEmitter, Output } from '@angular/core';
import { StripeInstance } from '../services/stripe-instance.class';
import { StripeElementsService } from '../services/stripe-elements.service';
var StripeFpxBankComponent = /** @class */ (function () {
    function StripeFpxBankComponent(stripeElementsService) {
        this.stripeElementsService = stripeElementsService;
        this.load = new EventEmitter();
        this.blur = new EventEmitter();
        this.change = new EventEmitter();
        this.focus = new EventEmitter();
        this.ready = new EventEmitter();
        this.escape = new EventEmitter();
        this.state = 'notready';
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    StripeFpxBankComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var options, updateElements, _a;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        this.state = 'starting';
                        options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);
                        updateElements = false;
                        if (!(changes.elementsOptions || changes.stripe || !this.elements)) return [3 /*break*/, 2];
                        _a = this;
                        return [4 /*yield*/, this.stripeElementsService
                                .elements(this.stripe, this.elementsOptions)
                                .toPromise()];
                    case 1:
                        _a.elements = _b.sent();
                        updateElements = true;
                        _b.label = 2;
                    case 2:
                        if (changes.options ||
                            changes.containerClass ||
                            !this.element ||
                            updateElements) {
                            if (this.element && !updateElements) {
                                this.update(options);
                            }
                            else if (this.elements && updateElements) {
                                this.createElement(options);
                            }
                        }
                        this.state = 'ready';
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @return {?}
     */
    StripeFpxBankComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!(this.state === 'notready')) return [3 /*break*/, 2];
                        this.state = 'starting';
                        _a = this;
                        return [4 /*yield*/, this.stripeElementsService
                                .elements(this.stripe)
                                .toPromise()];
                    case 1:
                        _a.elements = _b.sent();
                        this.createElement();
                        this.state = 'ready';
                        _b.label = 2;
                    case 2: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @return {?}
     */
    StripeFpxBankComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.element) {
            this.element.destroy();
        }
    };
    /**
     * @param {?} options
     * @return {?}
     */
    StripeFpxBankComponent.prototype.update = /**
     * @param {?} options
     * @return {?}
     */
    function (options) {
        this.element.update(options);
    };
    /**
     * @deprecated
     */
    /**
     * @deprecated
     * @return {?}
     */
    StripeFpxBankComponent.prototype.getFpxBank = /**
     * @deprecated
     * @return {?}
     */
    function () {
        return this.element;
    };
    /**
     * @private
     * @param {?=} options
     * @return {?}
     */
    StripeFpxBankComponent.prototype.createElement = /**
     * @private
     * @param {?=} options
     * @return {?}
     */
    function (options) {
        var _this = this;
        if (options === void 0) { options = { accountHolderType: 'individual' }; }
        this.element = this.elements.create('fpxBank', options);
        this.element.on('change', (/**
         * @param {?} ev
         * @return {?}
         */
        function (ev) { return _this.change.emit(ev); }));
        this.element.on('blur', (/**
         * @return {?}
         */
        function () { return _this.blur.emit(); }));
        this.element.on('focus', (/**
         * @return {?}
         */
        function () { return _this.focus.emit(); }));
        this.element.on('ready', (/**
         * @return {?}
         */
        function () { return _this.ready.emit(); }));
        this.element.on('escape', (/**
         * @return {?}
         */
        function () { return _this.escape.emit(); }));
        this.element.mount(this.stripeElementRef.nativeElement);
        this.load.emit(this.element);
    };
    StripeFpxBankComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ngx-stripe-fpx-bank',
                    template: "<div class=\"field\" #stripeElementRef></div>"
                }] }
    ];
    StripeFpxBankComponent.ctorParameters = function () { return [
        { type: StripeElementsService }
    ]; };
    StripeFpxBankComponent.propDecorators = {
        stripeElementRef: [{ type: ViewChild, args: ['stripeElementRef',] }],
        containerClass: [{ type: Input }],
        options: [{ type: Input }],
        elementsOptions: [{ type: Input }],
        stripe: [{ type: Input }],
        load: [{ type: Output }],
        blur: [{ type: Output }],
        change: [{ type: Output }],
        focus: [{ type: Output }],
        ready: [{ type: Output }],
        escape: [{ type: Output }]
    };
    return StripeFpxBankComponent;
}());
export { StripeFpxBankComponent };
if (false) {
    /** @type {?} */
    StripeFpxBankComponent.prototype.stripeElementRef;
    /** @type {?} */
    StripeFpxBankComponent.prototype.element;
    /** @type {?} */
    StripeFpxBankComponent.prototype.containerClass;
    /** @type {?} */
    StripeFpxBankComponent.prototype.options;
    /** @type {?} */
    StripeFpxBankComponent.prototype.elementsOptions;
    /** @type {?} */
    StripeFpxBankComponent.prototype.stripe;
    /** @type {?} */
    StripeFpxBankComponent.prototype.load;
    /** @type {?} */
    StripeFpxBankComponent.prototype.blur;
    /** @type {?} */
    StripeFpxBankComponent.prototype.change;
    /** @type {?} */
    StripeFpxBankComponent.prototype.focus;
    /** @type {?} */
    StripeFpxBankComponent.prototype.ready;
    /** @type {?} */
    StripeFpxBankComponent.prototype.escape;
    /** @type {?} */
    StripeFpxBankComponent.prototype.elements;
    /** @type {?} */
    StripeFpxBankComponent.prototype.state;
    /** @type {?} */
    StripeFpxBankComponent.prototype.stripeElementsService;
}
//# sourceMappingURL=data:application/json;base64,