{"version":3,"file":"image-cropper.component.d.ts","sources":["image-cropper.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, OnChanges, SimpleChanges, ChangeDetectorRef } from '@angular/core';\nimport { DomSanitizer, SafeUrl, SafeStyle } from '@angular/platform-browser';\nexport interface CropperPosition {\n    x1: number;\n    y1: number;\n    x2: number;\n    y2: number;\n}\nexport declare class ImageCropperComponent implements OnChanges {\n    private elementRef;\n    private sanitizer;\n    private cd;\n    private originalImage;\n    private moveStart;\n    private maxSize;\n    private originalSize;\n    safeImgDataUrl: SafeUrl | string;\n    marginLeft: SafeStyle | string;\n    imageVisible: boolean;\n    imageFileChanged: File;\n    imageChangedEvent: any;\n    imageBase64: string;\n    format: 'png' | 'jpeg' | 'bmp' | 'webp' | 'ico';\n    maintainAspectRatio: boolean;\n    aspectRatio: number;\n    resizeToWidth: number;\n    onlyScaleDown: boolean;\n    imageQuality: number;\n    cropper: CropperPosition;\n    imageCropped: EventEmitter<string>;\n    imageLoaded: EventEmitter<void>;\n    loadImageFailed: EventEmitter<void>;\n    constructor(elementRef: ElementRef, sanitizer: DomSanitizer, cd: ChangeDetectorRef);\n    ngOnChanges(changes: SimpleChanges): void;\n    private initCropper();\n    private loadImageFile(file);\n    private isValidImageType(type);\n    private checkExifRotationAndLoadImage(imageBase64);\n    private loadBase64Image(imageBase64);\n    imageLoadedInView(): void;\n    onResize(event: Event): void;\n    private resizeCropperPosition();\n    private resetCropperPosition();\n    startMove(event: any, moveType: string, position?: string | null): void;\n    moveImg(event: any): void;\n    private setMaxSize();\n    private checkCropperPosition(maintainSize?);\n    moveStop(event: any): void;\n    private move(event);\n    private resize(event);\n    private checkAspectRatio();\n    private crop();\n    private getResizeRatio(width);\n    private getClientX(event);\n    private getClientY(event);\n}\n"]}