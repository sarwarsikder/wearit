{"ast":null,"code":"import _toConsumableArray from \"/home/sarwar/wsit/wearit-backend/web/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/sarwar/wsit/wearit-backend/web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sarwar/wsit/wearit-backend/web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _slicedToArray from \"/home/sarwar/wsit/wearit-backend/web/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/sarwar/wsit/wearit-backend/web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { InjectionToken, Inject, Injectable, Directive, Input, Output, HostListener, EventEmitter, ElementRef, Renderer2, ChangeDetectorRef, PLATFORM_ID, Pipe, NgModule } from '@angular/core';\nimport { of, BehaviorSubject, EMPTY } from 'rxjs';\nimport { tap, map, delay, switchMap, catchError, filter, take } from 'rxjs/operators';\nimport { isPlatformBrowser } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nvar\n/** @type {?} */\nCONFIG = new InjectionToken('CONFIG');\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\n\n/**\r\n * Simple object check.\r\n * @param {?} item\r\n * @return {?}\r\n */\n\nfunction isObject(item) {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}\n/**\r\n * Deep merge two objects.\r\n * @param {?} target\r\n * @param {...?} sources\r\n * @return {?}\r\n */\n\n\nfunction mergeDeep(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (!sources.length) {\n    return target;\n  }\n\n  var\n  /** @type {?} */\n  source = sources.shift();\n\n  if (isObject(target) && isObject(source)) {\n    for (var\n    /** @type {?} */\n    key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, _defineProperty({}, key, {}));\n        }\n\n        mergeDeep(target[key], source[key]);\n      } else {\n        Object.assign(target, _defineProperty({}, key, source[key]));\n      }\n    }\n  }\n\n  return mergeDeep.apply(void 0, [target].concat(sources));\n}\n/**\r\n * Returns a readable number from share count\r\n * @param {?} num\r\n * @param {?} digits\r\n * @return {?}\r\n */\n\n\nfunction shareCountFormatter(num, digits) {\n  var\n  /** @type {?} */\n  si = [{\n    value: 1E9,\n    symbol: 'B'\n  }, {\n    value: 1E6,\n    symbol: 'M'\n  }, {\n    value: 1E3,\n    symbol: 'K'\n  }],\n\n  /** @type {?} */\n  rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n\n  for (var\n  /** @type {?} */\n  i = 0; i < si.length; i++) {\n    if (num >= si[i].value) {\n      return (num / si[i].value).toFixed(digits).replace(rx, '$1') + si[i].symbol;\n    }\n  }\n\n  return num.toFixed(digits).replace(rx, '$1');\n}\n/**\r\n * Copy text to clipboard\r\n * @param {?} url\r\n * @param {?} browser\r\n * @return {?}\r\n */\n\n\nfunction copyToClipboard(url, browser) {\n  return of(url).pipe(tap(function (text) {\n    // Create a hidden textarea element\n    var\n    /** @type {?} */\n    textArea = document.createElement('textarea');\n    textArea.value = text;\n    document.body.appendChild(textArea); // highlight textarea to copy the text\n\n    if (browser === 'ios') {\n      var\n      /** @type {?} */\n      range = document.createRange();\n      range.selectNodeContents(textArea);\n      var\n      /** @type {?} */\n      selection = window.getSelection();\n      selection.removeAllRanges();\n      selection.addRange(range);\n      textArea.readOnly = true;\n      textArea.setSelectionRange(0, 999999);\n    } else {\n      textArea.select();\n    }\n\n    document.execCommand('copy');\n    document.body.removeChild(textArea);\n  }));\n}\n/**\r\n * Get meta tag content\r\n * @param {?} key\r\n * @return {?}\r\n */\n\n\nfunction getMetaContent(key) {\n  var\n  /** @type {?} */\n  metaTag = document.querySelector(\"meta[property=\\\"\".concat(key, \"\\\"]\"));\n  return metaTag ? metaTag.getAttribute('content') : undefined;\n}\n/**\r\n * Detect operating system 'ios', 'android', or 'desktop'\r\n * @return {?}\r\n */\n\n\nfunction getOS() {\n  var\n  /** @type {?} */\n  userAgent = navigator.userAgent || navigator.vendor ||\n  /** @type {?} */\n  window.opera;\n\n  if (/android/i.test(userAgent)) {\n    return 'android';\n  }\n\n  if (/iPad|iPhone|iPod/.test(userAgent) && !\n  /** @type {?} */\n  window.MSStream) {\n    return 'ios';\n  }\n\n  return 'desktop';\n}\n/**\r\n * Returns a valid URL or falls back to current URL\r\n * @param {?} url\r\n * @param {?} fallbackUrl\r\n * @return {?}\r\n */\n\n\nfunction getValidUrl(url, fallbackUrl) {\n  if (url) {\n    var\n    /** @type {?} */\n    r = /(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n\n    if (r.test(url)) {\n      return url;\n    }\n\n    console.warn(\"[ShareButtons]: Sharing link '\".concat(url, \"' is invalid!\"));\n  }\n\n  return fallbackUrl;\n}\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\n\n/**\r\n * Meta tags operator - Serialize meta tags into the sharer URL\r\n */\n\n\nvar\n/** @type {?} */\nmetaTagsOperators = [map(function (ref) {\n  // Social network sharer URL */\n  var\n  /** @type {?} */\n  SharerURL = ref.prop.share[ref.os];\n\n  if (SharerURL) {\n    // object contains supported meta tags\n    var\n    /** @type {?} */\n    metaTags = ref.prop.share.metaTags; // object contains meta tags values */\n\n    var\n    /** @type {?} */\n    metaTagsValues = ref.metaTags;\n    var\n    /** @type {?} */\n    link = ''; // Set each meta tag with user value\n\n    if (metaTags) {\n      link = Object.entries(metaTags).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            metaTag = _ref2[1];\n\n        return metaTagsValues[key] ? \"\".concat(metaTag, \"=\").concat(encodeURIComponent(metaTagsValues[key])) : '';\n      }).join('&');\n    }\n\n    return SharerURL + link;\n  }\n\n  return;\n})];\n/**\r\n * Print button operator\r\n */\n\nvar\n/** @type {?} */\nprintOperators = [map(function () {\n  return window.print();\n})];\n/**\r\n * Copy link to clipboard, used for copy button\r\n */\n\nvar\n/** @type {?} */\ncopyOperators = [map(function (ref) {\n  // Disable the button\n  ref.renderer.setStyle(ref.el, 'pointer-events', 'none');\n  ref.temp = {\n    text: ref.prop.text,\n    icon: ref.prop.icon\n  };\n  ref.metaTags.url = decodeURIComponent(ref.metaTags.url);\n  return ref;\n}), switchMap(function (ref) {\n  return copyToClipboard(ref.metaTags.url, ref.os).pipe(map(function () {\n    ref.prop.text = ref.prop.successText;\n    ref.prop.icon = ref.prop.successIcon;\n    return ref;\n  }), catchError(function () {\n    ref.prop.text = ref.prop.failText;\n    ref.prop.icon = ref.prop.failIcon;\n    return of(ref);\n  }));\n}), map(function (ref) {\n  ref.cd.markForCheck();\n  return ref;\n}), delay(2000), map(function (ref) {\n  // Enable the button\n  ref.renderer.setStyle(ref.el, 'pointer-events', 'auto'); // Reset copy button text and icon */\n\n  ref.prop.text = ref.temp.text;\n  ref.prop.icon = ref.temp.icon;\n  ref.cd.markForCheck();\n})];\n/**\r\n * Add the share URL to message body, used for WhatsApp and Email buttons\r\n */\n\nvar\n/** @type {?} */\nurlInMessageOperators = [map(function (ref) {\n  var\n  /** @type {?} */\n  description = ref.metaTags.description;\n  var\n  /** @type {?} */\n  url = ref.metaTags.url;\n  var\n  /** @type {?} */\n  newRef = {\n    metaTags: {\n      description: description ? \"\".concat(description, \"\\r\\n\").concat(url) : url\n    }\n  };\n  return mergeDeep(ref, newRef);\n})];\nvar\n/** @type {?} */\nFacebookCountOperators = [map(function (res) {\n  return +res.share.share_count;\n})];\nvar\n/** @type {?} */\nPinterestCountOperators = [map(function (text) {\n  return JSON.parse(text.replace(/^receiveCount\\((.*)\\)/, '$1'));\n}), map(function (res) {\n  return +res.count;\n})];\nvar\n/** @type {?} */\nTumblrCountOperators = [map(function (res) {\n  return +res.response.note_count;\n})];\nvar\n/** @type {?} */\nRedditCountOperators = [map(function (res) {\n  return +res.data.children[0].data.score;\n})];\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\n\nvar\n/** @type {?} */\nshareButtonsProp = {\n  facebook: {\n    type: 'facebook',\n    text: 'Facebook',\n    icon: ['fab', 'facebook-f'],\n    color: '#4267B2',\n    share: {\n      desktop: 'https://www.facebook.com/sharer/sharer.php?',\n      android: 'https://www.facebook.com/sharer/sharer.php?',\n      ios: 'https://www.facebook.com/sharer/sharer.php?',\n      operators: metaTagsOperators,\n      metaTags: {\n        url: 'u'\n      }\n    },\n    count: {\n      request: 'http',\n      url: 'https://graph.facebook.com?id=',\n      operators: FacebookCountOperators\n    }\n  },\n  twitter: {\n    type: 'twitter',\n    text: 'Twitter',\n    icon: ['fab', 'twitter'],\n    color: '#00acee',\n    share: {\n      desktop: 'https://twitter.com/intent/tweet?',\n      android: 'https://twitter.com/intent/tweet?',\n      ios: 'https://twitter.com/intent/tweet?',\n      operators: metaTagsOperators,\n      metaTags: {\n        url: 'url',\n        description: 'text',\n        tags: 'hashtags',\n        via: 'via'\n      }\n    }\n  },\n  google: {\n    type: 'google',\n    text: 'Google+',\n    icon: ['fab', 'google-plus-g'],\n    color: '#DB4437',\n    share: {\n      desktop: 'https://plus.google.com/share?',\n      android: 'https://plus.google.com/share?',\n      ios: 'https://plus.google.com/share?',\n      metaTags: {\n        url: 'url'\n      },\n      operators: metaTagsOperators\n    }\n  },\n  linkedin: {\n    type: 'linkedin',\n    text: 'LinkedIn',\n    icon: ['fab', 'linkedin-in'],\n    color: '#006fa6',\n    share: {\n      desktop: 'http://www.linkedin.com/shareArticle?',\n      android: 'http://www.linkedin.com/shareArticle?',\n      ios: 'http://www.linkedin.com/shareArticle?',\n      operators: metaTagsOperators,\n      metaTags: {\n        url: 'url',\n        title: 'title',\n        description: 'summary'\n      }\n    }\n  },\n  pinterest: {\n    type: 'pinterest',\n    text: 'Pinterest',\n    icon: ['fab', 'pinterest-p'],\n    color: '#BD091D',\n    share: {\n      desktop: 'https://in.pinterest.com/pin/create/button/?',\n      android: 'https://in.pinterest.com/pin/create/button/?',\n      ios: 'https://in.pinterest.com/pin/create/button/?',\n      operators: metaTagsOperators,\n      metaTags: {\n        url: 'url',\n        description: 'description',\n        image: 'media'\n      }\n    },\n    count: {\n      request: 'http',\n      url: 'https://api.pinterest.com/v1/urls/count.json?url=',\n      args: {\n        responseType: 'text'\n      },\n      operators: PinterestCountOperators\n    }\n  },\n  reddit: {\n    type: 'reddit',\n    text: 'Reddit',\n    icon: ['fab', 'reddit-alien'],\n    color: '#FF4006',\n    share: {\n      desktop: 'http://www.reddit.com/submit?',\n      android: 'http://www.reddit.com/submit?',\n      ios: 'http://www.reddit.com/submit?',\n      operators: metaTagsOperators,\n      metaTags: {\n        url: 'url',\n        title: 'title'\n      }\n    },\n    count: {\n      request: 'http',\n      url: 'https://buttons.reddit.com/button_info.json?url=',\n      operators: RedditCountOperators\n    }\n  },\n  tumblr: {\n    type: 'tumblr',\n    text: 'Tumblr',\n    icon: ['fab', 'tumblr'],\n    color: '#36465D',\n    share: {\n      desktop: 'http://tumblr.com/widgets/share/tool?',\n      android: 'http://tumblr.com/widgets/share/tool?',\n      ios: 'http://tumblr.com/widgets/share/tool?',\n      operators: metaTagsOperators,\n      metaTags: {\n        url: 'canonicalUrl',\n        description: 'caption',\n        tags: 'tags'\n      }\n    },\n    count: {\n      request: 'jsonp',\n      url: 'https://api.tumblr.com/v2/share/stats?url=',\n      operators: TumblrCountOperators\n    }\n  },\n  whatsapp: {\n    type: 'whatsapp',\n    text: 'WhatsApp',\n    icon: ['fab', 'whatsapp'],\n    color: '#25D366',\n    share: {\n      desktop: 'https://web.whatsapp.com/send?',\n      android: 'whatsapp://send?',\n      ios: 'whatsapp://send?',\n      operators: [].concat(urlInMessageOperators, metaTagsOperators),\n      metaTags: {\n        description: 'text'\n      }\n    }\n  },\n  messenger: {\n    type: 'messenger',\n    text: 'Messenger',\n    icon: ['fab', 'facebook-messenger'],\n    color: '#0080FF',\n    share: {\n      android: 'fb-messenger://share/?',\n      ios: 'fb-messenger://share/?',\n      operators: metaTagsOperators,\n      metaTags: {\n        url: 'link'\n      }\n    }\n  },\n  telegram: {\n    type: 'telegram',\n    text: 'Telegram',\n    icon: ['fab', 'telegram-plane'],\n    color: '#0088cc',\n    share: {\n      desktop: 'https://t.me/share/url?',\n      android: 'https://t.me/share/url?',\n      ios: 'https://t.me/share/url?',\n      operators: metaTagsOperators,\n      metaTags: {\n        url: 'url',\n        description: 'text'\n      }\n    }\n  },\n  vk: {\n    type: 'vk',\n    text: 'VKontakte',\n    icon: ['fab', 'vk'],\n    color: '#4C75A3',\n    share: {\n      desktop: 'http://vk.com/share.php?',\n      android: 'http://vk.com/share.php?',\n      ios: 'http://vk.com/share.php?',\n      operators: metaTagsOperators,\n      metaTags: {\n        url: 'url'\n      }\n    }\n  },\n  stumble: {\n    type: 'stumble',\n    text: 'Stumble',\n    icon: ['fab', 'stumbleupon'],\n    color: '#eb4924',\n    share: {\n      desktop: 'http://www.stumbleupon.com/submit?',\n      android: 'http://www.stumbleupon.com/submit?',\n      ios: 'http://www.stumbleupon.com/submit?',\n      operators: metaTagsOperators,\n      metaTags: {\n        url: 'url'\n      }\n    }\n  },\n  xing: {\n    type: 'xing',\n    text: 'Xing',\n    icon: ['fab', 'xing'],\n    color: '#006567',\n    share: {\n      desktop: 'https://www.xing.com/app/user?op=share&',\n      android: 'https://www.xing.com/app/user?op=share&',\n      ios: 'https://www.xing.com/app/user?op=share&',\n      operators: metaTagsOperators,\n      metaTags: {\n        url: 'url'\n      }\n    }\n  },\n  sms: {\n    type: 'sms',\n    text: 'SMS',\n    icon: 'comment-alt',\n    color: '#20c16c',\n    share: {\n      desktop: 'sms:?',\n      android: 'sms:?',\n      ios: 'sms:?',\n      metaTags: {\n        description: 'body'\n      },\n      operators: [].concat(urlInMessageOperators, metaTagsOperators)\n    }\n  },\n  email: {\n    type: 'email',\n    text: 'Email',\n    icon: 'envelope',\n    color: '#FF961C',\n    share: {\n      desktop: 'mailto:?',\n      android: 'mailto:?',\n      ios: 'mailto:?',\n      operators: [].concat(urlInMessageOperators, metaTagsOperators),\n      metaTags: {\n        title: 'subject',\n        description: 'body'\n      }\n    }\n  },\n  copy: {\n    type: 'copy',\n    text: 'Copy link',\n    successText: 'Copied',\n    successIcon: 'check',\n    failText: 'Error',\n    failIcon: 'exclamation',\n    icon: 'link',\n    color: '#607D8B',\n    share: {\n      operators: copyOperators\n    }\n  },\n  print: {\n    type: 'print',\n    text: 'Print',\n    icon: 'print',\n    color: '#765AA2',\n    share: {\n      operators: printOperators\n    }\n  }\n};\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\n\nvar ShareButtons = /*#__PURE__*/function () {\n  /**\r\n   * @param {?} config\r\n   */\n  function ShareButtons(config) {\n    _classCallCheck(this, ShareButtons);\n\n    this.config = {\n      prop: shareButtonsProp,\n      options: {\n        theme: 'default',\n        include: [],\n        exclude: [],\n        size: 0,\n        url: undefined,\n        title: undefined,\n        description: undefined,\n        image: undefined,\n        tags: undefined,\n        twitterAccount: undefined,\n        autoSetMeta: true,\n        gaTracking: false,\n        windowWidth: 800,\n        windowHeight: 500,\n        moreButtonIcon: 'ellipsis-h',\n        lessButtonIcon: 'minus'\n      }\n    };\n    this.config$ = new BehaviorSubject(this.config);\n\n    if (config) {\n      this.setConfig(config);\n    }\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  _createClass(ShareButtons, [{\n    key: \"prop\",\n    get: function get() {\n      return this.config.prop;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"twitterAccount\",\n    get: function get() {\n      return this.config.options.twitterAccount;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"theme\",\n    get: function get() {\n      return this.config.options.theme;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"windowSize\",\n    get: function get() {\n      return \"width=\".concat(this.config.options.windowWidth, \", height=\").concat(this.config.options.windowHeight);\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"url\",\n    get: function get() {\n      return this.config.options.url;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"title\",\n    get: function get() {\n      return this.config.options.title;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"description\",\n    get: function get() {\n      return this.config.options.description;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"image\",\n    get: function get() {\n      return this.config.options.image;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"tags\",\n    get: function get() {\n      return this.config.options.tags;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"autoSetMeta\",\n    get: function get() {\n      return this.config.options.autoSetMeta;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"gaTracking\",\n    get: function get() {\n      return this.config.options.gaTracking;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.config.options.size;\n    }\n    /**\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"setConfig\",\n    value: function setConfig(config) {\n      this.config = mergeDeep(this.config, config);\n      this.config$.next(this.config);\n    }\n    /**\r\n     * @param {?} name\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"addButton\",\n    value: function addButton(name, data) {\n      var\n      /** @type {?} */\n      config = {\n        prop: Object.assign({}, shareButtonsProp, _defineProperty({}, name, data))\n      };\n      this.setConfig(config);\n    }\n  }]);\n\n  return ShareButtons;\n}();\n\nShareButtons.ɵfac = function ShareButtons_Factory(t) {\n  return new (t || ShareButtons)(ɵngcc0.ɵɵinject(CONFIG));\n};\n\nShareButtons.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ShareButtons,\n  factory: ShareButtons.ɵfac\n});\n/** @nocollapse */\n\nShareButtons.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [CONFIG]\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ShareButtons, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [CONFIG]\n      }]\n    }];\n  }, null);\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\n\n\nvar ShareButtonDirective = /*#__PURE__*/function () {\n  /**\r\n   * @param {?} shareService\r\n   * @param {?} http\r\n   * @param {?} renderer\r\n   * @param {?} cd\r\n   * @param {?} el\r\n   * @param {?} platform\r\n   */\n  function ShareButtonDirective(shareService, http, renderer, cd, el, platform) {\n    _classCallCheck(this, ShareButtonDirective);\n\n    this.shareService = shareService;\n    this.http = http;\n    this.renderer = renderer;\n    this.cd = cd;\n    this.el = el;\n    this.platform = platform;\n    /**\r\n     * Get share count\r\n     */\n\n    this.getCount = false;\n    /**\r\n     * Set meta tags from document head, useful when SEO is supported\r\n     */\n\n    this.autoSetMeta = this.shareService.autoSetMeta;\n    /**\r\n     * Meta tags inputs - initialized from the global options\r\n     */\n\n    this.url = this.shareService.url;\n    this.title = this.shareService.title;\n    this.description = this.shareService.description;\n    this.image = this.shareService.image;\n    this.tags = this.shareService.tags;\n    /**\r\n     * Stream that emits when share count is fetched\r\n     */\n\n    this.count = new EventEmitter();\n    /**\r\n     * Stream that emits when share dialog is opened\r\n     */\n\n    this.opened = new EventEmitter();\n    /**\r\n     * Stream that emits when share dialog is closed\r\n     */\n\n    this.closed = new EventEmitter();\n  }\n  /**\r\n   * Share link on element click\r\n   * @return {?}\r\n   */\n\n\n  _createClass(ShareButtonDirective, [{\n    key: \"onClick\",\n    value: function onClick() {\n      var _this = this;\n\n      if (isPlatformBrowser(this.platform)) {\n        var _of;\n\n        var\n        /** @type {?} */\n        metaTags = this.autoSetMeta ? {\n          url: this.url,\n          title: this.title || getMetaContent('og:title'),\n          description: this.description || getMetaContent('og:description'),\n          image: this.image || getMetaContent('og:image'),\n          via: this.shareService.twitterAccount || getMetaContent('twitter:site'),\n          tags: this.tags\n        } : {\n          url: this.url,\n          title: this.title,\n          description: this.description,\n          image: this.image,\n          tags: this.tags,\n          via: this.shareService.twitterAccount\n        };\n        var\n        /** @type {?} */\n        ref = {\n          cd: this.cd,\n          renderer: this.renderer,\n          prop: this.prop,\n          el: this.el.nativeElement,\n          os: getOS(),\n          metaTags: metaTags\n        }; // Share the link\n\n        (_of = of(ref)).pipe.apply(_of, _toConsumableArray(this.prop.share.operators).concat([tap(function (sharerURL) {\n          return _this.share(sharerURL);\n        }), take(1)])).subscribe();\n      }\n    }\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var _this2 = this;\n\n      if (isPlatformBrowser(this.platform)) {\n        if (changes['shareButton'] && (changes['shareButton'].firstChange || changes['shareButton'].previousValue !== this.shareButton)) {\n          this.createShareButton(this.shareButton);\n        }\n\n        if (!this.url || changes['url'] && changes['url'].previousValue !== this.url) {\n          of(null).pipe(map(function () {\n            _this2.url = getValidUrl(_this2.autoSetMeta ? _this2.url || getMetaContent('og:url') : _this2.url, window.location.href);\n            return _this2.url;\n          }), filter(function () {\n            return _this2.prop.count && _this2.getCount;\n          }), switchMap(function (url) {\n            return _this2.shareCount(url);\n          }), tap(function (shareCount) {\n            return _this2.count.emit(shareCount);\n          }), take(1)).subscribe();\n        }\n      }\n    }\n    /**\r\n     * Open sharing dialog\r\n     * @param {?} url - Share URL\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"share\",\n    value: function share(url) {\n      var _this3 = this;\n\n      if (url) {\n        // GA Tracking\n        if (this.shareService.gaTracking && typeof ga !== 'undefined') {\n          ga('send', 'social', this.prop.type, 'click', this.url);\n        } // Emit when share dialog is opened\n\n\n        this.opened.emit(this.prop.type);\n        var\n        /** @type {?} */\n        popUp = window.open(url, 'newwindow', this.shareService.windowSize); // Emit when share dialog is closed\n\n        if (popUp) {\n          var\n          /** @type {?} */\n          pollTimer = window.setInterval(function () {\n            if (popUp.closed) {\n              window.clearInterval(pollTimer);\n\n              _this3.closed.emit(_this3.prop.type);\n            }\n          }, 200);\n        }\n      }\n    }\n    /**\r\n     * Get link share count\r\n     * @param {?} url - Share URL\r\n     * @return {?} Share count\r\n     */\n\n  }, {\n    key: \"shareCount\",\n    value: function shareCount(url) {\n      if (this.prop.count.request === 'jsonp') {\n        var _this$http$jsonp;\n\n        return (_this$http$jsonp = this.http.jsonp(this.prop.count.url + url, 'callback')).pipe.apply(_this$http$jsonp, _toConsumableArray(this.prop.count.operators).concat([catchError(function () {\n          return EMPTY;\n        })]));\n      } else {\n        var _this$http$get;\n\n        return (_this$http$get = this.http.get(this.prop.count.url + url, this.prop.count.args)).pipe.apply(_this$http$get, _toConsumableArray(this.prop.count.operators).concat([catchError(function () {\n          return EMPTY;\n        })]));\n      }\n    }\n    /**\r\n     * @param {?} buttonsName\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"createShareButton\",\n    value: function createShareButton(buttonsName) {\n      var\n      /** @type {?} */\n      button = Object.assign({}, this.shareService.prop[buttonsName]);\n\n      if (button) {\n        // Set share button properties\n        this.prop = button; // Remove previous button class\n\n        this.renderer.removeClass(this.el.nativeElement, \"sb-\".concat(this._buttonClass)); // Add new button class\n\n        this.renderer.addClass(this.el.nativeElement, \"sb-\".concat(button.type)); // Set button css color variable\n\n        this.el.nativeElement.style.setProperty('--button-color', this.prop.color); // Keep a copy of the class for future replacement\n\n        this._buttonClass = button.type; // Set aria-label attribute\n\n        this.renderer.setAttribute(this.el.nativeElement, 'aria-label', button.ariaLabel || button.text);\n      } else {\n        throw new Error(\"[ShareButtons]: The share button '\".concat(buttonsName, \"' does not exist!\"));\n      }\n    }\n  }]);\n\n  return ShareButtonDirective;\n}();\n\nShareButtonDirective.ɵfac = function ShareButtonDirective_Factory(t) {\n  return new (t || ShareButtonDirective)(ɵngcc0.ɵɵdirectiveInject(ShareButtons), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.HttpClient), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nShareButtonDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ShareButtonDirective,\n  selectors: [[\"\", \"shareButton\", \"\"]],\n  hostBindings: function ShareButtonDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function ShareButtonDirective_click_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n  },\n  inputs: {\n    getCount: \"getCount\",\n    autoSetMeta: \"autoSetMeta\",\n    url: \"url\",\n    title: \"title\",\n    description: \"description\",\n    image: \"image\",\n    tags: \"tags\",\n    shareButton: \"shareButton\"\n  },\n  outputs: {\n    count: \"count\",\n    opened: \"opened\",\n    closed: \"closed\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n/** @nocollapse */\n\nShareButtonDirective.ctorParameters = function () {\n  return [{\n    type: ShareButtons\n  }, {\n    type: HttpClient\n  }, {\n    type: Renderer2\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ElementRef\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }];\n};\n\nShareButtonDirective.propDecorators = {\n  shareButton: [{\n    type: Input\n  }],\n  getCount: [{\n    type: Input\n  }],\n  autoSetMeta: [{\n    type: Input\n  }],\n  url: [{\n    type: Input\n  }],\n  title: [{\n    type: Input\n  }],\n  description: [{\n    type: Input\n  }],\n  image: [{\n    type: Input\n  }],\n  tags: [{\n    type: Input\n  }],\n  count: [{\n    type: Output\n  }],\n  opened: [{\n    type: Output\n  }],\n  closed: [{\n    type: Output\n  }],\n  onClick: [{\n    type: HostListener,\n    args: ['click']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ShareButtonDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[shareButton]'\n    }]\n  }], function () {\n    return [{\n      type: ShareButtons\n    }, {\n      type: ɵngcc1.HttpClient\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    getCount: [{\n      type: Input\n    }],\n    autoSetMeta: [{\n      type: Input\n    }],\n    url: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    description: [{\n      type: Input\n    }],\n    image: [{\n      type: Input\n    }],\n    tags: [{\n      type: Input\n    }],\n    count: [{\n      type: Output\n    }],\n    opened: [{\n      type: Output\n    }],\n    closed: [{\n      type: Output\n    }],\n\n    /**\n     * Share link on element click\n     * @return {?}\n     */\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    shareButton: [{\n      type: Input\n    }]\n  });\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\n\n\nvar ShareCountPipe = /*#__PURE__*/function () {\n  function ShareCountPipe() {\n    _classCallCheck(this, ShareCountPipe);\n  }\n\n  _createClass(ShareCountPipe, [{\n    key: \"transform\",\n    value:\n    /**\r\n     * @param {?} num\r\n     * @param {?=} digits\r\n     * @return {?}\r\n     */\n    function transform(num, digits) {\n      return shareCountFormatter(num, digits);\n    }\n  }]);\n\n  return ShareCountPipe;\n}();\n\nShareCountPipe.ɵfac = function ShareCountPipe_Factory(t) {\n  return new (t || ShareCountPipe)();\n};\n\nShareCountPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({\n  name: \"shareCount\",\n  type: ShareCountPipe,\n  pure: true\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ShareCountPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'shareCount'\n    }]\n  }], null, null);\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\n\n/**\r\n * @param {?} config\r\n * @return {?}\r\n */\n\n\nfunction ShareButtonsFactory(config) {\n  return new ShareButtons(config);\n}\n\nvar ShareModule = /*#__PURE__*/function () {\n  function ShareModule() {\n    _classCallCheck(this, ShareModule);\n  }\n\n  _createClass(ShareModule, null, [{\n    key: \"forRoot\",\n    value:\n    /**\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\n    function forRoot(config) {\n      return {\n        ngModule: ShareModule,\n        providers: [{\n          provide: CONFIG,\n          useValue: config\n        }, {\n          provide: ShareButtons,\n          useFactory: ShareButtonsFactory,\n          deps: [CONFIG]\n        }]\n      };\n    }\n  }]);\n\n  return ShareModule;\n}();\n\nShareModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: ShareModule\n});\nShareModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function ShareModule_Factory(t) {\n    return new (t || ShareModule)();\n  }\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ShareModule, {\n    declarations: [ShareButtonDirective, ShareCountPipe],\n    exports: [ShareButtonDirective, ShareCountPipe]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ShareModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ShareButtonDirective, ShareCountPipe],\n      exports: [ShareButtonDirective, ShareCountPipe]\n    }]\n  }], null, null);\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\n\n\nexport { ShareButtonsFactory, ShareModule, ShareButtons, ShareButtonDirective, metaTagsOperators, printOperators, copyOperators, urlInMessageOperators, FacebookCountOperators, PinterestCountOperators, TumblrCountOperators, RedditCountOperators, shareButtonsProp, ShareCountPipe, CONFIG };","map":{"version":3,"sources":["@ngx-share/core/lib/share.tokens.ts","@ngx-share/core/lib/utils.ts","@ngx-share/core/lib/share.operators.ts","@ngx-share/core/lib/share.prop.ts","@ngx-share/core/lib/share.service.ts","@ngx-share/core/lib/share-button.directive.ts","@ngx-share/core/lib/share-count.pipe.ts","@ngx-share/core/lib/share.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\r\nimport { ShareButtonsConfig } from './share.models';\r\n\r\nexport const CONFIG = new InjectionToken<ShareButtonsConfig>('CONFIG');\r\n","import { Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n/** Simple object check.*/\r\nfunction isObject(item): boolean {\r\n  return (item && typeof item === 'object' && !Array.isArray(item));\r\n}\r\n\r\n/** Deep merge two objects.*/\r\nexport function mergeDeep(target, ...sources) {\r\n  if (!sources.length) {\r\n    return target;\r\n  }\r\n  const source = sources.shift();\r\n\r\n  if (isObject(target) && isObject(source)) {\r\n    for (const key in source) {\r\n      if (isObject(source[key])) {\r\n        if (!target[key]) {\r\n          Object.assign(target, {[key]: {}});\r\n        }\r\n        mergeDeep(target[key], source[key]);\r\n      } else {\r\n        Object.assign(target, {[key]: source[key]});\r\n      }\r\n    }\r\n  }\r\n\r\n  return mergeDeep(target, ...sources);\r\n}\r\n\r\n/** Returns a readable number from share count */\r\nexport function shareCountFormatter(num: number, digits: number): string {\r\n\r\n  const si = [\r\n    {value: 1E9, symbol: 'B'},\r\n    {value: 1E6, symbol: 'M'},\r\n    {value: 1E3, symbol: 'K'}\r\n  ], rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\r\n\r\n  for (let i = 0; i < si.length; i++) {\r\n    if (num >= si[i].value) {\r\n      return (num / si[i].value).toFixed(digits).replace(rx, '$1') + si[i].symbol;\r\n    }\r\n  }\r\n  return num.toFixed(digits).replace(rx, '$1');\r\n}\r\n\r\n/** Copy text to clipboard */\r\nexport function copyToClipboard(url: string, browser: string): Observable<any> {\r\n  return of(url).pipe(\r\n    tap((text: string) => {\r\n\r\n      // Create a hidden textarea element\r\n      const textArea = document.createElement('textarea');\r\n      textArea.value = text;\r\n      document.body.appendChild(textArea);\r\n\r\n      // highlight textarea to copy the text\r\n      if (browser === 'ios') {\r\n        const range = document.createRange();\r\n        range.selectNodeContents(textArea);\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n        textArea.readOnly = true;\r\n        textArea.setSelectionRange(0, 999999);\r\n      } else {\r\n        textArea.select();\r\n      }\r\n      document.execCommand('copy');\r\n      document.body.removeChild(textArea);\r\n    })\r\n  );\r\n}\r\n\r\n/** Get meta tag content */\r\nexport function getMetaContent(key: string): string {\r\n  const metaTag: Element = document.querySelector(`meta[property=\"${key}\"]`);\r\n  return metaTag ? metaTag.getAttribute('content') : undefined;\r\n}\r\n\r\n/** Detect operating system 'ios', 'android', or 'desktop' */\r\nexport function getOS(): string {\r\n  const userAgent = navigator.userAgent || navigator.vendor || (<any>window).opera;\r\n\r\n  if (/android/i.test(userAgent)) {\r\n    return 'android';\r\n  }\r\n\r\n  if (/iPad|iPhone|iPod/.test(userAgent) && !(<any>window).MSStream) {\r\n    return 'ios';\r\n  }\r\n  return 'desktop';\r\n}\r\n\r\n\r\n/** Returns a valid URL or falls back to current URL */\r\nexport function getValidUrl(url: string, fallbackUrl: string): string {\r\n\r\n  if (url) {\r\n    const r = /(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\r\n    if (r.test(url)) {\r\n      return url;\r\n    }\r\n    console.warn(`[ShareButtons]: Sharing link '${url}' is invalid!`);\r\n  }\r\n  return fallbackUrl;\r\n}\r\n","import { of, OperatorFunction } from 'rxjs';\r\nimport { map, delay, switchMap, catchError } from 'rxjs/operators';\r\nimport { ShareButtonRef } from './share.models';\r\nimport { copyToClipboard, mergeDeep } from './utils';\r\n\r\n/**\r\n * Meta tags operator - Serialize meta tags into the sharer URL\r\n */\r\nexport const metaTagsOperators: OperatorFunction<any, any>[] = [\r\n  map((ref: ShareButtonRef) => {\r\n\r\n    // Social network sharer URL */\r\n    const SharerURL = ref.prop.share[ref.os];\r\n    if (SharerURL) {\r\n\r\n      // object contains supported meta tags\r\n      const metaTags = ref.prop.share.metaTags;\r\n\r\n      // object contains meta tags values */\r\n      const metaTagsValues = ref.metaTags;\r\n\r\n      let link = '';\r\n      // Set each meta tag with user value\r\n      if (metaTags) {\r\n        link = Object.entries(metaTags).map(([key, metaTag]) =>\r\n          metaTagsValues[key] ? `${metaTag}=${encodeURIComponent(metaTagsValues[key])}` : ''\r\n        ).join('&');\r\n      }\r\n      return SharerURL + link;\r\n    }\r\n    return;\r\n  })\r\n];\r\n\r\n/**\r\n * Print button operator\r\n */\r\nexport const printOperators: OperatorFunction<any, any>[] = [\r\n  map(() => window.print())\r\n];\r\n\r\n/**\r\n * Copy link to clipboard, used for copy button\r\n */\r\nexport const copyOperators: OperatorFunction<any, any>[] = [\r\n  map((ref: ShareButtonRef) => {\r\n\r\n    // Disable the button\r\n    ref.renderer.setStyle(ref.el, 'pointer-events', 'none');\r\n\r\n    ref.temp = {text: ref.prop.text, icon: ref.prop.icon};\r\n    ref.metaTags.url = decodeURIComponent(ref.metaTags.url);\r\n    return ref;\r\n  }),\r\n  switchMap((ref: ShareButtonRef) => copyToClipboard(ref.metaTags.url, ref.os).pipe(\r\n    map(() => {\r\n      ref.prop.text = ref.prop.successText;\r\n      ref.prop.icon = ref.prop.successIcon;\r\n      return ref;\r\n    }),\r\n    catchError(() => {\r\n      ref.prop.text = ref.prop.failText;\r\n      ref.prop.icon = ref.prop.failIcon;\r\n      return of(ref);\r\n    })\r\n  )),\r\n  map((ref: ShareButtonRef) => {\r\n    ref.cd.markForCheck();\r\n    return ref;\r\n  }),\r\n  delay(2000),\r\n  map((ref: ShareButtonRef) => {\r\n\r\n    // Enable the button\r\n    ref.renderer.setStyle(ref.el, 'pointer-events', 'auto');\r\n\r\n    // Reset copy button text and icon */\r\n    ref.prop.text = ref.temp.text;\r\n    ref.prop.icon = ref.temp.icon;\r\n    ref.cd.markForCheck();\r\n  })\r\n];\r\n\r\n/**\r\n * Add the share URL to message body, used for WhatsApp and Email buttons\r\n */\r\nexport const urlInMessageOperators: OperatorFunction<any, any>[] = [\r\n  map((ref: ShareButtonRef) => {\r\n    const description = ref.metaTags.description;\r\n    const url = ref.metaTags.url;\r\n    const newRef: ShareButtonRef = {\r\n      metaTags: {\r\n        description: description ? `${description}\\r\\n${url}` : url\r\n      }\r\n    };\r\n    return mergeDeep(ref, newRef);\r\n  })\r\n];\r\n\r\nexport const FacebookCountOperators: OperatorFunction<any, any>[] = [\r\n  map((res: any) => +res.share.share_count)\r\n];\r\n\r\nexport const PinterestCountOperators: OperatorFunction<any, any>[] = [\r\n  map((text: string) => JSON.parse(text.replace(/^receiveCount\\((.*)\\)/, '$1'))),\r\n  map((res: any) => +res.count)\r\n];\r\n\r\nexport const TumblrCountOperators: OperatorFunction<any, any>[] = [\r\n  map((res: any) => +res.response.note_count)\r\n];\r\n\r\nexport const RedditCountOperators: OperatorFunction<any, any>[] = [\r\n  map((res: any) => +res.data.children[0].data.score)\r\n];\r\n","import {\r\n  metaTagsOperators,\r\n  printOperators,\r\n  copyOperators,\r\n  urlInMessageOperators,\r\n  FacebookCountOperators,\r\n  PinterestCountOperators,\r\n  TumblrCountOperators,\r\n  RedditCountOperators\r\n} from './share.operators';\r\nimport { IShareButtons } from './share.models';\r\n\r\nexport const shareButtonsProp: IShareButtons = {\r\n  facebook: {\r\n    type: 'facebook',\r\n    text: 'Facebook',\r\n    icon: ['fab', 'facebook-f'],\r\n    color: '#4267B2',\r\n    share: {\r\n      desktop: 'https://www.facebook.com/sharer/sharer.php?',\r\n      android: 'https://www.facebook.com/sharer/sharer.php?',\r\n      ios: 'https://www.facebook.com/sharer/sharer.php?',\r\n      operators: metaTagsOperators,\r\n      metaTags: {\r\n        url: 'u'\r\n      }\r\n    },\r\n    count: {\r\n      request: 'http',\r\n      url: 'https://graph.facebook.com?id=',\r\n      operators: FacebookCountOperators\r\n    }\r\n  },\r\n  twitter: {\r\n    type: 'twitter',\r\n    text: 'Twitter',\r\n    icon: ['fab', 'twitter'],\r\n    color: '#00acee',\r\n    share: {\r\n      desktop: 'https://twitter.com/intent/tweet?',\r\n      android: 'https://twitter.com/intent/tweet?',\r\n      ios: 'https://twitter.com/intent/tweet?',\r\n      operators: metaTagsOperators,\r\n      metaTags: {\r\n        url: 'url',\r\n        description: 'text',\r\n        tags: 'hashtags',\r\n        via: 'via'\r\n      }\r\n    }\r\n  },\r\n  google: {\r\n    type: 'google',\r\n    text: 'Google+',\r\n    icon: ['fab', 'google-plus-g'],\r\n    color: '#DB4437',\r\n    share: {\r\n      desktop: 'https://plus.google.com/share?',\r\n      android: 'https://plus.google.com/share?',\r\n      ios: 'https://plus.google.com/share?',\r\n      metaTags: {\r\n        url: 'url',\r\n      },\r\n      operators: metaTagsOperators\r\n    }\r\n  },\r\n  linkedin: {\r\n    type: 'linkedin',\r\n    text: 'LinkedIn',\r\n    icon: ['fab', 'linkedin-in'],\r\n    color: '#006fa6',\r\n    share: {\r\n      desktop: 'http://www.linkedin.com/shareArticle?',\r\n      android: 'http://www.linkedin.com/shareArticle?',\r\n      ios: 'http://www.linkedin.com/shareArticle?',\r\n      operators: metaTagsOperators,\r\n      metaTags: {\r\n        url: 'url',\r\n        title: 'title',\r\n        description: 'summary'\r\n      },\r\n    }\r\n  },\r\n  pinterest: {\r\n    type: 'pinterest',\r\n    text: 'Pinterest',\r\n    icon: ['fab', 'pinterest-p'],\r\n    color: '#BD091D',\r\n    share: {\r\n      desktop: 'https://in.pinterest.com/pin/create/button/?',\r\n      android: 'https://in.pinterest.com/pin/create/button/?',\r\n      ios: 'https://in.pinterest.com/pin/create/button/?',\r\n      operators: metaTagsOperators,\r\n      metaTags: {\r\n        url: 'url',\r\n        description: 'description',\r\n        image: 'media'\r\n      }\r\n    },\r\n    count: {\r\n      request: 'http',\r\n      url: 'https://api.pinterest.com/v1/urls/count.json?url=',\r\n      args: {responseType: 'text'},\r\n      operators: PinterestCountOperators\r\n    }\r\n  },\r\n  reddit: {\r\n    type: 'reddit',\r\n    text: 'Reddit',\r\n    icon: ['fab', 'reddit-alien'],\r\n    color: '#FF4006',\r\n    share: {\r\n      desktop: 'http://www.reddit.com/submit?',\r\n      android: 'http://www.reddit.com/submit?',\r\n      ios: 'http://www.reddit.com/submit?',\r\n      operators: metaTagsOperators,\r\n      metaTags: {\r\n        url: 'url',\r\n        title: 'title'\r\n      },\r\n    },\r\n    count: {\r\n      request: 'http',\r\n      url: 'https://buttons.reddit.com/button_info.json?url=',\r\n      operators: RedditCountOperators\r\n    },\r\n  },\r\n  tumblr: {\r\n    type: 'tumblr',\r\n    text: 'Tumblr',\r\n    icon: ['fab', 'tumblr'],\r\n    color: '#36465D',\r\n    share: {\r\n      desktop: 'http://tumblr.com/widgets/share/tool?',\r\n      android: 'http://tumblr.com/widgets/share/tool?',\r\n      ios: 'http://tumblr.com/widgets/share/tool?',\r\n      operators: metaTagsOperators,\r\n      metaTags: {\r\n        url: 'canonicalUrl',\r\n        description: 'caption',\r\n        tags: 'tags'\r\n      }\r\n    },\r\n    count: {\r\n      request: 'jsonp',\r\n      url: 'https://api.tumblr.com/v2/share/stats?url=',\r\n      operators: TumblrCountOperators\r\n    }\r\n  },\r\n  whatsapp: {\r\n    type: 'whatsapp',\r\n    text: 'WhatsApp',\r\n    icon: ['fab', 'whatsapp'],\r\n    color: '#25D366',\r\n    share: {\r\n      desktop: 'https://web.whatsapp.com/send?',\r\n      android: 'whatsapp://send?',\r\n      ios: 'whatsapp://send?',\r\n      operators: [\r\n        ...urlInMessageOperators,\r\n        ...metaTagsOperators\r\n      ],\r\n      metaTags: {\r\n        description: 'text'\r\n      }\r\n    }\r\n  },\r\n  messenger: {\r\n    type: 'messenger',\r\n    text: 'Messenger',\r\n    icon: ['fab', 'facebook-messenger'],\r\n    color: '#0080FF',\r\n    share: {\r\n      android: 'fb-messenger://share/?',\r\n      ios: 'fb-messenger://share/?',\r\n      operators: metaTagsOperators,\r\n      metaTags: {\r\n        url: 'link'\r\n      }\r\n    }\r\n  },\r\n  telegram: {\r\n    type: 'telegram',\r\n    text: 'Telegram',\r\n    icon: ['fab', 'telegram-plane'],\r\n    color: '#0088cc',\r\n    share: {\r\n      desktop: 'https://t.me/share/url?',\r\n      android: 'https://t.me/share/url?',\r\n      ios: 'https://t.me/share/url?',\r\n      operators: metaTagsOperators,\r\n      metaTags: {\r\n        url: 'url',\r\n        description: 'text'\r\n      }\r\n    }\r\n  },\r\n  vk: {\r\n    type: 'vk',\r\n    text: 'VKontakte',\r\n    icon: ['fab', 'vk'],\r\n    color: '#4C75A3',\r\n    share: {\r\n      desktop: 'http://vk.com/share.php?',\r\n      android: 'http://vk.com/share.php?',\r\n      ios: 'http://vk.com/share.php?',\r\n      operators: metaTagsOperators,\r\n      metaTags: {\r\n        url: 'url'\r\n      }\r\n    }\r\n  },\r\n  stumble: {\r\n    type: 'stumble',\r\n    text: 'Stumble',\r\n    icon: ['fab', 'stumbleupon'],\r\n    color: '#eb4924',\r\n    share: {\r\n      desktop: 'http://www.stumbleupon.com/submit?',\r\n      android: 'http://www.stumbleupon.com/submit?',\r\n      ios: 'http://www.stumbleupon.com/submit?',\r\n      operators: metaTagsOperators,\r\n      metaTags: {\r\n        url: 'url'\r\n      }\r\n    }\r\n  },\r\n  xing: {\r\n    type: 'xing',\r\n    text: 'Xing',\r\n    icon: ['fab', 'xing'],\r\n    color: '#006567',\r\n    share: {\r\n      desktop: 'https://www.xing.com/app/user?op=share&',\r\n      android: 'https://www.xing.com/app/user?op=share&',\r\n      ios: 'https://www.xing.com/app/user?op=share&',\r\n      operators: metaTagsOperators,\r\n      metaTags: {\r\n        url: 'url'\r\n      }\r\n    }\r\n  },\r\n  sms: {\r\n    type: 'sms',\r\n    text: 'SMS',\r\n    icon: 'comment-alt',\r\n    color: '#20c16c',\r\n    share: {\r\n      desktop: 'sms:?',\r\n      android: 'sms:?',\r\n      ios: 'sms:?',\r\n      metaTags: {\r\n        description: 'body'\r\n      },\r\n      operators: [\r\n        ...urlInMessageOperators,\r\n        ...metaTagsOperators\r\n      ]\r\n    }\r\n  },\r\n  email: {\r\n    type: 'email',\r\n    text: 'Email',\r\n    icon:  'envelope',\r\n    color: '#FF961C',\r\n    share: {\r\n      desktop: 'mailto:?',\r\n      android: 'mailto:?',\r\n      ios: 'mailto:?',\r\n      operators: [\r\n        ...urlInMessageOperators,\r\n        ...metaTagsOperators\r\n      ],\r\n      metaTags: {\r\n        title: 'subject',\r\n        description: 'body'\r\n      }\r\n    }\r\n  },\r\n  copy: {\r\n    type: 'copy',\r\n    text: 'Copy link',\r\n    successText: 'Copied',\r\n    successIcon: 'check',\r\n    failText: 'Error',\r\n    failIcon: 'exclamation',\r\n    icon: 'link',\r\n    color: '#607D8B',\r\n    share: {\r\n      operators: copyOperators\r\n    }\r\n  },\r\n  print: {\r\n    type: 'print',\r\n    text: 'Print',\r\n    icon: 'print',\r\n    color: '#765AA2',\r\n    share: {\r\n      operators: printOperators\r\n    }\r\n  }\r\n};\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { IShareButton, ShareButtonsConfig } from './share.models';\r\nimport { CONFIG } from './share.tokens';\r\nimport { shareButtonsProp } from './share.prop';\r\nimport { mergeDeep } from './utils';\r\n\r\n@Injectable()\r\nexport class ShareButtons {\r\n\r\n  config: ShareButtonsConfig = {\r\n    prop: shareButtonsProp,\r\n    options: {\r\n      theme: 'default',\r\n      include: [],\r\n      exclude: [],\r\n      size: 0,\r\n      url: undefined,\r\n      title: undefined,\r\n      description: undefined,\r\n      image: undefined,\r\n      tags: undefined,\r\n      twitterAccount: undefined,\r\n      autoSetMeta: true,\r\n      gaTracking: false,\r\n      windowWidth: 800,\r\n      windowHeight: 500,\r\n      moreButtonIcon: 'ellipsis-h',\r\n      lessButtonIcon: 'minus'\r\n    }\r\n  };\r\n  config$ = new BehaviorSubject(this.config);\r\n\r\n  constructor(@Inject(CONFIG) config: ShareButtonsConfig) {\r\n    if (config) {\r\n      this.setConfig(config);\r\n    }\r\n  }\r\n\r\n  get prop() {\r\n    return this.config.prop;\r\n  }\r\n\r\n  get twitterAccount() {\r\n    return this.config.options.twitterAccount;\r\n  }\r\n\r\n  get theme() {\r\n    return this.config.options.theme;\r\n  }\r\n\r\n  get windowSize() {\r\n    return `width=${this.config.options.windowWidth}, height=${this.config.options.windowHeight}`;\r\n  }\r\n\r\n  get url() {\r\n    return this.config.options.url;\r\n  }\r\n\r\n  get title() {\r\n    return this.config.options.title;\r\n  }\r\n\r\n  get description() {\r\n    return this.config.options.description;\r\n  }\r\n\r\n  get image() {\r\n    return this.config.options.image;\r\n  }\r\n\r\n  get tags() {\r\n    return this.config.options.tags;\r\n  }\r\n\r\n  get autoSetMeta() {\r\n    return this.config.options.autoSetMeta;\r\n  }\r\n\r\n  get gaTracking() {\r\n    return this.config.options.gaTracking;\r\n  }\r\n\r\n  get size() {\r\n    return this.config.options.size;\r\n  }\r\n\r\n  setConfig(config: ShareButtonsConfig) {\r\n    this.config = mergeDeep(this.config, config);\r\n    this.config$.next(this.config);\r\n  }\r\n\r\n  addButton(name: string, data: IShareButton) {\r\n    const config = {\r\n      prop: {...shareButtonsProp, ...{[name]: data}}\r\n    };\r\n    this.setConfig(config);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  HostListener,\r\n  Inject,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  EventEmitter,\r\n  ElementRef,\r\n  Renderer2,\r\n  ChangeDetectorRef,\r\n  PLATFORM_ID\r\n} from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable, of, EMPTY } from 'rxjs';\r\nimport { tap, filter, switchMap, map, take, catchError } from 'rxjs/operators';\r\n\r\nimport { ShareButtons } from './share.service';\r\nimport { IShareButton, ShareButtonRef } from './share.models';\r\nimport { getMetaContent, getOS, getValidUrl } from './utils';\r\n\r\n/** Google analytics ref */\r\ndeclare const ga: Function;\r\n\r\n@Directive({\r\n  selector: '[shareButton]'\r\n})\r\nexport class ShareButtonDirective implements OnChanges {\r\n\r\n  /** A ref to button class - used to remove previous class when the button type is changed */\r\n  private _buttonClass: string;\r\n\r\n  /** Button properties */\r\n  prop: IShareButton;\r\n\r\n  /** Share button type */\r\n  @Input() shareButton: string;\r\n\r\n  /** Get share count */\r\n  @Input() getCount = false;\r\n\r\n  /** Set meta tags from document head, useful when SEO is supported */\r\n  @Input() autoSetMeta: boolean = this.shareService.autoSetMeta;\r\n\r\n  /** Meta tags inputs - initialized from the global options */\r\n  @Input() url: string = this.shareService.url;\r\n  @Input() title: string = this.shareService.title;\r\n  @Input() description: string = this.shareService.description;\r\n  @Input() image: string = this.shareService.image;\r\n  @Input() tags: string = this.shareService.tags;\r\n\r\n  /** Stream that emits when share count is fetched */\r\n  @Output() count = new EventEmitter<number>();\r\n\r\n  /** Stream that emits when share dialog is opened */\r\n  @Output() opened = new EventEmitter<string>();\r\n\r\n  /** Stream that emits when share dialog is closed */\r\n  @Output() closed = new EventEmitter<string>();\r\n\r\n  constructor(private shareService: ShareButtons,\r\n              private http: HttpClient,\r\n              public renderer: Renderer2,\r\n              public cd: ChangeDetectorRef,\r\n              private el: ElementRef,\r\n              @Inject(PLATFORM_ID) private platform: Object) {\r\n  }\r\n\r\n  /** Share link on element click */\r\n  @HostListener('click')\r\n  onClick() {\r\n    if (isPlatformBrowser(this.platform)) {\r\n      const metaTags = this.autoSetMeta ? {\r\n        url: this.url,\r\n        title: this.title || getMetaContent('og:title'),\r\n        description: this.description || getMetaContent('og:description'),\r\n        image: this.image || getMetaContent('og:image'),\r\n        via: this.shareService.twitterAccount || getMetaContent('twitter:site'),\r\n        tags: this.tags,\r\n      } : {\r\n        url: this.url,\r\n        title: this.title,\r\n        description: this.description,\r\n        image: this.image,\r\n        tags: this.tags,\r\n        via: this.shareService.twitterAccount,\r\n      };\r\n\r\n      const ref: ShareButtonRef = {\r\n        cd: this.cd,\r\n        renderer: this.renderer,\r\n        prop: this.prop,\r\n        el: this.el.nativeElement,\r\n        os: getOS(),\r\n        metaTags\r\n      };\r\n\r\n      // Share the link\r\n      of(ref).pipe(\r\n        ...this.prop.share.operators,\r\n        tap((sharerURL: any) => this.share(sharerURL)),\r\n        take(1)\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (isPlatformBrowser(this.platform)) {\r\n\r\n      if (changes['shareButton'] && (changes['shareButton'].firstChange || changes['shareButton'].previousValue !== this.shareButton)) {\r\n        this.createShareButton(this.shareButton);\r\n      }\r\n\r\n      if (!this.url || (changes['url'] && changes['url'].previousValue !== this.url)) {\r\n        of(null).pipe(\r\n          map(() => {\r\n            this.url = getValidUrl(this.autoSetMeta ? this.url || getMetaContent('og:url') : this.url, window.location.href);\r\n            return this.url;\r\n          }),\r\n          filter(() => this.prop.count && this.getCount),\r\n          switchMap((url: string) => this.shareCount(url)),\r\n          tap((shareCount: number) => this.count.emit(shareCount)),\r\n          take(1)\r\n        ).subscribe();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Open sharing dialog\r\n   * @param url - Share URL\r\n   */\r\n  share(url: string) {\r\n    if (url) {\r\n\r\n      // GA Tracking\r\n      if (this.shareService.gaTracking && typeof ga !== 'undefined') {\r\n        ga('send', 'social', this.prop.type, 'click', this.url);\r\n      }\r\n\r\n      // Emit when share dialog is opened\r\n      this.opened.emit(this.prop.type);\r\n\r\n      const popUp = window.open(url, 'newwindow', this.shareService.windowSize);\r\n\r\n      // Emit when share dialog is closed\r\n      if (popUp) {\r\n        const pollTimer = window.setInterval(() => {\r\n          if (popUp.closed) {\r\n            window.clearInterval(pollTimer);\r\n            this.closed.emit(this.prop.type);\r\n          }\r\n        }, 200);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get link share count\r\n   * @param url - Share URL\r\n   * @returns Share count\r\n   */\r\n  shareCount(url: string): Observable<any> {\r\n\r\n    if (this.prop.count.request === 'jsonp') {\r\n\r\n      return this.http.jsonp<any>(this.prop.count.url + url, 'callback').pipe(\r\n        ...this.prop.count.operators,\r\n        catchError(() => EMPTY),\r\n      );\r\n    } else {\r\n\r\n      return this.http.get<any>(this.prop.count.url + url, this.prop.count.args).pipe(\r\n        ...this.prop.count.operators,\r\n        catchError(() => EMPTY)\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  private createShareButton(buttonsName: string) {\r\n\r\n    const button = {...this.shareService.prop[buttonsName]};\r\n\r\n    if (button) {\r\n      // Set share button properties\r\n      this.prop = button;\r\n\r\n      // Remove previous button class\r\n      this.renderer.removeClass(this.el.nativeElement, `sb-${this._buttonClass}`);\r\n\r\n      // Add new button class\r\n      this.renderer.addClass(this.el.nativeElement, `sb-${button.type}`);\r\n\r\n      // Set button css color variable\r\n      this.el.nativeElement.style.setProperty('--button-color', this.prop.color);\r\n\r\n      // Keep a copy of the class for future replacement\r\n      this._buttonClass = button.type;\r\n\r\n      // Set aria-label attribute\r\n      this.renderer.setAttribute(this.el.nativeElement, 'aria-label', button.ariaLabel || button.text);\r\n    } else {\r\n      throw new Error(`[ShareButtons]: The share button '${buttonsName}' does not exist!`);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { shareCountFormatter } from './utils';\r\n\r\n@Pipe({\r\n  name: 'shareCount'\r\n})\r\nexport class ShareCountPipe implements PipeTransform {\r\n  transform(num: number, digits?: number) {\r\n    return shareCountFormatter(num, digits);\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { ShareButtons } from './share.service';\r\nimport { ShareButtonDirective } from './share-button.directive';\r\nimport { ShareCountPipe } from './share-count.pipe';\r\nimport { ShareButtonsConfig } from './share.models';\r\nimport { CONFIG } from './share.tokens';\r\n\r\nexport function ShareButtonsFactory(config: ShareButtonsConfig) {\r\n  return new ShareButtons(config);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ShareButtonDirective,\r\n    ShareCountPipe\r\n  ],\r\n  exports: [\r\n    ShareButtonDirective,\r\n    ShareCountPipe\r\n  ]\r\n})\r\nexport class ShareModule {\r\n  static forRoot(config?: ShareButtonsConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: ShareModule,\r\n      providers: [\r\n        {provide: CONFIG, useValue: config},\r\n        {\r\n          provide: ShareButtons,\r\n          useFactory: ShareButtonsFactory,\r\n          deps: [CONFIG]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}