{"ast":null,"code":"import _classCallCheck from \"/home/sarwar/wsit/wearit-backend/web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sarwar/wsit/wearit-backend/web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate } from 'tslib';\nimport { EventEmitter, Renderer2, ViewChild, Output, Input, Component, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nvar _c0 = [\"zoomContainer\"];\nvar _c1 = [\"imageThumbnail\"];\nvar _c2 = [\"fullSizeImage\"];\n\nvar _c3 = function _c3(a1) {\n  return {\n    \"ngxImageZoomFullContainer\": true,\n    \"ngxImageZoomLensEnabled\": a1\n  };\n};\n\nvar NgxImageZoomComponent_1;\n\nvar NgxImageZoomComponent = NgxImageZoomComponent_1 = /*#__PURE__*/function () {\n  function NgxImageZoomComponent(renderer) {\n    _classCallCheck(this, NgxImageZoomComponent);\n\n    this.renderer = renderer;\n    this.zoomScroll = new EventEmitter();\n    this.zoomPosition = new EventEmitter();\n    this.enableLens = false;\n    this.lensBorderRadius = 0;\n    this.lensWidth = 100;\n    this.lensHeight = 100;\n    this.zoomMode = 'hover';\n    this.magnification = 1;\n    this.enableScrollZoom = false;\n    this.scrollStepSize = 0.1;\n    this.circularLens = false;\n    this.maxZoomRatio = 2;\n    this.zoomingEnabled = false;\n    this.zoomFrozen = false;\n    this.isReady = false;\n    this.thumbImageLoaded = false;\n    this.fullImageLoaded = false;\n    this.eventListeners = [];\n  }\n\n  _createClass(NgxImageZoomComponent, [{\n    key: \"setThumbImage\",\n    set: function set(thumbImage) {\n      this.thumbImageLoaded = false;\n      this.isReady = false;\n      this.thumbImage = thumbImage;\n    }\n  }, {\n    key: \"setFullImage\",\n    set: function set(fullImage) {\n      this.fullImageLoaded = false;\n      this.isReady = false;\n      this.fullImage = fullImage;\n    }\n  }, {\n    key: \"setZoomMode\",\n    set: function set(zoomMode) {\n      if (NgxImageZoomComponent_1.validZoomModes.some(function (m) {\n        return m === zoomMode;\n      })) {\n        this.zoomMode = zoomMode;\n      }\n    }\n  }, {\n    key: \"setMagnification\",\n    set: function set(magnification) {\n      this.magnification = Number(magnification) || this.magnification;\n      this.zoomScroll.emit(this.magnification);\n    }\n  }, {\n    key: \"setMinZoomRatio\",\n    set: function set(minZoomRatio) {\n      var ratio = Number(minZoomRatio) || this.minZoomRatio || this.baseRatio || 0;\n      this.minZoomRatio = Math.max(ratio, this.baseRatio || 0);\n    }\n  }, {\n    key: \"setMaxZoomRatio\",\n    set: function set(maxZoomRatio) {\n      this.maxZoomRatio = Number(maxZoomRatio) || this.maxZoomRatio;\n    }\n  }, {\n    key: \"setScrollStepSize\",\n    set: function set(stepSize) {\n      this.scrollStepSize = Number(stepSize) || this.scrollStepSize;\n    }\n  }, {\n    key: \"setEnableLens\",\n    set: function set(enable) {\n      this.enableLens = Boolean(enable);\n    }\n  }, {\n    key: \"setLensWidth\",\n    set: function set(width) {\n      this.lensWidth = Number(width) || this.lensWidth;\n    }\n  }, {\n    key: \"setLensHeight\",\n    set: function set(height) {\n      this.lensHeight = Number(height) || this.lensHeight;\n    }\n  }, {\n    key: \"setCircularLens\",\n    set: function set(enable) {\n      this.circularLens = Boolean(enable);\n    }\n  }, {\n    key: \"setEnableScrollZoom\",\n    set: function set(enable) {\n      this.enableScrollZoom = Boolean(enable);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.setUpEventListeners();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      if (this.enableLens) {\n        if (this.circularLens) {\n          this.lensBorderRadius = this.lensWidth / 2;\n        } else {\n          this.lensBorderRadius = 0;\n        }\n      }\n\n      this.calculateRatioAndOffset();\n      this.calculateImageAndLensPosition();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.eventListeners.forEach(function (destroyFn) {\n        return destroyFn();\n      });\n    }\n    /**\r\n     * Template helper methods\r\n     */\n\n  }, {\n    key: \"onThumbImageLoaded\",\n    value: function onThumbImageLoaded() {\n      this.thumbImageLoaded = true;\n      this.checkImagesLoaded();\n    }\n  }, {\n    key: \"onFullImageLoaded\",\n    value: function onFullImageLoaded() {\n      this.fullImageLoaded = true;\n      this.checkImagesLoaded();\n    }\n  }, {\n    key: \"setUpEventListeners\",\n    value: function setUpEventListeners() {\n      var _this = this;\n\n      if (this.zoomMode === 'hover') {\n        this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mouseenter', function (event) {\n          return _this.hoverMouseEnter(event);\n        }));\n        this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mouseleave', function () {\n          return _this.hoverMouseLeave();\n        }));\n        this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mousemove', function (event) {\n          return _this.hoverMouseMove(event);\n        }));\n      } else if (this.zoomMode === 'toggle') {\n        this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'click', function (event) {\n          return _this.toggleClick(event);\n        }));\n      } else if (this.zoomMode === 'click') {\n        this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'click', function (event) {\n          return _this.clickStarter(event);\n        }));\n        this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mouseleave', function () {\n          return _this.clickMouseLeave();\n        }));\n        this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mousemove', function (event) {\n          return _this.clickMouseMove(event);\n        }));\n      } else if (this.zoomMode === 'hover-freeze') {\n        this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mouseenter', function (event) {\n          return _this.hoverFreezeMouseEnter(event);\n        }));\n        this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mouseleave', function () {\n          return _this.hoverFreezeMouseLeave();\n        }));\n        this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mousemove', function (event) {\n          return _this.hoverFreezeMouseMove(event);\n        }));\n        this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'click', function (event) {\n          return _this.hoverFreezeClick(event);\n        }));\n      }\n\n      if (this.enableScrollZoom) {\n        // Chrome: 'mousewheel', Firefox: 'DOMMouseScroll', IE: 'onmousewheel'\n        this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mousewheel', function (event) {\n          return _this.onMouseWheel(event);\n        }));\n        this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'DOMMouseScroll', function (event) {\n          return _this.onMouseWheel(event);\n        }));\n        this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'onmousewheel', function (event) {\n          return _this.onMouseWheel(event);\n        }));\n      }\n\n      if (this.enableLens && this.circularLens) {\n        this.lensBorderRadius = this.lensWidth / 2;\n      }\n    }\n  }, {\n    key: \"checkImagesLoaded\",\n    value: function checkImagesLoaded() {\n      this.calculateRatioAndOffset();\n\n      if (this.thumbImageLoaded && this.fullImageLoaded) {\n        this.calculateImageAndLensPosition();\n        this.isReady = true;\n      }\n    }\n    /**\r\n     * Zoom position setters\r\n     */\n\n  }, {\n    key: \"setZoomPosition\",\n    value: function setZoomPosition(left, top) {\n      this.latestMouseLeft = Number(left) || this.latestMouseLeft;\n      this.latestMouseTop = Number(top) || this.latestMouseTop;\n      var c = {\n        x: this.latestMouseLeft,\n        y: this.latestMouseTop\n      };\n      this.zoomPosition.emit(c);\n    }\n    /**\r\n     * Mouse wheel event\r\n     */\n\n  }, {\n    key: \"onMouseWheel\",\n    value: function onMouseWheel(event) {\n      // Don't eat events if zooming isn't active\n      if (!this.zoomingEnabled || this.zoomFrozen) {\n        return;\n      }\n\n      event = window.event || event; // old IE\n\n      var direction = Math.max(Math.min(event.wheelDelta || -event.detail, 1), -1);\n\n      if (direction > 0) {\n        // up\n        this.setMagnification = Math.min(this.magnification + this.scrollStepSize, this.maxZoomRatio);\n      } else {\n        // down\n        this.setMagnification = Math.max(this.magnification - this.scrollStepSize, this.minZoomRatio);\n      }\n\n      this.calculateRatio();\n      this.calculateZoomPosition(event); // Prevent scrolling on page.\n\n      event.returnValue = false; // IE\n\n      if (event.preventDefault) {\n        event.preventDefault(); // Chrome & FF\n      }\n    }\n    /**\r\n     * Hover mode\r\n     */\n\n  }, {\n    key: \"hoverMouseEnter\",\n    value: function hoverMouseEnter(event) {\n      this.zoomOn(event);\n    }\n  }, {\n    key: \"hoverMouseLeave\",\n    value: function hoverMouseLeave() {\n      this.zoomOff();\n    }\n  }, {\n    key: \"hoverMouseMove\",\n    value: function hoverMouseMove(event) {\n      this.calculateZoomPosition(event);\n    }\n    /**\r\n     * Toggle mode\r\n     */\n\n  }, {\n    key: \"toggleClick\",\n    value: function toggleClick(event) {\n      if (this.zoomingEnabled) {\n        this.zoomOff();\n      } else {\n        this.zoomOn(event);\n      }\n    }\n    /**\r\n     * Click mode\r\n     */\n\n  }, {\n    key: \"clickStarter\",\n    value: function clickStarter(event) {\n      if (this.zoomingEnabled === false) {\n        this.zoomOn(event);\n      }\n    }\n  }, {\n    key: \"clickMouseLeave\",\n    value: function clickMouseLeave() {\n      this.zoomOff();\n    }\n  }, {\n    key: \"clickMouseMove\",\n    value: function clickMouseMove(event) {\n      if (this.zoomingEnabled) {\n        this.calculateZoomPosition(event);\n      }\n    }\n    /**\r\n     * Hover freeze mode\r\n     */\n\n  }, {\n    key: \"hoverFreezeMouseEnter\",\n    value: function hoverFreezeMouseEnter(event) {\n      if (this.zoomingEnabled && !this.zoomFrozen) {\n        this.zoomOn(event);\n      }\n    }\n  }, {\n    key: \"hoverFreezeMouseLeave\",\n    value: function hoverFreezeMouseLeave() {\n      if (this.zoomingEnabled && !this.zoomFrozen) {\n        this.zoomOff();\n      }\n    }\n  }, {\n    key: \"hoverFreezeMouseMove\",\n    value: function hoverFreezeMouseMove(event) {\n      if (this.zoomingEnabled && !this.zoomFrozen) {\n        this.calculateZoomPosition(event);\n      }\n    }\n  }, {\n    key: \"hoverFreezeClick\",\n    value: function hoverFreezeClick(event) {\n      if (this.zoomingEnabled && this.zoomFrozen) {\n        this.zoomFrozen = false;\n        this.zoomOff();\n      } else if (this.zoomingEnabled) {\n        this.zoomFrozen = true;\n      } else {\n        this.zoomOn(event);\n      }\n    }\n    /**\r\n     * Private helper methods\r\n     */\n\n  }, {\n    key: \"zoomOn\",\n    value: function zoomOn(event) {\n      if (this.isReady) {\n        this.zoomingEnabled = true;\n        this.calculateRatioAndOffset();\n        this.display = 'block';\n        this.calculateZoomPosition(event);\n      }\n    }\n  }, {\n    key: \"zoomOff\",\n    value: function zoomOff() {\n      this.zoomingEnabled = false;\n      this.display = 'none';\n    }\n  }, {\n    key: \"calculateZoomPosition\",\n    value: function calculateZoomPosition(event) {\n      var newLeft = Math.max(Math.min(event.offsetX, this.thumbWidth), 0);\n      var newTop = Math.max(Math.min(event.offsetY, this.thumbHeight), 0);\n      this.setZoomPosition(newLeft, newTop);\n      this.calculateImageAndLensPosition();\n    }\n  }, {\n    key: \"calculateImageAndLensPosition\",\n    value: function calculateImageAndLensPosition() {\n      var lensLeftMod = 0;\n      var lensTopMod = 0;\n\n      if (this.enableLens) {\n        lensLeftMod = this.lensLeft = this.latestMouseLeft - this.lensWidth / 2;\n        lensTopMod = this.lensTop = this.latestMouseTop - this.lensHeight / 2;\n      }\n\n      this.fullImageLeft = this.latestMouseLeft * -this.xRatio - lensLeftMod;\n      this.fullImageTop = this.latestMouseTop * -this.yRatio - lensTopMod;\n    }\n  }, {\n    key: \"calculateRatioAndOffset\",\n    value: function calculateRatioAndOffset() {\n      this.thumbWidth = this.imageThumbnail.nativeElement.width;\n      this.thumbHeight = this.imageThumbnail.nativeElement.height; // If lens is disabled, set lens size to equal thumb size and position it on top of the thumb\n\n      if (!this.enableLens) {\n        this.lensWidth = this.thumbWidth;\n        this.lensHeight = this.thumbHeight;\n        this.lensLeft = 0;\n        this.lensTop = 0;\n      } // getBoundingClientRect() ? https://stackoverflow.com/a/44008873\n\n\n      this.offsetTop = this.imageThumbnail.nativeElement.getBoundingClientRect().top;\n      this.offsetLeft = this.imageThumbnail.nativeElement.getBoundingClientRect().left;\n\n      if (this.fullImage === undefined) {\n        this.fullImage = this.thumbImage;\n      }\n\n      if (this.fullImageLoaded) {\n        this.fullWidth = this.fullSizeImage.nativeElement.naturalWidth;\n        this.fullHeight = this.fullSizeImage.nativeElement.naturalHeight;\n        this.baseRatio = Math.max(this.thumbWidth / this.fullWidth, this.thumbHeight / this.fullHeight); // Don't allow zooming to smaller than thumbnail size\n\n        this.minZoomRatio = Math.max(this.minZoomRatio || 0, this.baseRatio || 0);\n        this.calculateRatio();\n      }\n    }\n  }, {\n    key: \"calculateRatio\",\n    value: function calculateRatio() {\n      this.magnifiedWidth = this.fullWidth * this.magnification;\n      this.magnifiedHeight = this.fullHeight * this.magnification;\n      this.xRatio = (this.magnifiedWidth - this.thumbWidth) / this.thumbWidth;\n      this.yRatio = (this.magnifiedHeight - this.thumbHeight) / this.thumbHeight;\n    }\n  }]);\n\n  return NgxImageZoomComponent;\n}();\n\nNgxImageZoomComponent.ɵfac = function NgxImageZoomComponent_Factory(t) {\n  return new (t || NgxImageZoomComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\n\nNgxImageZoomComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgxImageZoomComponent,\n  selectors: [[\"lib-ngx-image-zoom\"]],\n  viewQuery: function NgxImageZoomComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n      ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n      ɵngcc0.ɵɵstaticViewQuery(_c2, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.zoomContainer = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.imageThumbnail = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fullSizeImage = _t.first);\n    }\n  },\n  inputs: {\n    setThumbImage: [\"thumbImage\", \"setThumbImage\"],\n    setFullImage: [\"fullImage\", \"setFullImage\"],\n    setZoomMode: [\"zoomMode\", \"setZoomMode\"],\n    setMagnification: [\"magnification\", \"setMagnification\"],\n    setMinZoomRatio: [\"minZoomRatio\", \"setMinZoomRatio\"],\n    setMaxZoomRatio: [\"maxZoomRatio\", \"setMaxZoomRatio\"],\n    setScrollStepSize: [\"scrollStepSize\", \"setScrollStepSize\"],\n    setEnableLens: [\"enableLens\", \"setEnableLens\"],\n    setLensWidth: [\"lensWidth\", \"setLensWidth\"],\n    setLensHeight: [\"lensHeight\", \"setLensHeight\"],\n    setCircularLens: [\"circularLens\", \"setCircularLens\"],\n    setEnableScrollZoom: [\"enableScrollZoom\", \"setEnableScrollZoom\"]\n  },\n  outputs: {\n    zoomScroll: \"zoomScroll\",\n    zoomPosition: \"zoomPosition\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 7,\n  vars: 31,\n  consts: [[1, \"ngxImageZoomContainer\"], [\"zoomContainer\", \"\"], [1, \"ngxImageZoomThumbnail\", 3, \"src\", \"load\"], [\"imageThumbnail\", \"\"], [3, \"ngClass\"], [1, \"ngxImageZoomFull\", 3, \"src\", \"load\"], [\"fullSizeImage\", \"\"]],\n  template: function NgxImageZoomComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵelementStart(2, \"img\", 2, 3);\n      ɵngcc0.ɵɵlistener(\"load\", function NgxImageZoomComponent_Template_img_load_2_listener() {\n        return ctx.onThumbImageLoaded();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n      ɵngcc0.ɵɵelementStart(5, \"img\", 5, 6);\n      ɵngcc0.ɵɵlistener(\"load\", function NgxImageZoomComponent_Template_img_load_5_listener() {\n        return ctx.onFullImageLoaded();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"width\", ctx.thumbWidth, \"px\")(\"height\", ctx.thumbHeight, \"px\");\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"src\", ctx.thumbImage, ɵngcc0.ɵɵsanitizeUrl);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵstyleProp(\"display\", ctx.display)(\"top\", ctx.lensTop, \"px\")(\"left\", ctx.lensLeft, \"px\")(\"width\", ctx.lensWidth, \"px\")(\"height\", ctx.lensHeight, \"px\")(\"border-radius\", ctx.lensBorderRadius, \"px\");\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(29, _c3, ctx.enableLens));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵstyleProp(\"display\", ctx.display)(\"top\", ctx.fullImageTop, \"px\")(\"left\", ctx.fullImageLeft, \"px\")(\"width\", ctx.magnifiedWidth, \"px\")(\"height\", ctx.magnifiedHeight, \"px\");\n      ɵngcc0.ɵɵproperty(\"src\", ctx.fullImage, ɵngcc0.ɵɵsanitizeUrl);\n    }\n  },\n  directives: [ɵngcc1.NgClass],\n  styles: [\".ngxImageZoomContainer[_ngcontent-%COMP%]{position:relative;margin:auto;overflow:hidden;pointer-events:none}.ngxImageZoomThumbnail[_ngcontent-%COMP%]{pointer-events:all}.ngxImageZoomFull[_ngcontent-%COMP%]{position:absolute;max-width:none;max-height:none;display:none;pointer-events:none}.ngxImageZoomFullContainer[_ngcontent-%COMP%]{position:absolute;overflow:hidden;pointer-events:none}.ngxImageZoomFullContainer.ngxImageZoomLensEnabled[_ngcontent-%COMP%]{border:2px solid red;cursor:crosshair;pointer-events:none}\"]\n});\nNgxImageZoomComponent.validZoomModes = ['hover', 'toggle', 'click', 'hover-freeze'];\n\nNgxImageZoomComponent.ctorParameters = function () {\n  return [{\n    type: Renderer2\n  }];\n};\n\n__decorate([ViewChild('zoomContainer', {\n  static: true\n})], NgxImageZoomComponent.prototype, \"zoomContainer\", void 0);\n\n__decorate([ViewChild('imageThumbnail', {\n  static: true\n})], NgxImageZoomComponent.prototype, \"imageThumbnail\", void 0);\n\n__decorate([ViewChild('fullSizeImage', {\n  static: true\n})], NgxImageZoomComponent.prototype, \"fullSizeImage\", void 0);\n\n__decorate([Output()], NgxImageZoomComponent.prototype, \"zoomScroll\", void 0);\n\n__decorate([Output()], NgxImageZoomComponent.prototype, \"zoomPosition\", void 0);\n\n__decorate([Input('thumbImage')], NgxImageZoomComponent.prototype, \"setThumbImage\", null);\n\n__decorate([Input('fullImage')], NgxImageZoomComponent.prototype, \"setFullImage\", null);\n\n__decorate([Input('zoomMode')], NgxImageZoomComponent.prototype, \"setZoomMode\", null);\n\n__decorate([Input('magnification')], NgxImageZoomComponent.prototype, \"setMagnification\", null);\n\n__decorate([Input('minZoomRatio')], NgxImageZoomComponent.prototype, \"setMinZoomRatio\", null);\n\n__decorate([Input('maxZoomRatio')], NgxImageZoomComponent.prototype, \"setMaxZoomRatio\", null);\n\n__decorate([Input('scrollStepSize')], NgxImageZoomComponent.prototype, \"setScrollStepSize\", null);\n\n__decorate([Input('enableLens')], NgxImageZoomComponent.prototype, \"setEnableLens\", null);\n\n__decorate([Input('lensWidth')], NgxImageZoomComponent.prototype, \"setLensWidth\", null);\n\n__decorate([Input('lensHeight')], NgxImageZoomComponent.prototype, \"setLensHeight\", null);\n\n__decorate([Input('circularLens')], NgxImageZoomComponent.prototype, \"setCircularLens\", null);\n\n__decorate([Input('enableScrollZoom')], NgxImageZoomComponent.prototype, \"setEnableScrollZoom\", null);\n\nvar NgxImageZoomModule = function NgxImageZoomModule() {\n  _classCallCheck(this, NgxImageZoomModule);\n};\n\nNgxImageZoomModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgxImageZoomModule\n});\nNgxImageZoomModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgxImageZoomModule_Factory(t) {\n    return new (t || NgxImageZoomModule)();\n  },\n  imports: [[CommonModule]]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgxImageZoomComponent, [{\n    type: Component,\n    args: [{\n      selector: 'lib-ngx-image-zoom',\n      template: \"<div #zoomContainer class=\\\"ngxImageZoomContainer\\\"\\n     [style.width.px]=\\\"this.thumbWidth\\\" [style.height.px]=\\\"this.thumbHeight\\\">\\n\\n  <img #imageThumbnail class=\\\"ngxImageZoomThumbnail\\\" [src]=\\\"thumbImage\\\" (load)=\\\"onThumbImageLoaded()\\\"/>\\n\\n  <div [ngClass]=\\\"{'ngxImageZoomFullContainer': true, 'ngxImageZoomLensEnabled': this.enableLens}\\\"\\n       [style.display]=\\\"this.display\\\"\\n       [style.top.px]=\\\"this.lensTop\\\"\\n       [style.left.px]=\\\"this.lensLeft\\\"\\n       [style.width.px]=\\\"this.lensWidth\\\"\\n       [style.height.px]=\\\"this.lensHeight\\\"\\n       [style.border-radius.px]=\\\"this.lensBorderRadius\\\"\\n  >\\n    <img #fullSizeImage class=\\\"ngxImageZoomFull\\\" [src]=\\\"fullImage\\\"\\n         (load)=\\\"onFullImageLoaded()\\\"\\n         [style.display]=\\\"this.display\\\"\\n         [style.top.px]=\\\"this.fullImageTop\\\"\\n         [style.left.px]=\\\"this.fullImageLeft\\\"\\n         [style.width.px]=\\\"this.magnifiedWidth\\\"\\n         [style.height.px]=\\\"this.magnifiedHeight\\\"\\n    />\\n  </div>\\n</div>\\n\",\n      styles: [\".ngxImageZoomContainer{position:relative;margin:auto;overflow:hidden;pointer-events:none}.ngxImageZoomThumbnail{pointer-events:all}.ngxImageZoomFull{position:absolute;max-width:none;max-height:none;display:none;pointer-events:none}.ngxImageZoomFullContainer{position:absolute;overflow:hidden;pointer-events:none}.ngxImageZoomFullContainer.ngxImageZoomLensEnabled{border:2px solid red;cursor:crosshair;pointer-events:none}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.Renderer2\n    }];\n  }, {\n    zoomScroll: [{\n      type: Output\n    }],\n    zoomPosition: [{\n      type: Output\n    }],\n    setThumbImage: [{\n      type: Input,\n      args: ['thumbImage']\n    }],\n    setFullImage: [{\n      type: Input,\n      args: ['fullImage']\n    }],\n    setZoomMode: [{\n      type: Input,\n      args: ['zoomMode']\n    }],\n    setMagnification: [{\n      type: Input,\n      args: ['magnification']\n    }],\n    setMinZoomRatio: [{\n      type: Input,\n      args: ['minZoomRatio']\n    }],\n    setMaxZoomRatio: [{\n      type: Input,\n      args: ['maxZoomRatio']\n    }],\n    setScrollStepSize: [{\n      type: Input,\n      args: ['scrollStepSize']\n    }],\n    setEnableLens: [{\n      type: Input,\n      args: ['enableLens']\n    }],\n    setLensWidth: [{\n      type: Input,\n      args: ['lensWidth']\n    }],\n    setLensHeight: [{\n      type: Input,\n      args: ['lensHeight']\n    }],\n    setCircularLens: [{\n      type: Input,\n      args: ['circularLens']\n    }],\n    setEnableScrollZoom: [{\n      type: Input,\n      args: ['enableScrollZoom']\n    }],\n    zoomContainer: [{\n      type: ViewChild,\n      args: ['zoomContainer', {\n        static: true\n      }]\n    }],\n    imageThumbnail: [{\n      type: ViewChild,\n      args: ['imageThumbnail', {\n        static: true\n      }]\n    }],\n    fullSizeImage: [{\n      type: ViewChild,\n      args: ['fullSizeImage', {\n        static: true\n      }]\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxImageZoomModule, {\n    declarations: function declarations() {\n      return [NgxImageZoomComponent];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgxImageZoomComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgxImageZoomModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgxImageZoomComponent],\n      imports: [CommonModule],\n      exports: [NgxImageZoomComponent]\n    }]\n  }], null, null);\n})();\n/*\r\n * Public API Surface of ngx-image-zoom\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { NgxImageZoomComponent, NgxImageZoomModule };","map":{"version":3,"sources":["ngx-image-zoom/lib/ngx-image-zoom.component.ts","ngx-image-zoom/lib/ngx-image-zoom.module.ts","ngx-image-zoom/public-api.ts","ngx-image-zoom/ngx-image-zoom.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, Renderer2, ViewChild } from '@angular/core';\n\nexport interface Coord {\n    x: number;\n    y: number;\n}\n\n@Component({\n    selector: 'lib-ngx-image-zoom',\n    templateUrl: './ngx-image-zoom.component.html',\n    styleUrls: ['./ngx-image-zoom.component.css']\n})\nexport class NgxImageZoomComponent implements OnInit, OnChanges, OnDestroy {\n\n    private static readonly validZoomModes: string[] = ['hover', 'toggle', 'click', 'hover-freeze'];\n\n    @ViewChild('zoomContainer', {static: true}) zoomContainer !: ElementRef;\n    @ViewChild('imageThumbnail', {static: true}) imageThumbnail !: ElementRef;\n    @ViewChild('fullSizeImage', {static: true}) fullSizeImage !: ElementRef;\n\n    @Output() zoomScroll = new EventEmitter<number>();\n    @Output() zoomPosition = new EventEmitter<Coord>();\n\n    public display: string;\n    public fullImageTop: number;\n    public fullImageLeft: number;\n    public magnifiedWidth: number;\n    public magnifiedHeight: number;\n    public lensTop: number;\n    public lensLeft: number;\n    public enableLens = false;\n    public lensBorderRadius = 0;\n\n    public thumbImage: string;\n    public fullImage: string;\n    public thumbWidth: number;\n    public thumbHeight: number;\n    public fullWidth: number;\n    public fullHeight: number;\n    public lensWidth = 100;\n    public lensHeight = 100;\n\n    private zoomMode = 'hover';\n    private magnification = 1;\n    private enableScrollZoom = false;\n    private scrollStepSize = 0.1;\n    private circularLens = false;\n\n    private baseRatio: number;\n    private minZoomRatio;\n    private maxZoomRatio = 2;\n    private xRatio: number;\n    private yRatio: number;\n    private offsetLeft: number;\n    private offsetTop: number;\n    private zoomingEnabled = false;\n    private zoomFrozen = false;\n    private isReady = false;\n    private thumbImageLoaded = false;\n    private fullImageLoaded = false;\n\n    private latestMouseLeft: number;\n    private latestMouseTop: number;\n\n    private eventListeners: (() => void)[] = [];\n\n    constructor(private renderer: Renderer2) {\n    }\n\n    @Input('thumbImage')\n    public set setThumbImage(thumbImage: string) {\n        this.thumbImageLoaded = false;\n        this.isReady = false;\n        this.thumbImage = thumbImage;\n    }\n\n    @Input('fullImage')\n    public set setFullImage(fullImage: string) {\n        this.fullImageLoaded = false;\n        this.isReady = false;\n        this.fullImage = fullImage;\n    }\n\n    @Input('zoomMode')\n    public set setZoomMode(zoomMode: string) {\n        if (NgxImageZoomComponent.validZoomModes.some(m => m === zoomMode)) {\n            this.zoomMode = zoomMode;\n        }\n    }\n\n    @Input('magnification')\n    public set setMagnification(magnification: number) {\n        this.magnification = Number(magnification) || this.magnification;\n        this.zoomScroll.emit(this.magnification);\n    }\n\n    @Input('minZoomRatio')\n    public set setMinZoomRatio(minZoomRatio: number) {\n        const ratio = Number(minZoomRatio) || this.minZoomRatio || this.baseRatio || 0;\n        this.minZoomRatio = Math.max(ratio, this.baseRatio || 0);\n    }\n\n    @Input('maxZoomRatio')\n    public set setMaxZoomRatio(maxZoomRatio: number) {\n        this.maxZoomRatio = Number(maxZoomRatio) || this.maxZoomRatio;\n    }\n\n    @Input('scrollStepSize')\n    public set setScrollStepSize(stepSize: number) {\n        this.scrollStepSize = Number(stepSize) || this.scrollStepSize;\n    }\n\n    @Input('enableLens')\n    public set setEnableLens(enable: boolean) {\n        this.enableLens = Boolean(enable);\n    }\n\n    @Input('lensWidth')\n    public set setLensWidth(width: number) {\n        this.lensWidth = Number(width) || this.lensWidth;\n    }\n\n    @Input('lensHeight')\n    public set setLensHeight(height: number) {\n        this.lensHeight = Number(height) || this.lensHeight;\n    }\n\n    @Input('circularLens')\n    public set setCircularLens(enable: boolean) {\n        this.circularLens = Boolean(enable);\n    }\n\n    @Input('enableScrollZoom')\n    public set setEnableScrollZoom(enable: boolean) {\n        this.enableScrollZoom = Boolean(enable);\n    }\n\n    ngOnInit(): void {\n        this.setUpEventListeners();\n    }\n\n    ngOnChanges() {\n        if (this.enableLens) {\n            if (this.circularLens) {\n                this.lensBorderRadius = this.lensWidth / 2;\n            } else {\n                this.lensBorderRadius = 0;\n            }\n        }\n        this.calculateRatioAndOffset();\n        this.calculateImageAndLensPosition();\n    }\n\n    ngOnDestroy(): void {\n        this.eventListeners.forEach((destroyFn) => destroyFn());\n    }\n\n    /**\n     * Template helper methods\n     */\n    onThumbImageLoaded() {\n        this.thumbImageLoaded = true;\n        this.checkImagesLoaded();\n    }\n\n    onFullImageLoaded() {\n        this.fullImageLoaded = true;\n        this.checkImagesLoaded();\n    }\n\n    private setUpEventListeners() {\n        if (this.zoomMode === 'hover') {\n            this.eventListeners.push(\n                this.renderer.listen(this.zoomContainer.nativeElement, 'mouseenter', (event) => this.hoverMouseEnter(event))\n            );\n            this.eventListeners.push(\n                this.renderer.listen(this.zoomContainer.nativeElement, 'mouseleave', () => this.hoverMouseLeave())\n            );\n            this.eventListeners.push(\n                this.renderer.listen(this.zoomContainer.nativeElement, 'mousemove', (event) => this.hoverMouseMove(event))\n            );\n        } else if (this.zoomMode === 'toggle') {\n            this.eventListeners.push(\n                this.renderer.listen(this.zoomContainer.nativeElement, 'click', (event) => this.toggleClick(event))\n            );\n        } else if (this.zoomMode === 'click') {\n            this.eventListeners.push(\n                this.renderer.listen(this.zoomContainer.nativeElement, 'click', (event) => this.clickStarter(event))\n            );\n            this.eventListeners.push(\n                this.renderer.listen(this.zoomContainer.nativeElement, 'mouseleave', () => this.clickMouseLeave())\n            );\n            this.eventListeners.push(\n                this.renderer.listen(this.zoomContainer.nativeElement, 'mousemove', (event) => this.clickMouseMove(event))\n            );\n        } else if (this.zoomMode === 'hover-freeze') {\n            this.eventListeners.push(\n                this.renderer.listen(this.zoomContainer.nativeElement, 'mouseenter', (event) => this.hoverFreezeMouseEnter(event))\n            );\n            this.eventListeners.push(\n                this.renderer.listen(this.zoomContainer.nativeElement, 'mouseleave', () => this.hoverFreezeMouseLeave())\n            );\n            this.eventListeners.push(\n                this.renderer.listen(this.zoomContainer.nativeElement, 'mousemove', (event) => this.hoverFreezeMouseMove(event))\n            );\n            this.eventListeners.push(\n                this.renderer.listen(this.zoomContainer.nativeElement, 'click', (event) => this.hoverFreezeClick(event))\n            );\n        }\n        if (this.enableScrollZoom) {\n            // Chrome: 'mousewheel', Firefox: 'DOMMouseScroll', IE: 'onmousewheel'\n            this.eventListeners.push(\n                this.renderer.listen(this.zoomContainer.nativeElement, 'mousewheel', (event) => this.onMouseWheel(event))\n            );\n            this.eventListeners.push(\n                this.renderer.listen(this.zoomContainer.nativeElement, 'DOMMouseScroll', (event) => this.onMouseWheel(event))\n            );\n            this.eventListeners.push(\n                this.renderer.listen(this.zoomContainer.nativeElement, 'onmousewheel', (event) => this.onMouseWheel(event))\n            );\n        }\n        if (this.enableLens && this.circularLens) {\n            this.lensBorderRadius = this.lensWidth / 2;\n        }\n    }\n\n    private checkImagesLoaded() {\n        this.calculateRatioAndOffset();\n        if (this.thumbImageLoaded && this.fullImageLoaded) {\n            this.calculateImageAndLensPosition();\n            this.isReady = true;\n        }\n    }\n\n    /**\n     * Zoom position setters\n     */\n    private setZoomPosition(left: number, top: number) {\n        this.latestMouseLeft = Number(left) || this.latestMouseLeft;\n        this.latestMouseTop = Number(top) || this.latestMouseTop;\n\n        const c: Coord = {\n            x: this.latestMouseLeft,\n            y: this.latestMouseTop\n        };\n        this.zoomPosition.emit(c);\n    }\n\n\n    /**\n     * Mouse wheel event\n     */\n    private onMouseWheel(event: any) {\n        // Don't eat events if zooming isn't active\n        if (!this.zoomingEnabled || this.zoomFrozen) {\n            return;\n        }\n\n        event = window.event || event; // old IE\n        const direction = Math.max(Math.min((event.wheelDelta || -event.detail), 1), -1);\n        if (direction > 0) {\n            // up\n            this.setMagnification = Math.min(this.magnification + this.scrollStepSize, this.maxZoomRatio);\n        } else {\n            // down\n            this.setMagnification = Math.max(this.magnification - this.scrollStepSize, this.minZoomRatio);\n        }\n        this.calculateRatio();\n        this.calculateZoomPosition(event);\n\n        // Prevent scrolling on page.\n        event.returnValue = false; // IE\n        if (event.preventDefault) {\n            event.preventDefault(); // Chrome & FF\n        }\n    }\n\n    /**\n     * Hover mode\n     */\n    private hoverMouseEnter(event: MouseEvent) {\n        this.zoomOn(event);\n    }\n\n    private hoverMouseLeave() {\n        this.zoomOff();\n    }\n\n    private hoverMouseMove(event: MouseEvent) {\n        this.calculateZoomPosition(event);\n    }\n\n    /**\n     * Toggle mode\n     */\n    private toggleClick(event: MouseEvent) {\n        if (this.zoomingEnabled) {\n            this.zoomOff();\n        } else {\n            this.zoomOn(event);\n        }\n    }\n\n    /**\n     * Click mode\n     */\n    private clickStarter(event: MouseEvent) {\n        if (this.zoomingEnabled === false) {\n            this.zoomOn(event);\n        }\n    }\n\n    private clickMouseLeave() {\n        this.zoomOff();\n    }\n\n    private clickMouseMove(event: MouseEvent) {\n        if (this.zoomingEnabled) {\n            this.calculateZoomPosition(event);\n        }\n    }\n\n    /**\n     * Hover freeze mode\n     */\n    private hoverFreezeMouseEnter(event: MouseEvent) {\n        if (this.zoomingEnabled && !this.zoomFrozen) {\n            this.zoomOn(event);\n        }\n    }\n\n    private hoverFreezeMouseLeave() {\n        if (this.zoomingEnabled && !this.zoomFrozen) {\n            this.zoomOff();\n        }\n    }\n\n    private hoverFreezeMouseMove(event: MouseEvent) {\n        if (this.zoomingEnabled && !this.zoomFrozen) {\n            this.calculateZoomPosition(event);\n        }\n    }\n\n    private hoverFreezeClick(event: MouseEvent) {\n        if (this.zoomingEnabled && this.zoomFrozen) {\n            this.zoomFrozen = false;\n            this.zoomOff();\n        } else if (this.zoomingEnabled) {\n            this.zoomFrozen = true;\n        } else {\n            this.zoomOn(event);\n        }\n    }\n\n    /**\n     * Private helper methods\n     */\n    private zoomOn(event: MouseEvent) {\n        if (this.isReady) {\n            this.zoomingEnabled = true;\n            this.calculateRatioAndOffset();\n            this.display = 'block';\n            this.calculateZoomPosition(event);\n        }\n    }\n\n    private zoomOff() {\n        this.zoomingEnabled = false;\n        this.display = 'none';\n    }\n\n    private calculateZoomPosition(event: MouseEvent) {\n        const newLeft = Math.max(Math.min(event.offsetX, this.thumbWidth), 0);\n        const newTop = Math.max(Math.min(event.offsetY, this.thumbHeight), 0);\n\n        this.setZoomPosition(newLeft, newTop);\n\n        this.calculateImageAndLensPosition();\n    }\n\n    private calculateImageAndLensPosition() {\n        let lensLeftMod = 0;\n        let lensTopMod = 0;\n\n        if (this.enableLens) {\n            lensLeftMod = this.lensLeft = this.latestMouseLeft - this.lensWidth / 2;\n            lensTopMod = this.lensTop = this.latestMouseTop - this.lensHeight / 2;\n        }\n\n        this.fullImageLeft = (this.latestMouseLeft * -this.xRatio) - lensLeftMod;\n        this.fullImageTop = (this.latestMouseTop * -this.yRatio) - lensTopMod;\n    }\n\n    private calculateRatioAndOffset() {\n        this.thumbWidth = this.imageThumbnail.nativeElement.width;\n        this.thumbHeight = this.imageThumbnail.nativeElement.height;\n\n        // If lens is disabled, set lens size to equal thumb size and position it on top of the thumb\n        if (!this.enableLens) {\n            this.lensWidth = this.thumbWidth;\n            this.lensHeight = this.thumbHeight;\n            this.lensLeft = 0;\n            this.lensTop = 0;\n        }\n\n        // getBoundingClientRect() ? https://stackoverflow.com/a/44008873\n        this.offsetTop = this.imageThumbnail.nativeElement.getBoundingClientRect().top;\n        this.offsetLeft = this.imageThumbnail.nativeElement.getBoundingClientRect().left;\n\n        if (this.fullImage === undefined) {\n            this.fullImage = this.thumbImage;\n        }\n\n        if (this.fullImageLoaded) {\n            this.fullWidth = this.fullSizeImage.nativeElement.naturalWidth;\n            this.fullHeight = this.fullSizeImage.nativeElement.naturalHeight;\n\n            this.baseRatio = Math.max(\n                (this.thumbWidth / this.fullWidth),\n                (this.thumbHeight / this.fullHeight));\n\n            // Don't allow zooming to smaller than thumbnail size\n            this.minZoomRatio = Math.max(this.minZoomRatio || 0, this.baseRatio || 0);\n\n            this.calculateRatio();\n        }\n    }\n\n    private calculateRatio() {\n        this.magnifiedWidth = (this.fullWidth * this.magnification);\n        this.magnifiedHeight = (this.fullHeight * this.magnification);\n\n        this.xRatio = (this.magnifiedWidth - this.thumbWidth) / this.thumbWidth;\n        this.yRatio = (this.magnifiedHeight - this.thumbHeight) / this.thumbHeight;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxImageZoomComponent } from './ngx-image-zoom.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n    declarations: [\n        NgxImageZoomComponent,\n    ],\n    imports: [\n        CommonModule,\n    ],\n    exports: [\n        NgxImageZoomComponent\n    ]\n})\nexport class NgxImageZoomModule {\n}\n","/*\n * Public API Surface of ngx-image-zoom\n */\n\nexport * from './lib/ngx-image-zoom.component';\nexport * from './lib/ngx-image-zoom.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}