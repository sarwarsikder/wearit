{"ast":null,"code":"import _createForOfIteratorHelper from \"/var/www/html/wearit/web/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/var/www/html/wearit/web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/wearit/web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { EventEmitter, Directive, ElementRef, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} node\n * @return {?}\n */\n\nimport * as Éµngcc0 from '@angular/core';\n\nfunction isElement(node) {\n  return !!(node && (node.nodeName || node.prop && node.attr && node.find));\n}\n\nvar FileLikeObject = /*#__PURE__*/function () {\n  /**\n   * @param {?} fileOrInput\n   */\n  function FileLikeObject(fileOrInput) {\n    _classCallCheck(this, FileLikeObject);\n\n    this.rawFile = fileOrInput;\n    /** @type {?} */\n\n    var isInput = isElement(fileOrInput);\n    /** @type {?} */\n\n    var fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n    /** @type {?} */\n\n    var postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n    /** @type {?} */\n\n    var method = '_createFrom' + postfix;\n\n    /** @type {?} */\n    this[method](fakePathOrObject);\n  }\n  /**\n   * @param {?} path\n   * @return {?}\n   */\n\n\n  _createClass(FileLikeObject, [{\n    key: \"_createFromFakePath\",\n    value: function _createFromFakePath(path) {\n      this.lastModifiedDate = void 0;\n      this.size = void 0;\n      this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n      this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n    }\n    /**\n     * @param {?} object\n     * @return {?}\n     */\n\n  }, {\n    key: \"_createFromObject\",\n    value: function _createFromObject(object) {\n      this.size = object.size;\n      this.type = object.type;\n      this.name = object.name;\n    }\n  }]);\n\n  return FileLikeObject;\n}();\n\nif (false) {\n  /** @type {?} */\n  FileLikeObject.prototype.lastModifiedDate;\n  /** @type {?} */\n\n  FileLikeObject.prototype.size;\n  /** @type {?} */\n\n  FileLikeObject.prototype.type;\n  /** @type {?} */\n\n  FileLikeObject.prototype.name;\n  /** @type {?} */\n\n  FileLikeObject.prototype.rawFile;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar FileItem = /*#__PURE__*/function () {\n  /**\n   * @param {?} uploader\n   * @param {?} some\n   * @param {?} options\n   */\n  function FileItem(uploader, some, options) {\n    _classCallCheck(this, FileItem);\n\n    this.url = '/';\n    this.headers = [];\n    this.withCredentials = true;\n    this.formData = [];\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = false;\n    this.isSuccess = false;\n    this.isCancel = false;\n    this.isError = false;\n    this.progress = 0;\n    this.index = void 0;\n    this.uploader = uploader;\n    this.some = some;\n    this.options = options;\n    this.file = new FileLikeObject(some);\n    this._file = some;\n\n    if (uploader.options) {\n      this.method = uploader.options.method || 'POST';\n      this.alias = uploader.options.itemAlias || 'file';\n    }\n\n    this.url = uploader.options.url;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(FileItem, [{\n    key: \"upload\",\n    value: function upload() {\n      try {\n        this.uploader.uploadItem(this);\n      } catch (e) {\n        this.uploader._onCompleteItem(this, '', 0, {});\n\n        this.uploader._onErrorItem(this, '', 0, {});\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.uploader.cancelItem(this);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      this.uploader.removeFromQueue(this);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"onBeforeUpload\",\n    value: function onBeforeUpload() {\n      return void 0;\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n\n  }, {\n    key: \"onBuildForm\",\n    value: function onBuildForm(form) {\n      return {\n        form: form\n      };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n\n  }, {\n    key: \"onProgress\",\n    value: function onProgress(progress) {\n      return {\n        progress: progress\n      };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"onSuccess\",\n    value: function onSuccess(response, status, headers) {\n      return {\n        response: response,\n        status: status,\n        headers: headers\n      };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"onError\",\n    value: function onError(response, status, headers) {\n      return {\n        response: response,\n        status: status,\n        headers: headers\n      };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"onCancel\",\n    value: function onCancel(response, status, headers) {\n      return {\n        response: response,\n        status: status,\n        headers: headers\n      };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"onComplete\",\n    value: function onComplete(response, status, headers) {\n      return {\n        response: response,\n        status: status,\n        headers: headers\n      };\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onBeforeUpload\",\n    value: function _onBeforeUpload() {\n      this.isReady = true;\n      this.isUploading = true;\n      this.isUploaded = false;\n      this.isSuccess = false;\n      this.isCancel = false;\n      this.isError = false;\n      this.progress = 0;\n      this.onBeforeUpload();\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onBuildForm\",\n    value: function _onBuildForm(form) {\n      this.onBuildForm(form);\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onProgress\",\n    value: function _onProgress(progress) {\n      this.progress = progress;\n      this.onProgress(progress);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onSuccess\",\n    value: function _onSuccess(response, status, headers) {\n      this.isReady = false;\n      this.isUploading = false;\n      this.isUploaded = true;\n      this.isSuccess = true;\n      this.isCancel = false;\n      this.isError = false;\n      this.progress = 100;\n      this.index = void 0;\n      this.onSuccess(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onError\",\n    value: function _onError(response, status, headers) {\n      this.isReady = false;\n      this.isUploading = false;\n      this.isUploaded = true;\n      this.isSuccess = false;\n      this.isCancel = false;\n      this.isError = true;\n      this.progress = 0;\n      this.index = void 0;\n      this.onError(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onCancel\",\n    value: function _onCancel(response, status, headers) {\n      this.isReady = false;\n      this.isUploading = false;\n      this.isUploaded = false;\n      this.isSuccess = false;\n      this.isCancel = true;\n      this.isError = false;\n      this.progress = 0;\n      this.index = void 0;\n      this.onCancel(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onComplete\",\n    value: function _onComplete(response, status, headers) {\n      this.onComplete(response, status, headers);\n\n      if (this.uploader.options.removeAfterUpload) {\n        this.remove();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_prepareToUploading\",\n    value: function _prepareToUploading() {\n      this.index = this.index || ++this.uploader._nextIndex;\n      this.isReady = true;\n    }\n  }]);\n\n  return FileItem;\n}();\n\nif (false) {\n  /** @type {?} */\n  FileItem.prototype.file;\n  /** @type {?} */\n\n  FileItem.prototype._file;\n  /** @type {?} */\n\n  FileItem.prototype.alias;\n  /** @type {?} */\n\n  FileItem.prototype.url;\n  /** @type {?} */\n\n  FileItem.prototype.method;\n  /** @type {?} */\n\n  FileItem.prototype.headers;\n  /** @type {?} */\n\n  FileItem.prototype.withCredentials;\n  /** @type {?} */\n\n  FileItem.prototype.formData;\n  /** @type {?} */\n\n  FileItem.prototype.isReady;\n  /** @type {?} */\n\n  FileItem.prototype.isUploading;\n  /** @type {?} */\n\n  FileItem.prototype.isUploaded;\n  /** @type {?} */\n\n  FileItem.prototype.isSuccess;\n  /** @type {?} */\n\n  FileItem.prototype.isCancel;\n  /** @type {?} */\n\n  FileItem.prototype.isError;\n  /** @type {?} */\n\n  FileItem.prototype.progress;\n  /** @type {?} */\n\n  FileItem.prototype.index;\n  /** @type {?} */\n\n  FileItem.prototype._xhr;\n  /** @type {?} */\n\n  FileItem.prototype._form;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  FileItem.prototype.uploader;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  FileItem.prototype.some;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  FileItem.prototype.options;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar FileType = /*#__PURE__*/function () {\n  function FileType() {\n    _classCallCheck(this, FileType);\n  }\n\n  _createClass(FileType, null, [{\n    key: \"getMimeClass\",\n\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    value: function getMimeClass(file) {\n      /** @type {?} */\n      var mimeClass = 'application';\n\n      if (this.mime_psd.indexOf(file.type) !== -1) {\n        mimeClass = 'image';\n      } else if (file.type.match('image.*')) {\n        mimeClass = 'image';\n      } else if (file.type.match('video.*')) {\n        mimeClass = 'video';\n      } else if (file.type.match('audio.*')) {\n        mimeClass = 'audio';\n      } else if (file.type === 'application/pdf') {\n        mimeClass = 'pdf';\n      } else if (this.mime_compress.indexOf(file.type) !== -1) {\n        mimeClass = 'compress';\n      } else if (this.mime_doc.indexOf(file.type) !== -1) {\n        mimeClass = 'doc';\n      } else if (this.mime_xsl.indexOf(file.type) !== -1) {\n        mimeClass = 'xls';\n      } else if (this.mime_ppt.indexOf(file.type) !== -1) {\n        mimeClass = 'ppt';\n      }\n\n      if (mimeClass === 'application') {\n        mimeClass = this.fileTypeDetection(file.name);\n      }\n\n      return mimeClass;\n    }\n    /**\n     * @param {?} inputFilename\n     * @return {?}\n     */\n\n  }, {\n    key: \"fileTypeDetection\",\n    value: function fileTypeDetection(inputFilename) {\n      /** @type {?} */\n      var types = {\n        'jpg': 'image',\n        'jpeg': 'image',\n        'tif': 'image',\n        'psd': 'image',\n        'bmp': 'image',\n        'png': 'image',\n        'nef': 'image',\n        'tiff': 'image',\n        'cr2': 'image',\n        'dwg': 'image',\n        'cdr': 'image',\n        'ai': 'image',\n        'indd': 'image',\n        'pin': 'image',\n        'cdp': 'image',\n        'skp': 'image',\n        'stp': 'image',\n        '3dm': 'image',\n        'mp3': 'audio',\n        'wav': 'audio',\n        'wma': 'audio',\n        'mod': 'audio',\n        'm4a': 'audio',\n        'compress': 'compress',\n        'zip': 'compress',\n        'rar': 'compress',\n        '7z': 'compress',\n        'lz': 'compress',\n        'z01': 'compress',\n        'bz2': 'compress',\n        'gz': 'compress',\n        'pdf': 'pdf',\n        'xls': 'xls',\n        'xlsx': 'xls',\n        'ods': 'xls',\n        'mp4': 'video',\n        'avi': 'video',\n        'wmv': 'video',\n        'mpg': 'video',\n        'mts': 'video',\n        'flv': 'video',\n        '3gp': 'video',\n        'vob': 'video',\n        'm4v': 'video',\n        'mpeg': 'video',\n        'm2ts': 'video',\n        'mov': 'video',\n        'doc': 'doc',\n        'docx': 'doc',\n        'eps': 'doc',\n        'txt': 'doc',\n        'odt': 'doc',\n        'rtf': 'doc',\n        'ppt': 'ppt',\n        'pptx': 'ppt',\n        'pps': 'ppt',\n        'ppsx': 'ppt',\n        'odp': 'ppt'\n      };\n      /** @type {?} */\n\n      var chunks = inputFilename.split('.');\n\n      if (chunks.length < 2) {\n        return 'application';\n      }\n      /** @type {?} */\n\n\n      var extension = chunks[chunks.length - 1].toLowerCase();\n\n      if (types[extension] === undefined) {\n        return 'application';\n      } else {\n        return types[extension];\n      }\n    }\n  }]);\n\n  return FileType;\n}();\n/*  MS office  */\n\n\nFileType.mime_doc = ['application/msword', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.openxmlformats-officedocument.wordprocessingml.template', 'application/vnd.ms-word.document.macroEnabled.12', 'application/vnd.ms-word.template.macroEnabled.12'];\nFileType.mime_xsl = ['application/vnd.ms-excel', 'application/vnd.ms-excel', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.openxmlformats-officedocument.spreadsheetml.template', 'application/vnd.ms-excel.sheet.macroEnabled.12', 'application/vnd.ms-excel.template.macroEnabled.12', 'application/vnd.ms-excel.addin.macroEnabled.12', 'application/vnd.ms-excel.sheet.binary.macroEnabled.12'];\nFileType.mime_ppt = ['application/vnd.ms-powerpoint', 'application/vnd.ms-powerpoint', 'application/vnd.ms-powerpoint', 'application/vnd.ms-powerpoint', 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'application/vnd.openxmlformats-officedocument.presentationml.template', 'application/vnd.openxmlformats-officedocument.presentationml.slideshow', 'application/vnd.ms-powerpoint.addin.macroEnabled.12', 'application/vnd.ms-powerpoint.presentation.macroEnabled.12', 'application/vnd.ms-powerpoint.presentation.macroEnabled.12', 'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'];\n/* PSD */\n\nFileType.mime_psd = ['image/photoshop', 'image/x-photoshop', 'image/psd', 'application/photoshop', 'application/psd', 'zz-application/zz-winassoc-psd'];\n/* Compressed files */\n\nFileType.mime_compress = ['application/x-gtar', 'application/x-gcompress', 'application/compress', 'application/x-tar', 'application/x-rar-compressed', 'application/octet-stream', 'application/x-zip-compressed', 'application/zip-compressed', 'application/x-7z-compressed', 'application/gzip', 'application/x-bzip2'];\n\nif (false) {\n  /** @type {?} */\n  FileType.mime_doc;\n  /** @type {?} */\n\n  FileType.mime_xsl;\n  /** @type {?} */\n\n  FileType.mime_ppt;\n  /** @type {?} */\n\n  FileType.mime_psd;\n  /** @type {?} */\n\n  FileType.mime_compress;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} value\n * @return {?}\n */\n\n\nfunction _isFile(value) {\n  return File && value instanceof File;\n}\n/**\n * @record\n */\n\n\nfunction Headers() {}\n\nif (false) {\n  /** @type {?} */\n  Headers.prototype.name;\n  /** @type {?} */\n\n  Headers.prototype.value;\n}\n/**\n * @record\n */\n\n\nfunction FileUploaderOptions() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  FileUploaderOptions.prototype.allowedMimeType;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.allowedFileType;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.autoUpload;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.isHTML5;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.filters;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.headers;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.method;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.authToken;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.maxFileSize;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.queueLimit;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.removeAfterUpload;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.url;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.disableMultipart;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.itemAlias;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.authTokenHeader;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.additionalParameter;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.parametersBeforeFiles;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.formatDataFunction;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.formatDataFunctionIsAsync;\n}\n\nvar FileUploader = /*#__PURE__*/function () {\n  /**\n   * @param {?} options\n   */\n  function FileUploader(options) {\n    _classCallCheck(this, FileUploader);\n\n    this.isUploading = false;\n    this.queue = [];\n    this.progress = 0;\n    this._nextIndex = 0;\n    this.options = {\n      autoUpload: false,\n      isHTML5: true,\n      filters: [],\n      removeAfterUpload: false,\n      disableMultipart: false,\n      formatDataFunction:\n      /**\n      * @param {?} item\n      * @return {?}\n      */\n      function formatDataFunction(item) {\n        return item._file;\n      },\n      formatDataFunctionIsAsync: false\n    };\n    this.setOptions(options);\n    this.response = new EventEmitter();\n  }\n  /**\n   * @param {?} options\n   * @return {?}\n   */\n\n\n  _createClass(FileUploader, [{\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      this.options = Object.assign(this.options, options);\n      this.authToken = this.options.authToken;\n      this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n      this.autoUpload = this.options.autoUpload;\n      this.options.filters.unshift({\n        name: 'queueLimit',\n        fn: this._queueLimitFilter\n      });\n\n      if (this.options.maxFileSize) {\n        this.options.filters.unshift({\n          name: 'fileSize',\n          fn: this._fileSizeFilter\n        });\n      }\n\n      if (this.options.allowedFileType) {\n        this.options.filters.unshift({\n          name: 'fileType',\n          fn: this._fileTypeFilter\n        });\n      }\n\n      if (this.options.allowedMimeType) {\n        this.options.filters.unshift({\n          name: 'mimeType',\n          fn: this._mimeTypeFilter\n        });\n      }\n\n      for (var i = 0; i < this.queue.length; i++) {\n        this.queue[i].url = this.options.url;\n      }\n    }\n    /**\n     * @param {?} files\n     * @param {?=} options\n     * @param {?=} filters\n     * @return {?}\n     */\n\n  }, {\n    key: \"addToQueue\",\n    value: function addToQueue(files, options, filters) {\n      var _this = this;\n\n      /** @type {?} */\n      var list = [];\n\n      var _iterator = _createForOfIteratorHelper(files),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var file = _step.value;\n          list.push(file);\n        }\n        /** @type {?} */\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var arrayOfFilters = this._getFilters(filters);\n      /** @type {?} */\n\n\n      var count = this.queue.length;\n      /** @type {?} */\n\n      var addedFileItems = [];\n      list.map(\n      /**\n      * @param {?} some\n      * @return {?}\n      */\n      function (some) {\n        if (!options) {\n          options = _this.options;\n        }\n        /** @type {?} */\n\n\n        var temp = new FileLikeObject(some);\n\n        if (_this._isValidFile(temp, arrayOfFilters, options)) {\n          /** @type {?} */\n          var fileItem = new FileItem(_this, some, options);\n          addedFileItems.push(fileItem);\n\n          _this.queue.push(fileItem);\n\n          _this._onAfterAddingFile(fileItem);\n        } else {\n          /** @type {?} */\n          var filter = arrayOfFilters[_this._failFilterIndex];\n\n          _this._onWhenAddingFileFailed(temp, filter, options);\n        }\n      });\n\n      if (this.queue.length !== count) {\n        this._onAfterAddingAll(addedFileItems);\n\n        this.progress = this._getTotalProgress();\n      }\n\n      this._render();\n\n      if (this.options.autoUpload) {\n        this.uploadAll();\n      }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeFromQueue\",\n    value: function removeFromQueue(value) {\n      /** @type {?} */\n      var index = this.getIndexOfItem(value);\n      /** @type {?} */\n\n      var item = this.queue[index];\n\n      if (item.isUploading) {\n        item.cancel();\n      }\n\n      this.queue.splice(index, 1);\n      this.progress = this._getTotalProgress();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"clearQueue\",\n    value: function clearQueue() {\n      while (this.queue.length) {\n        this.queue[0].remove();\n      }\n\n      this.progress = 0;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"uploadItem\",\n    value: function uploadItem(value) {\n      /** @type {?} */\n      var index = this.getIndexOfItem(value);\n      /** @type {?} */\n\n      var item = this.queue[index];\n      /** @type {?} */\n\n      var transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n\n      item._prepareToUploading();\n\n      if (this.isUploading) {\n        return;\n      }\n\n      this.isUploading = true;\n\n      /** @type {?} */\n      this[transport](item);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"cancelItem\",\n    value: function cancelItem(value) {\n      /** @type {?} */\n      var index = this.getIndexOfItem(value);\n      /** @type {?} */\n\n      var item = this.queue[index];\n      /** @type {?} */\n\n      var prop = this.options.isHTML5 ? item._xhr : item._form;\n\n      if (item && item.isUploading) {\n        prop.abort();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"uploadAll\",\n    value: function uploadAll() {\n      /** @type {?} */\n      var items = this.getNotUploadedItems().filter(\n      /**\n      * @param {?} item\n      * @return {?}\n      */\n      function (item) {\n        return !item.isUploading;\n      });\n\n      if (!items.length) {\n        return;\n      }\n\n      items.map(\n      /**\n      * @param {?} item\n      * @return {?}\n      */\n      function (item) {\n        return item._prepareToUploading();\n      });\n      items[0].upload();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"cancelAll\",\n    value: function cancelAll() {\n      /** @type {?} */\n      var items = this.getNotUploadedItems();\n      items.map(\n      /**\n      * @param {?} item\n      * @return {?}\n      */\n      function (item) {\n        return item.cancel();\n      });\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"isFile\",\n    value: function isFile(value) {\n      return _isFile(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"isFileLikeObject\",\n    value: function isFileLikeObject(value) {\n      return value instanceof FileLikeObject;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"getIndexOfItem\",\n    value: function getIndexOfItem(value) {\n      return typeof value === 'number' ? value : this.queue.indexOf(value);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getNotUploadedItems\",\n    value: function getNotUploadedItems() {\n      return this.queue.filter(\n      /**\n      * @param {?} item\n      * @return {?}\n      */\n      function (item) {\n        return !item.isUploaded;\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getReadyItems\",\n    value: function getReadyItems() {\n      return this.queue.filter(\n      /**\n      * @param {?} item\n      * @return {?}\n      */\n      function (item) {\n        return item.isReady && !item.isUploading;\n      }).sort(\n      /**\n      * @param {?} item1\n      * @param {?} item2\n      * @return {?}\n      */\n      function (item1, item2) {\n        return item1.index - item2.index;\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      return void 0;\n    }\n    /**\n     * @param {?} fileItems\n     * @return {?}\n     */\n\n  }, {\n    key: \"onAfterAddingAll\",\n    value: function onAfterAddingAll(fileItems) {\n      return {\n        fileItems: fileItems\n      };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} form\n     * @return {?}\n     */\n\n  }, {\n    key: \"onBuildItemForm\",\n    value: function onBuildItemForm(fileItem, form) {\n      return {\n        fileItem: fileItem,\n        form: form\n      };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n\n  }, {\n    key: \"onAfterAddingFile\",\n    value: function onAfterAddingFile(fileItem) {\n      return {\n        fileItem: fileItem\n      };\n    }\n    /**\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n\n  }, {\n    key: \"onWhenAddingFileFailed\",\n    value: function onWhenAddingFileFailed(item, filter, options) {\n      return {\n        item: item,\n        filter: filter,\n        options: options\n      };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n\n  }, {\n    key: \"onBeforeUploadItem\",\n    value: function onBeforeUploadItem(fileItem) {\n      return {\n        fileItem: fileItem\n      };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} progress\n     * @return {?}\n     */\n\n  }, {\n    key: \"onProgressItem\",\n    value: function onProgressItem(fileItem, progress) {\n      return {\n        fileItem: fileItem,\n        progress: progress\n      };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n\n  }, {\n    key: \"onProgressAll\",\n    value: function onProgressAll(progress) {\n      return {\n        progress: progress\n      };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"onSuccessItem\",\n    value: function onSuccessItem(item, response, status, headers) {\n      return {\n        item: item,\n        response: response,\n        status: status,\n        headers: headers\n      };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"onErrorItem\",\n    value: function onErrorItem(item, response, status, headers) {\n      return {\n        item: item,\n        response: response,\n        status: status,\n        headers: headers\n      };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"onCancelItem\",\n    value: function onCancelItem(item, response, status, headers) {\n      return {\n        item: item,\n        response: response,\n        status: status,\n        headers: headers\n      };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"onCompleteItem\",\n    value: function onCompleteItem(item, response, status, headers) {\n      return {\n        item: item,\n        response: response,\n        status: status,\n        headers: headers\n      };\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"onCompleteAll\",\n    value: function onCompleteAll() {\n      return void 0;\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n\n  }, {\n    key: \"_mimeTypeFilter\",\n    value: function _mimeTypeFilter(item) {\n      return !(this.options.allowedMimeType && this.options.allowedMimeType.indexOf(item.type) === -1);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n\n  }, {\n    key: \"_fileSizeFilter\",\n    value: function _fileSizeFilter(item) {\n      return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n\n  }, {\n    key: \"_fileTypeFilter\",\n    value: function _fileTypeFilter(item) {\n      return !(this.options.allowedFileType && this.options.allowedFileType.indexOf(FileType.getMimeClass(item)) === -1);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onErrorItem\",\n    value: function _onErrorItem(item, response, status, headers) {\n      item._onError(response, status, headers);\n\n      this.onErrorItem(item, response, status, headers);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onCompleteItem\",\n    value: function _onCompleteItem(item, response, status, headers) {\n      item._onComplete(response, status, headers);\n\n      this.onCompleteItem(item, response, status, headers);\n      /** @type {?} */\n\n      var nextItem = this.getReadyItems()[0];\n      this.isUploading = false;\n\n      if (nextItem) {\n        nextItem.upload();\n        return;\n      }\n\n      this.onCompleteAll();\n      this.progress = this._getTotalProgress();\n\n      this._render();\n    }\n    /**\n     * @protected\n     * @param {?} parsedHeaders\n     * @return {?}\n     */\n\n  }, {\n    key: \"_headersGetter\",\n    value: function _headersGetter(parsedHeaders) {\n      return (\n        /**\n        * @param {?} name\n        * @return {?}\n        */\n        function (name) {\n          if (name) {\n            return parsedHeaders[name.toLowerCase()] || void 0;\n          }\n\n          return parsedHeaders;\n        }\n      );\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n\n  }, {\n    key: \"_xhrTransport\",\n    value: function _xhrTransport(item) {\n      var _this2 = this;\n\n      /** @type {?} */\n      var that = this;\n      /** @type {?} */\n\n      var xhr = item._xhr = new XMLHttpRequest();\n      /** @type {?} */\n\n      var sendable;\n\n      this._onBeforeUploadItem(item);\n\n      if (typeof item._file.size !== 'number') {\n        throw new TypeError('The file specified is no longer valid');\n      }\n\n      if (!this.options.disableMultipart) {\n        sendable = new FormData();\n\n        this._onBuildItemForm(item, sendable);\n        /** @type {?} */\n\n\n        var appendFile =\n        /**\n        * @return {?}\n        */\n        function appendFile() {\n          return sendable.append(item.alias, item._file, item.file.name);\n        };\n\n        if (!this.options.parametersBeforeFiles) {\n          appendFile();\n        } // For AWS, Additional Parameters must come BEFORE Files\n\n\n        if (this.options.additionalParameter !== undefined) {\n          Object.keys(this.options.additionalParameter).forEach(\n          /**\n          * @param {?} key\n          * @return {?}\n          */\n          function (key) {\n            /** @type {?} */\n            var paramVal = _this2.options.additionalParameter[key]; // Allow an additional parameter to include the filename\n\n            if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0) {\n              paramVal = paramVal.replace('{{file_name}}', item.file.name);\n            }\n\n            sendable.append(key, paramVal);\n          });\n        }\n\n        if (this.options.parametersBeforeFiles) {\n          appendFile();\n        }\n      } else {\n        sendable = this.options.formatDataFunction(item);\n      }\n\n      xhr.upload.onprogress =\n      /**\n      * @param {?} event\n      * @return {?}\n      */\n      function (event) {\n        /** @type {?} */\n        var progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n\n        _this2._onProgressItem(item, progress);\n      };\n\n      xhr.onload =\n      /**\n      * @return {?}\n      */\n      function () {\n        /** @type {?} */\n        var headers = _this2._parseHeaders(xhr.getAllResponseHeaders());\n        /** @type {?} */\n\n\n        var response = _this2._transformResponse(xhr.response, headers);\n        /** @type {?} */\n\n\n        var gist = _this2._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n        /** @type {?} */\n\n        var method = '_on' + gist + 'Item';\n\n        /** @type {?} */\n        _this2[method](item, response, xhr.status, headers);\n\n        _this2._onCompleteItem(item, response, xhr.status, headers);\n      };\n\n      xhr.onerror =\n      /**\n      * @return {?}\n      */\n      function () {\n        /** @type {?} */\n        var headers = _this2._parseHeaders(xhr.getAllResponseHeaders());\n        /** @type {?} */\n\n\n        var response = _this2._transformResponse(xhr.response, headers);\n\n        _this2._onErrorItem(item, response, xhr.status, headers);\n\n        _this2._onCompleteItem(item, response, xhr.status, headers);\n      };\n\n      xhr.onabort =\n      /**\n      * @return {?}\n      */\n      function () {\n        /** @type {?} */\n        var headers = _this2._parseHeaders(xhr.getAllResponseHeaders());\n        /** @type {?} */\n\n\n        var response = _this2._transformResponse(xhr.response, headers);\n\n        _this2._onCancelItem(item, response, xhr.status, headers);\n\n        _this2._onCompleteItem(item, response, xhr.status, headers);\n      };\n\n      xhr.open(item.method, item.url, true);\n      xhr.withCredentials = item.withCredentials;\n\n      if (this.options.headers) {\n        var _iterator2 = _createForOfIteratorHelper(this.options.headers),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var header = _step2.value;\n            xhr.setRequestHeader(header.name, header.value);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n\n      if (item.headers.length) {\n        var _iterator3 = _createForOfIteratorHelper(item.headers),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _header = _step3.value;\n            xhr.setRequestHeader(_header.name, _header.value);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n\n      if (this.authToken) {\n        xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n      }\n\n      xhr.onreadystatechange =\n      /**\n      * @return {?}\n      */\n      function () {\n        if (xhr.readyState == XMLHttpRequest.DONE) {\n          that.response.emit(xhr.responseText);\n        }\n      };\n\n      if (this.options.formatDataFunctionIsAsync) {\n        sendable.then(\n        /**\n        * @param {?} result\n        * @return {?}\n        */\n        function (result) {\n          return xhr.send(JSON.stringify(result));\n        });\n      } else {\n        xhr.send(sendable);\n      }\n\n      this._render();\n    }\n    /**\n     * @protected\n     * @param {?=} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getTotalProgress\",\n    value: function _getTotalProgress() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.options.removeAfterUpload) {\n        return value;\n      }\n      /** @type {?} */\n\n\n      var notUploaded = this.getNotUploadedItems().length;\n      /** @type {?} */\n\n      var uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n      /** @type {?} */\n\n      var ratio = 100 / this.queue.length;\n      /** @type {?} */\n\n      var current = value * ratio / 100;\n      return Math.round(uploaded * ratio + current);\n    }\n    /**\n     * @protected\n     * @param {?} filters\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getFilters\",\n    value: function _getFilters(filters) {\n      if (!filters) {\n        return this.options.filters;\n      }\n\n      if (Array.isArray(filters)) {\n        return filters;\n      }\n\n      if (typeof filters === 'string') {\n        /** @type {?} */\n        var names = filters.match(/[^\\s,]+/g);\n        return this.options.filters.filter(\n        /**\n        * @param {?} filter\n        * @return {?}\n        */\n        function (filter) {\n          return names.indexOf(filter.name) !== -1;\n        });\n      }\n\n      return this.options.filters;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      return void 0;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"_queueLimitFilter\",\n    value: function _queueLimitFilter() {\n      return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n    }\n    /**\n     * @protected\n     * @param {?} file\n     * @param {?} filters\n     * @param {?} options\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isValidFile\",\n    value: function _isValidFile(file, filters, options) {\n      var _this3 = this;\n\n      this._failFilterIndex = -1;\n      return !filters.length ? true : filters.every(\n      /**\n      * @param {?} filter\n      * @return {?}\n      */\n      function (filter) {\n        _this3._failFilterIndex++;\n        return filter.fn.call(_this3, file, options);\n      });\n    }\n    /**\n     * @protected\n     * @param {?} status\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isSuccessCode\",\n    value: function _isSuccessCode(status) {\n      return status >= 200 && status < 300 || status === 304;\n    }\n    /**\n     * @protected\n     * @param {?} response\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"_transformResponse\",\n    value: function _transformResponse(response, headers) {\n      return response;\n    }\n    /**\n     * @protected\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"_parseHeaders\",\n    value: function _parseHeaders(headers) {\n      /** @type {?} */\n      var parsed = {};\n      /** @type {?} */\n\n      var key;\n      /** @type {?} */\n\n      var val;\n      /** @type {?} */\n\n      var i;\n\n      if (!headers) {\n        return parsed;\n      }\n\n      headers.split('\\n').map(\n      /**\n      * @param {?} line\n      * @return {?}\n      */\n      function (line) {\n        i = line.indexOf(':');\n        key = line.slice(0, i).trim().toLowerCase();\n        val = line.slice(i + 1).trim();\n\n        if (key) {\n          parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n        }\n      });\n      return parsed;\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onWhenAddingFileFailed\",\n    value: function _onWhenAddingFileFailed(item, filter, options) {\n      this.onWhenAddingFileFailed(item, filter, options);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onAfterAddingFile\",\n    value: function _onAfterAddingFile(item) {\n      this.onAfterAddingFile(item);\n    }\n    /**\n     * @protected\n     * @param {?} items\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onAfterAddingAll\",\n    value: function _onAfterAddingAll(items) {\n      this.onAfterAddingAll(items);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onBeforeUploadItem\",\n    value: function _onBeforeUploadItem(item) {\n      item._onBeforeUpload();\n\n      this.onBeforeUploadItem(item);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} form\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onBuildItemForm\",\n    value: function _onBuildItemForm(item, form) {\n      item._onBuildForm(form);\n\n      this.onBuildItemForm(item, form);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} progress\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onProgressItem\",\n    value: function _onProgressItem(item, progress) {\n      /** @type {?} */\n      var total = this._getTotalProgress(progress);\n\n      this.progress = total;\n\n      item._onProgress(progress);\n\n      this.onProgressItem(item, progress);\n      this.onProgressAll(total);\n\n      this._render();\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onSuccessItem\",\n    value: function _onSuccessItem(item, response, status, headers) {\n      item._onSuccess(response, status, headers);\n\n      this.onSuccessItem(item, response, status, headers);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onCancelItem\",\n    value: function _onCancelItem(item, response, status, headers) {\n      item._onCancel(response, status, headers);\n\n      this.onCancelItem(item, response, status, headers);\n    }\n  }]);\n\n  return FileUploader;\n}();\n\nif (false) {\n  /** @type {?} */\n  FileUploader.prototype.authToken;\n  /** @type {?} */\n\n  FileUploader.prototype.isUploading;\n  /** @type {?} */\n\n  FileUploader.prototype.queue;\n  /** @type {?} */\n\n  FileUploader.prototype.progress;\n  /** @type {?} */\n\n  FileUploader.prototype._nextIndex;\n  /** @type {?} */\n\n  FileUploader.prototype.autoUpload;\n  /** @type {?} */\n\n  FileUploader.prototype.authTokenHeader;\n  /** @type {?} */\n\n  FileUploader.prototype.response;\n  /** @type {?} */\n\n  FileUploader.prototype.options;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  FileUploader.prototype._failFilterIndex;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar FileSelectDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} element\n   */\n  function FileSelectDirective(element) {\n    _classCallCheck(this, FileSelectDirective);\n\n    this.onFileSelected = new EventEmitter();\n    this.element = element;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(FileSelectDirective, [{\n    key: \"getOptions\",\n    value: function getOptions() {\n      return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getFilters\",\n    value: function getFilters() {\n      return {};\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"isEmptyAfterSelection\",\n    value: function isEmptyAfterSelection() {\n      return !!this.element.nativeElement.attributes.multiple;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"onChange\",\n    value: function onChange() {\n      /** @type {?} */\n      var files = this.element.nativeElement.files;\n      /** @type {?} */\n\n      var options = this.getOptions();\n      /** @type {?} */\n\n      var filters = this.getFilters();\n      this.uploader.addToQueue(files, options, filters);\n      this.onFileSelected.emit(files);\n\n      if (this.isEmptyAfterSelection()) {\n        this.element.nativeElement.value = '';\n      }\n    }\n  }]);\n\n  return FileSelectDirective;\n}();\n\nFileSelectDirective.Éµfac = function FileSelectDirective_Factory(t) {\n  return new (t || FileSelectDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef));\n};\n\nFileSelectDirective.Éµdir = Éµngcc0.ÉµÉµdefineDirective({\n  type: FileSelectDirective,\n  selectors: [[\"\", \"ng2FileSelect\", \"\"]],\n  hostBindings: function FileSelectDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      Éµngcc0.ÉµÉµlistener(\"change\", function FileSelectDirective_change_HostBindingHandler() {\n        return ctx.onChange();\n      });\n    }\n  },\n  inputs: {\n    uploader: \"uploader\"\n  },\n  outputs: {\n    onFileSelected: \"onFileSelected\"\n  }\n});\n/** @nocollapse */\n\nFileSelectDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\nFileSelectDirective.propDecorators = {\n  uploader: [{\n    type: Input\n  }],\n  onFileSelected: [{\n    type: Output\n  }],\n  onChange: [{\n    type: HostListener,\n    args: ['change']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  Éµngcc0.ÉµsetClassMetadata(FileSelectDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ng2FileSelect]'\n    }]\n  }], function () {\n    return [{\n      type: Éµngcc0.ElementRef\n    }];\n  }, {\n    onFileSelected: [{\n      type: Output\n    }],\n\n    /**\n     * @return {?}\n     */\n    onChange: [{\n      type: HostListener,\n      args: ['change']\n    }],\n    uploader: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  FileSelectDirective.prototype.uploader;\n  /** @type {?} */\n\n  FileSelectDirective.prototype.onFileSelected;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  FileSelectDirective.prototype.element;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar FileDropDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} element\n   */\n  function FileDropDirective(element) {\n    _classCallCheck(this, FileDropDirective);\n\n    this.fileOver = new EventEmitter();\n    this.onFileDrop = new EventEmitter();\n    this.element = element;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(FileDropDirective, [{\n    key: \"getOptions\",\n    value: function getOptions() {\n      return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getFilters\",\n    value: function getFilters() {\n      return {};\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onDrop\",\n    value: function onDrop(event) {\n      /** @type {?} */\n      var transfer = this._getTransfer(event);\n\n      if (!transfer) {\n        return;\n      }\n      /** @type {?} */\n\n\n      var options = this.getOptions();\n      /** @type {?} */\n\n      var filters = this.getFilters();\n\n      this._preventAndStop(event);\n\n      this.uploader.addToQueue(transfer.files, options, filters);\n      this.fileOver.emit(false);\n      this.onFileDrop.emit(transfer.files);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onDragOver\",\n    value: function onDragOver(event) {\n      /** @type {?} */\n      var transfer = this._getTransfer(event);\n\n      if (!this._haveFiles(transfer.types)) {\n        return;\n      }\n\n      transfer.dropEffect = 'copy';\n\n      this._preventAndStop(event);\n\n      this.fileOver.emit(true);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onDragLeave\",\n    value: function onDragLeave(event) {\n      if (\n      /** @type {?} */\n      this.element) {\n        if (event.currentTarget ===\n        /** @type {?} */\n        this.element[0]) {\n          return;\n        }\n      }\n\n      this._preventAndStop(event);\n\n      this.fileOver.emit(false);\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getTransfer\",\n    value: function _getTransfer(event) {\n      return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_preventAndStop\",\n    value: function _preventAndStop(event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    /**\n     * @protected\n     * @param {?} types\n     * @return {?}\n     */\n\n  }, {\n    key: \"_haveFiles\",\n    value: function _haveFiles(types) {\n      if (!types) {\n        return false;\n      }\n\n      if (types.indexOf) {\n        return types.indexOf('Files') !== -1;\n      } else if (types.contains) {\n        return types.contains('Files');\n      } else {\n        return false;\n      }\n    }\n  }]);\n\n  return FileDropDirective;\n}();\n\nFileDropDirective.Éµfac = function FileDropDirective_Factory(t) {\n  return new (t || FileDropDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef));\n};\n\nFileDropDirective.Éµdir = Éµngcc0.ÉµÉµdefineDirective({\n  type: FileDropDirective,\n  selectors: [[\"\", \"ng2FileDrop\", \"\"]],\n  hostBindings: function FileDropDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      Éµngcc0.ÉµÉµlistener(\"drop\", function FileDropDirective_drop_HostBindingHandler($event) {\n        return ctx.onDrop($event);\n      })(\"dragover\", function FileDropDirective_dragover_HostBindingHandler($event) {\n        return ctx.onDragOver($event);\n      })(\"dragleave\", function FileDropDirective_dragleave_HostBindingHandler($event) {\n        return ctx.onDragLeave($event);\n      });\n    }\n  },\n  inputs: {\n    uploader: \"uploader\"\n  },\n  outputs: {\n    fileOver: \"fileOver\",\n    onFileDrop: \"onFileDrop\"\n  }\n});\n/** @nocollapse */\n\nFileDropDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\nFileDropDirective.propDecorators = {\n  uploader: [{\n    type: Input\n  }],\n  fileOver: [{\n    type: Output\n  }],\n  onFileDrop: [{\n    type: Output\n  }],\n  onDrop: [{\n    type: HostListener,\n    args: ['drop', ['$event']]\n  }],\n  onDragOver: [{\n    type: HostListener,\n    args: ['dragover', ['$event']]\n  }],\n  onDragLeave: [{\n    type: HostListener,\n    args: ['dragleave', ['$event']]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  Éµngcc0.ÉµsetClassMetadata(FileDropDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ng2FileDrop]'\n    }]\n  }], function () {\n    return [{\n      type: Éµngcc0.ElementRef\n    }];\n  }, {\n    fileOver: [{\n      type: Output\n    }],\n    onFileDrop: [{\n      type: Output\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop: [{\n      type: HostListener,\n      args: ['drop', ['$event']]\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver: [{\n      type: HostListener,\n      args: ['dragover', ['$event']]\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave: [{\n      type: HostListener,\n      args: ['dragleave', ['$event']]\n    }],\n    uploader: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  FileDropDirective.prototype.uploader;\n  /** @type {?} */\n\n  FileDropDirective.prototype.fileOver;\n  /** @type {?} */\n\n  FileDropDirective.prototype.onFileDrop;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  FileDropDirective.prototype.element;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar FileUploadModule = function FileUploadModule() {\n  _classCallCheck(this, FileUploadModule);\n};\n\nFileUploadModule.Éµmod = Éµngcc0.ÉµÉµdefineNgModule({\n  type: FileUploadModule\n});\nFileUploadModule.Éµinj = Éµngcc0.ÉµÉµdefineInjector({\n  factory: function FileUploadModule_Factory(t) {\n    return new (t || FileUploadModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(FileUploadModule, {\n    declarations: function declarations() {\n      return [FileDropDirective, FileSelectDirective];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [FileDropDirective, FileSelectDirective];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  Éµngcc0.ÉµsetClassMetadata(FileUploadModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [FileDropDirective, FileSelectDirective],\n      exports: [FileDropDirective, FileSelectDirective]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { FileDropDirective, FileItem, FileLikeObject, FileSelectDirective, FileUploadModule, FileUploader };","map":{"version":3,"sources":["ng2-file-upload/file-upload/file-like-object.class.ts","ng2-file-upload/file-upload/file-item.class.ts","ng2-file-upload/file-upload/file-type.class.ts","ng2-file-upload/file-upload/file-uploader.class.ts","ng2-file-upload/file-upload/file-select.directive.ts","ng2-file-upload/file-upload/file-drop.directive.ts","ng2-file-upload/file-upload/file-upload.module.ts"],"names":[],"mappings":"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","sourcesContent":["function isElement(node: any): boolean {\n  return !!(node && (node.nodeName || node.prop && node.attr && node.find));\n}\n\nexport class FileLikeObject {\n  public lastModifiedDate: any;\n  public size: any;\n  public type: string;\n  public name: string;\n  public rawFile: string;\n\n  public constructor(fileOrInput: any) {\n    this.rawFile = fileOrInput;\n    let isInput = isElement(fileOrInput);\n    let fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n    let postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n    let method = '_createFrom' + postfix;\n    (this as any)[ method ](fakePathOrObject);\n  }\n\n  public _createFromFakePath(path: string): void {\n    this.lastModifiedDate = void 0;\n    this.size = void 0;\n    this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n    this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n  }\n\n  public _createFromObject(object: { size: number, type: string, name: string }): void {\n    this.size = object.size;\n    this.type = object.type;\n    this.name = object.name;\n  }\n}\n","import { FileLikeObject } from './file-like-object.class';\nimport { FileUploader, ParsedResponseHeaders, FileUploaderOptions } from './file-uploader.class';\n\nexport class FileItem {\n  public file: FileLikeObject;\n  public _file: File;\n  public alias: string;\n  public url: string = '/';\n  public method: string;\n  public headers: any = [];\n  public withCredentials: boolean = true;\n  public formData: any = [];\n  public isReady: boolean = false;\n  public isUploading: boolean = false;\n  public isUploaded: boolean = false;\n  public isSuccess: boolean = false;\n  public isCancel: boolean = false;\n  public isError: boolean = false;\n  public progress: number = 0;\n  public index: number = void 0;\n  public _xhr: XMLHttpRequest;\n  public _form: any;\n\n  protected uploader: FileUploader;\n  protected some: File;\n  protected options: FileUploaderOptions;\n\n  public constructor(uploader: FileUploader, some: File, options: FileUploaderOptions) {\n    this.uploader = uploader;\n    this.some = some;\n    this.options = options;\n    this.file = new FileLikeObject(some);\n    this._file = some;\n    if (uploader.options) {\n      this.method = uploader.options.method || 'POST';\n      this.alias = uploader.options.itemAlias || 'file';\n    }\n    this.url = uploader.options.url;\n  }\n\n  public upload(): void {\n    try {\n      this.uploader.uploadItem(this);\n    } catch (e) {\n      this.uploader._onCompleteItem(this, '', 0, {});\n      this.uploader._onErrorItem(this, '', 0, {});\n    }\n  }\n\n  public cancel(): void {\n    this.uploader.cancelItem(this);\n  }\n\n  public remove(): void {\n    this.uploader.removeFromQueue(this);\n  }\n\n  public onBeforeUpload(): void {\n    return void 0;\n  }\n\n  public onBuildForm(form: any): any {\n    return { form };\n  }\n\n  public onProgress(progress: number): any {\n    return { progress };\n  }\n\n  public onSuccess(response: string, status: number, headers: ParsedResponseHeaders): any {\n    return { response, status, headers };\n  }\n\n  public onError(response: string, status: number, headers: ParsedResponseHeaders): any {\n    return { response, status, headers };\n  }\n\n  public onCancel(response: string, status: number, headers: ParsedResponseHeaders): any {\n    return { response, status, headers };\n  }\n\n  public onComplete(response: string, status: number, headers: ParsedResponseHeaders): any {\n    return { response, status, headers };\n  }\n\n  public _onBeforeUpload(): void {\n    this.isReady = true;\n    this.isUploading = true;\n    this.isUploaded = false;\n    this.isSuccess = false;\n    this.isCancel = false;\n    this.isError = false;\n    this.progress = 0;\n    this.onBeforeUpload();\n  }\n\n  public _onBuildForm(form: any): void {\n    this.onBuildForm(form);\n  }\n\n  public _onProgress(progress: number): void {\n    this.progress = progress;\n    this.onProgress(progress);\n  }\n\n  public _onSuccess(response: string, status: number, headers: ParsedResponseHeaders): void {\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = true;\n    this.isSuccess = true;\n    this.isCancel = false;\n    this.isError = false;\n    this.progress = 100;\n    this.index = void 0;\n    this.onSuccess(response, status, headers);\n  }\n\n  public _onError(response: string, status: number, headers: ParsedResponseHeaders): void {\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = true;\n    this.isSuccess = false;\n    this.isCancel = false;\n    this.isError = true;\n    this.progress = 0;\n    this.index = void 0;\n    this.onError(response, status, headers);\n  }\n\n  public _onCancel(response: string, status: number, headers: ParsedResponseHeaders): void {\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = false;\n    this.isSuccess = false;\n    this.isCancel = true;\n    this.isError = false;\n    this.progress = 0;\n    this.index = void 0;\n    this.onCancel(response, status, headers);\n  }\n\n  public _onComplete(response: string, status: number, headers: ParsedResponseHeaders): void {\n    this.onComplete(response, status, headers);\n\n    if (this.uploader.options.removeAfterUpload) {\n      this.remove();\n    }\n  }\n\n  public _prepareToUploading(): void {\n    this.index = this.index || ++this.uploader._nextIndex;\n    this.isReady = true;\n  }\n}\n","import { FileLikeObject } from \"../index\";\n\nexport class FileType {\n  /*  MS office  */\n  public static mime_doc: string[] = [\n    'application/msword',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n    'application/vnd.ms-word.document.macroEnabled.12',\n    'application/vnd.ms-word.template.macroEnabled.12'\n  ];\n  public static mime_xsl: string[] = [\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n    'application/vnd.ms-excel.sheet.macroEnabled.12',\n    'application/vnd.ms-excel.template.macroEnabled.12',\n    'application/vnd.ms-excel.addin.macroEnabled.12',\n    'application/vnd.ms-excel.sheet.binary.macroEnabled.12'\n  ];\n  public static mime_ppt: string[] = [\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    'application/vnd.openxmlformats-officedocument.presentationml.template',\n    'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n    'application/vnd.ms-powerpoint.addin.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'\n  ];\n\n  /* PSD */\n  public static mime_psd: string[] = [\n    'image/photoshop',\n    'image/x-photoshop',\n    'image/psd',\n    'application/photoshop',\n    'application/psd',\n    'zz-application/zz-winassoc-psd'\n  ];\n\n  /* Compressed files */\n  public static mime_compress: string[] = [\n    'application/x-gtar',\n    'application/x-gcompress',\n    'application/compress',\n    'application/x-tar',\n    'application/x-rar-compressed',\n    'application/octet-stream',\n    'application/x-zip-compressed',\n    'application/zip-compressed',\n    'application/x-7z-compressed',\n    'application/gzip',\n    'application/x-bzip2'\n  ];\n\n  public static getMimeClass(file: FileLikeObject): string {\n    let mimeClass = 'application';\n    if (this.mime_psd.indexOf(file.type) !== -1) {\n      mimeClass = 'image';\n    } else if (file.type.match('image.*')) {\n      mimeClass = 'image';\n    } else if (file.type.match('video.*')) {\n      mimeClass = 'video';\n    } else if (file.type.match('audio.*')) {\n      mimeClass = 'audio';\n    } else if (file.type === 'application/pdf') {\n      mimeClass = 'pdf';\n    } else if (this.mime_compress.indexOf(file.type) !== -1) {\n      mimeClass = 'compress';\n    } else if (this.mime_doc.indexOf(file.type) !== -1) {\n      mimeClass = 'doc';\n    } else if (this.mime_xsl.indexOf(file.type) !== -1) {\n      mimeClass = 'xls';\n    } else if (this.mime_ppt.indexOf(file.type) !== -1) {\n      mimeClass = 'ppt';\n    }\n    if (mimeClass === 'application') {\n      mimeClass = this.fileTypeDetection(file.name);\n    }\n\n    return mimeClass;\n  }\n\n  public static fileTypeDetection(inputFilename: string): string {\n    let types: { [ key: string ]: string } = {\n      'jpg': 'image',\n      'jpeg': 'image',\n      'tif': 'image',\n      'psd': 'image',\n      'bmp': 'image',\n      'png': 'image',\n      'nef': 'image',\n      'tiff': 'image',\n      'cr2': 'image',\n      'dwg': 'image',\n      'cdr': 'image',\n      'ai': 'image',\n      'indd': 'image',\n      'pin': 'image',\n      'cdp': 'image',\n      'skp': 'image',\n      'stp': 'image',\n      '3dm': 'image',\n      'mp3': 'audio',\n      'wav': 'audio',\n      'wma': 'audio',\n      'mod': 'audio',\n      'm4a': 'audio',\n      'compress': 'compress',\n      'zip': 'compress',\n      'rar': 'compress',\n      '7z': 'compress',\n      'lz': 'compress',\n      'z01': 'compress',\n      'bz2': 'compress',\n      'gz': 'compress',\n      'pdf': 'pdf',\n      'xls': 'xls',\n      'xlsx': 'xls',\n      'ods': 'xls',\n      'mp4': 'video',\n      'avi': 'video',\n      'wmv': 'video',\n      'mpg': 'video',\n      'mts': 'video',\n      'flv': 'video',\n      '3gp': 'video',\n      'vob': 'video',\n      'm4v': 'video',\n      'mpeg': 'video',\n      'm2ts': 'video',\n      'mov': 'video',\n      'doc': 'doc',\n      'docx': 'doc',\n      'eps': 'doc',\n      'txt': 'doc',\n      'odt': 'doc',\n      'rtf': 'doc',\n      'ppt': 'ppt',\n      'pptx': 'ppt',\n      'pps': 'ppt',\n      'ppsx': 'ppt',\n      'odp': 'ppt'\n    };\n\n    let chunks = inputFilename.split('.');\n    if (chunks.length < 2) {\n      return 'application';\n    }\n    let extension = chunks[ chunks.length - 1 ].toLowerCase();\n    if (types[ extension ] === undefined) {\n      return 'application';\n    } else {\n      return types[ extension ];\n    }\n  }\n}\n","import { EventEmitter } from '@angular/core';\nimport { FileLikeObject } from './file-like-object.class';\nimport { FileItem } from './file-item.class';\nimport { FileType } from './file-type.class';\n\nfunction isFile(value: any): boolean {\n  return (File && value instanceof File);\n}\n\nexport interface Headers {\n  name: string;\n  value: string;\n}\n\nexport type ParsedResponseHeaders = { [ headerFieldName: string ]: string };\n\nexport type FilterFunction = {\n  name: string,\n  fn: (item?: FileLikeObject, options?: FileUploaderOptions) => boolean\n};\n\nexport interface FileUploaderOptions {\n  allowedMimeType?: string[];\n  allowedFileType?: string[];\n  autoUpload?: boolean;\n  isHTML5?: boolean;\n  filters?: FilterFunction[];\n  headers?: Headers[];\n  method?: string;\n  authToken?: string;\n  maxFileSize?: number;\n  queueLimit?: number;\n  removeAfterUpload?: boolean;\n  url?: string;\n  disableMultipart?: boolean;\n  itemAlias?: string;\n  authTokenHeader?: string;\n  additionalParameter?: { [ key: string ]: any };\n  parametersBeforeFiles?: boolean;\n  formatDataFunction?: Function;\n  formatDataFunctionIsAsync?: boolean;\n}\n\nexport class FileUploader {\n\n  public authToken: string;\n  public isUploading: boolean = false;\n  public queue: FileItem[] = [];\n  public progress: number = 0;\n  public _nextIndex: number = 0;\n  public autoUpload: any;\n  public authTokenHeader: string;\n  public response: EventEmitter<any>;\n\n  public options: FileUploaderOptions = {\n    autoUpload: false,\n    isHTML5: true,\n    filters: [],\n    removeAfterUpload: false,\n    disableMultipart: false,\n    formatDataFunction: (item: FileItem) => item._file,\n    formatDataFunctionIsAsync: false\n  };\n\n  protected _failFilterIndex: number;\n\n  public constructor(options: FileUploaderOptions) {\n    this.setOptions(options);\n    this.response = new EventEmitter<any>();\n  }\n\n  public setOptions(options: FileUploaderOptions): void {\n    this.options = Object.assign(this.options, options);\n\n    this.authToken = this.options.authToken;\n    this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n    this.autoUpload = this.options.autoUpload;\n    this.options.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n\n    if (this.options.maxFileSize) {\n      this.options.filters.unshift({ name: 'fileSize', fn: this._fileSizeFilter });\n    }\n\n    if (this.options.allowedFileType) {\n      this.options.filters.unshift({ name: 'fileType', fn: this._fileTypeFilter });\n    }\n\n    if (this.options.allowedMimeType) {\n      this.options.filters.unshift({ name: 'mimeType', fn: this._mimeTypeFilter });\n    }\n\n    for (let i = 0; i < this.queue.length; i++) {\n      this.queue[ i ].url = this.options.url;\n    }\n  }\n\n  public addToQueue(files: File[], options?: FileUploaderOptions, filters?: FilterFunction[] | string): void {\n    let list: File[] = [];\n    for (let file of files) {\n      list.push(file);\n    }\n    let arrayOfFilters = this._getFilters(filters);\n    let count = this.queue.length;\n    let addedFileItems: FileItem[] = [];\n    list.map((some: File) => {\n      if (!options) {\n        options = this.options;\n      }\n\n      let temp = new FileLikeObject(some);\n      if (this._isValidFile(temp, arrayOfFilters, options)) {\n        let fileItem = new FileItem(this, some, options);\n        addedFileItems.push(fileItem);\n        this.queue.push(fileItem);\n        this._onAfterAddingFile(fileItem);\n      } else {\n        let filter = arrayOfFilters[ this._failFilterIndex ];\n        this._onWhenAddingFileFailed(temp, filter, options);\n      }\n    });\n    if (this.queue.length !== count) {\n      this._onAfterAddingAll(addedFileItems);\n      this.progress = this._getTotalProgress();\n    }\n    this._render();\n    if (this.options.autoUpload) {\n      this.uploadAll();\n    }\n  }\n\n  public removeFromQueue(value: FileItem): void {\n    let index = this.getIndexOfItem(value);\n    let item = this.queue[ index ];\n    if (item.isUploading) {\n      item.cancel();\n    }\n    this.queue.splice(index, 1);\n    this.progress = this._getTotalProgress();\n  }\n\n  public clearQueue(): void {\n    while (this.queue.length) {\n      this.queue[ 0 ].remove();\n    }\n    this.progress = 0;\n  }\n\n  public uploadItem(value: FileItem): void {\n    let index = this.getIndexOfItem(value);\n    let item = this.queue[ index ];\n    let transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n    item._prepareToUploading();\n    if (this.isUploading) {\n      return;\n    }\n    this.isUploading = true;\n    (this as any)[ transport ](item);\n  }\n\n  public cancelItem(value: FileItem): void {\n    let index = this.getIndexOfItem(value);\n    let item = this.queue[ index ];\n    let prop = this.options.isHTML5 ? item._xhr : item._form;\n    if (item && item.isUploading) {\n      prop.abort();\n    }\n  }\n\n  public uploadAll(): void {\n    let items = this.getNotUploadedItems().filter((item: FileItem) => !item.isUploading);\n    if (!items.length) {\n      return;\n    }\n    items.map((item: FileItem) => item._prepareToUploading());\n    items[ 0 ].upload();\n  }\n\n  public cancelAll(): void {\n    let items = this.getNotUploadedItems();\n    items.map((item: FileItem) => item.cancel());\n  }\n\n  public isFile(value: any): boolean {\n    return isFile(value);\n  }\n\n  public isFileLikeObject(value: any): boolean {\n    return value instanceof FileLikeObject;\n  }\n\n  public getIndexOfItem(value: any): number {\n    return typeof value === 'number' ? value : this.queue.indexOf(value);\n  }\n\n  public getNotUploadedItems(): any[] {\n    return this.queue.filter((item: FileItem) => !item.isUploaded);\n  }\n\n  public getReadyItems(): any[] {\n    return this.queue\n      .filter((item: FileItem) => (item.isReady && !item.isUploading))\n      .sort((item1: any, item2: any) => item1.index - item2.index);\n  }\n\n  public destroy(): void {\n    return void 0;\n  }\n\n  public onAfterAddingAll(fileItems: any): any {\n    return { fileItems };\n  }\n\n  public onBuildItemForm(fileItem: FileItem, form: any): any {\n    return { fileItem, form };\n  }\n\n  public onAfterAddingFile(fileItem: FileItem): any {\n    return { fileItem };\n  }\n\n  public onWhenAddingFileFailed(item: FileLikeObject, filter: any, options: any): any {\n    return { item, filter, options };\n  }\n\n  public onBeforeUploadItem(fileItem: FileItem): any {\n    return { fileItem };\n  }\n\n  public onProgressItem(fileItem: FileItem, progress: any): any {\n    return { fileItem, progress };\n  }\n\n  public onProgressAll(progress: any): any {\n    return { progress };\n  }\n\n  public onSuccessItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): any {\n    return { item, response, status, headers };\n  }\n\n  public onErrorItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): any {\n    return { item, response, status, headers };\n  }\n\n  public onCancelItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): any {\n    return { item, response, status, headers };\n  }\n\n  public onCompleteItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): any {\n    return { item, response, status, headers };\n  }\n\n  public onCompleteAll(): any {\n    return void 0;\n  }\n\n  public _mimeTypeFilter(item: FileLikeObject): boolean {\n    return !(this.options.allowedMimeType && this.options.allowedMimeType.indexOf(item.type) === -1);\n  }\n\n  public _fileSizeFilter(item: FileLikeObject): boolean {\n    return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n  }\n\n  public _fileTypeFilter(item: FileLikeObject): boolean {\n    return !(this.options.allowedFileType &&\n      this.options.allowedFileType.indexOf(FileType.getMimeClass(item)) === -1);\n  }\n\n  public _onErrorItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): void {\n    item._onError(response, status, headers);\n    this.onErrorItem(item, response, status, headers);\n  }\n\n  public _onCompleteItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): void {\n    item._onComplete(response, status, headers);\n    this.onCompleteItem(item, response, status, headers);\n    let nextItem = this.getReadyItems()[ 0 ];\n    this.isUploading = false;\n    if (nextItem) {\n      nextItem.upload();\n      return;\n    }\n    this.onCompleteAll();\n    this.progress = this._getTotalProgress();\n    this._render();\n  }\n\n  protected _headersGetter(parsedHeaders: ParsedResponseHeaders): any {\n    return (name: any): any => {\n      if (name) {\n        return parsedHeaders[ name.toLowerCase() ] || void 0;\n      }\n      return parsedHeaders;\n    };\n  }\n\n  protected _xhrTransport(item: FileItem): any {\n    let that = this;\n    let xhr = item._xhr = new XMLHttpRequest();\n    let sendable: any;\n    this._onBeforeUploadItem(item);\n\n    if (typeof item._file.size !== 'number') {\n      throw new TypeError('The file specified is no longer valid');\n    }\n    if (!this.options.disableMultipart) {\n      sendable = new FormData();\n      this._onBuildItemForm(item, sendable);\n\n      const appendFile = () => sendable.append(item.alias, item._file, item.file.name);\n      if (!this.options.parametersBeforeFiles) {\n        appendFile();\n      }\n\n      // For AWS, Additional Parameters must come BEFORE Files\n      if (this.options.additionalParameter !== undefined) {\n        Object.keys(this.options.additionalParameter).forEach((key: string) => {\n          let paramVal = this.options.additionalParameter[ key ];\n          // Allow an additional parameter to include the filename\n          if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0) {\n            paramVal = paramVal.replace('{{file_name}}', item.file.name);\n          }\n          sendable.append(key, paramVal);\n        });\n      }\n\n      if (this.options.parametersBeforeFiles) {\n        appendFile();\n      }\n    } else {\n      sendable = this.options.formatDataFunction(item);\n    }\n\n    xhr.upload.onprogress = (event: any) => {\n      let progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n      this._onProgressItem(item, progress);\n    };\n    xhr.onload = () => {\n      let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n      let response = this._transformResponse(xhr.response, headers);\n      let gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n      let method = '_on' + gist + 'Item';\n      (this as any)[ method ](item, response, xhr.status, headers);\n      this._onCompleteItem(item, response, xhr.status, headers);\n    };\n    xhr.onerror = () => {\n      let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n      let response = this._transformResponse(xhr.response, headers);\n      this._onErrorItem(item, response, xhr.status, headers);\n      this._onCompleteItem(item, response, xhr.status, headers);\n    };\n    xhr.onabort = () => {\n      let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n      let response = this._transformResponse(xhr.response, headers);\n      this._onCancelItem(item, response, xhr.status, headers);\n      this._onCompleteItem(item, response, xhr.status, headers);\n    };\n    xhr.open(item.method, item.url, true);\n    xhr.withCredentials = item.withCredentials;\n    if (this.options.headers) {\n      for (let header of this.options.headers) {\n        xhr.setRequestHeader(header.name, header.value);\n      }\n    }\n    if (item.headers.length) {\n      for (let header of item.headers) {\n        xhr.setRequestHeader(header.name, header.value);\n      }\n    }\n    if (this.authToken) {\n      xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n    }\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState == XMLHttpRequest.DONE) {\n        that.response.emit(xhr.responseText)\n      }\n    }\n    if (this.options.formatDataFunctionIsAsync) {\n      sendable.then(\n        (result: any) => xhr.send(JSON.stringify(result))\n      );\n    } else {\n      xhr.send(sendable);\n    }\n    this._render();\n  }\n\n  protected _getTotalProgress(value: number = 0): number {\n    if (this.options.removeAfterUpload) {\n      return value;\n    }\n    let notUploaded = this.getNotUploadedItems().length;\n    let uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n    let ratio = 100 / this.queue.length;\n    let current = value * ratio / 100;\n    return Math.round(uploaded * ratio + current);\n  }\n\n  protected _getFilters(filters: FilterFunction[] | string): FilterFunction[] {\n    if (!filters) {\n      return this.options.filters;\n    }\n    if (Array.isArray(filters)) {\n      return filters;\n    }\n    if (typeof filters === 'string') {\n      let names = filters.match(/[^\\s,]+/g);\n      return this.options.filters\n        .filter((filter: any) => names.indexOf(filter.name) !== -1);\n    }\n    return this.options.filters;\n  }\n\n  protected _render(): any {\n    return void 0;\n  }\n\n  protected _queueLimitFilter(): boolean {\n    return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n  }\n\n  protected _isValidFile(file: FileLikeObject, filters: FilterFunction[], options: FileUploaderOptions): boolean {\n    this._failFilterIndex = -1;\n    return !filters.length ? true : filters.every((filter: FilterFunction) => {\n      this._failFilterIndex++;\n      return filter.fn.call(this, file, options);\n    });\n  }\n\n  protected _isSuccessCode(status: number): boolean {\n    return (status >= 200 && status < 300) || status === 304;\n  }\n\n  protected _transformResponse(response: string, headers: ParsedResponseHeaders): string {\n    return response;\n  }\n\n  protected _parseHeaders(headers: string): ParsedResponseHeaders {\n    let parsed: any = {};\n    let key: any;\n    let val: any;\n    let i: any;\n    if (!headers) {\n      return parsed;\n    }\n    headers.split('\\n').map((line: any) => {\n      i = line.indexOf(':');\n      key = line.slice(0, i).trim().toLowerCase();\n      val = line.slice(i + 1).trim();\n      if (key) {\n        parsed[ key ] = parsed[ key ] ? parsed[ key ] + ', ' + val : val;\n      }\n    });\n    return parsed;\n  }\n\n  protected _onWhenAddingFileFailed(item: FileLikeObject, filter: any, options: any): void {\n    this.onWhenAddingFileFailed(item, filter, options);\n  }\n\n  protected _onAfterAddingFile(item: FileItem): void {\n    this.onAfterAddingFile(item);\n  }\n\n  protected _onAfterAddingAll(items: any): void {\n    this.onAfterAddingAll(items);\n  }\n\n  protected _onBeforeUploadItem(item: FileItem): void {\n    item._onBeforeUpload();\n    this.onBeforeUploadItem(item);\n  }\n\n  protected _onBuildItemForm(item: FileItem, form: any): void {\n    item._onBuildForm(form);\n    this.onBuildItemForm(item, form);\n  }\n\n  protected _onProgressItem(item: FileItem, progress: any): void {\n    let total = this._getTotalProgress(progress);\n    this.progress = total;\n    item._onProgress(progress);\n    this.onProgressItem(item, progress);\n    this.onProgressAll(total);\n    this._render();\n  }\n\n  protected _onSuccessItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): void {\n    item._onSuccess(response, status, headers);\n    this.onSuccessItem(item, response, status, headers);\n  }\n\n  protected _onCancelItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): void {\n    item._onCancel(response, status, headers);\n    this.onCancelItem(item, response, status, headers);\n  }\n}\n","import { Directive, EventEmitter, ElementRef, Input, HostListener, Output } from '@angular/core';\n\nimport { FileUploader } from './file-uploader.class';\n\n@Directive({ selector: '[ng2FileSelect]' })\nexport class FileSelectDirective {\n  @Input() public uploader: FileUploader;\n  @Output() public onFileSelected: EventEmitter<File[]> = new EventEmitter<File[]>();\n\n  protected element: ElementRef;\n\n  public constructor(element: ElementRef) {\n    this.element = element;\n  }\n\n  public getOptions(): any {\n    return this.uploader.options;\n  }\n\n  public getFilters(): any {\n    return {};\n  }\n\n  public isEmptyAfterSelection(): boolean {\n    return !!this.element.nativeElement.attributes.multiple;\n  }\n\n  @HostListener('change')\n  public onChange(): any {\n    let files = this.element.nativeElement.files;\n    let options = this.getOptions();\n    let filters = this.getFilters();\n\n    this.uploader.addToQueue(files, options, filters);\n    this.onFileSelected.emit(files);\n\n    if (this.isEmptyAfterSelection()) {\n      this.element.nativeElement.value = '';\n    }\n  }\n}\n","import { Directive, EventEmitter, ElementRef, HostListener, Input, Output } from '@angular/core';\n\nimport { FileUploader, FileUploaderOptions } from './file-uploader.class';\n\n@Directive({ selector: '[ng2FileDrop]' })\nexport class FileDropDirective {\n  @Input() public uploader: FileUploader;\n  @Output() public fileOver: EventEmitter<any> = new EventEmitter();\n  @Output() public onFileDrop: EventEmitter<File[]> = new EventEmitter<File[]>();\n\n  protected element: ElementRef;\n\n  public constructor(element: ElementRef) {\n    this.element = element;\n  }\n\n  public getOptions(): FileUploaderOptions {\n    return this.uploader.options;\n  }\n\n  public getFilters(): any {\n    return {};\n  }\n\n  @HostListener('drop', [ '$event' ])\n  public onDrop(event: any): void {\n    let transfer = this._getTransfer(event);\n    if (!transfer) {\n      return;\n    }\n\n    let options = this.getOptions();\n    let filters = this.getFilters();\n    this._preventAndStop(event);\n    this.uploader.addToQueue(transfer.files, options, filters);\n    this.fileOver.emit(false);\n    this.onFileDrop.emit(transfer.files);\n  }\n\n  @HostListener('dragover', [ '$event' ])\n  public onDragOver(event: any): void {\n    let transfer = this._getTransfer(event);\n    if (!this._haveFiles(transfer.types)) {\n      return;\n    }\n\n    transfer.dropEffect = 'copy';\n    this._preventAndStop(event);\n    this.fileOver.emit(true);\n  }\n\n  @HostListener('dragleave', [ '$event' ])\n  public onDragLeave(event: any): any {\n    if ((this as any).element) {\n      if (event.currentTarget === (this as any).element[ 0 ]) {\n        return;\n      }\n    }\n\n    this._preventAndStop(event);\n    this.fileOver.emit(false);\n  }\n\n  protected _getTransfer(event: any): any {\n    return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n  }\n\n  protected _preventAndStop(event: any): any {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  protected _haveFiles(types: any): any {\n    if (!types) {\n      return false;\n    }\n\n    if (types.indexOf) {\n      return types.indexOf('Files') !== -1;\n    } else if (types.contains) {\n      return types.contains('Files');\n    } else {\n      return false;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FileDropDirective } from './file-drop.directive';\nimport { FileSelectDirective } from './file-select.directive';\n\n@NgModule({\n  imports: [ CommonModule ],\n  declarations: [ FileDropDirective, FileSelectDirective ],\n  exports: [ FileDropDirective, FileSelectDirective ]\n})\nexport class FileUploadModule {\n}\n"]},"metadata":{},"sourceType":"module"}