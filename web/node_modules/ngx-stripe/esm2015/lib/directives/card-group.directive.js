/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/card-group.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Directive, Input, Output, EventEmitter } from '@angular/core';
import { StripeInstance } from '../services/stripe-instance.class';
import { StripeElementsService } from '../services/stripe-elements.service';
export class StripeCardGroupDirective {
    /**
     * @param {?} stripeElementsService
     */
    constructor(stripeElementsService) {
        this.stripeElementsService = stripeElementsService;
        this.elements = new EventEmitter();
        this.state = 'notready';
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            this.state = 'starting';
            /** @type {?} */
            const elementsOptions = this.elementsOptions;
            /** @type {?} */
            const stripe = this.stripe;
            if (changes.elementsOptions || changes.stripe || !this._elements) {
                this._elements = yield this.stripeElementsService
                    .elements(stripe, elementsOptions)
                    .toPromise();
                this.elements.emit(this._elements);
            }
            this.state = 'ready';
        });
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            if (this.state === 'notready') {
                this.state = 'starting';
                this._elements = yield this.stripeElementsService
                    .elements(this.stripe)
                    .toPromise();
                this.elements.emit(this._elements);
                this.state = 'ready';
            }
        });
    }
}
StripeCardGroupDirective.decorators = [
    { type: Directive, args: [{
                selector: 'ngx-stripe-card-group,[ngxStripeCardGroup]'
            },] }
];
StripeCardGroupDirective.ctorParameters = () => [
    { type: StripeElementsService }
];
StripeCardGroupDirective.propDecorators = {
    elementsOptions: [{ type: Input }],
    stripe: [{ type: Input }],
    elements: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    StripeCardGroupDirective.prototype.elementsOptions;
    /** @type {?} */
    StripeCardGroupDirective.prototype.stripe;
    /** @type {?} */
    StripeCardGroupDirective.prototype.elements;
    /** @type {?} */
    StripeCardGroupDirective.prototype._elements;
    /** @type {?} */
    StripeCardGroupDirective.prototype.state;
    /** @type {?} */
    StripeCardGroupDirective.prototype.stripeElementsService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC1ncm91cC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtc3RyaXBlLyIsInNvdXJjZXMiOlsibGliL2RpcmVjdGl2ZXMvY2FyZC1ncm91cC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxLQUFLLEVBSUwsTUFBTSxFQUNOLFlBQVksRUFDYixNQUFNLGVBQWUsQ0FBQztBQUl2QixPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDbkUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFLNUUsTUFBTTs7OztJQVNKLFlBQW1CLHFCQUE0QztRQUE1QywwQkFBcUIsR0FBckIscUJBQXFCLENBQXVCO1FBTHJELGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBa0IsQ0FBQztRQUd4RCxVQUFLLEdBQXNDLFVBQVUsQ0FBQztJQUVZLENBQUM7Ozs7O0lBRTdELFdBQVcsQ0FBQyxPQUFzQjs7WUFDdEMsSUFBSSxDQUFDLEtBQUssR0FBRyxVQUFVLENBQUM7O2tCQUVsQixlQUFlLEdBQUcsSUFBSSxDQUFDLGVBQWU7O2tCQUN0QyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU07WUFFMUIsSUFBSSxPQUFPLENBQUMsZUFBZSxJQUFJLE9BQU8sQ0FBQyxNQUFNLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFO2dCQUNoRSxJQUFJLENBQUMsU0FBUyxHQUFHLE1BQU0sSUFBSSxDQUFDLHFCQUFxQjtxQkFDOUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxlQUFlLENBQUM7cUJBQ2pDLFNBQVMsRUFBRSxDQUFDO2dCQUNmLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQzthQUNwQztZQUVELElBQUksQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLENBQUM7S0FBQTs7OztJQUVLLFFBQVE7O1lBQ1osSUFBSSxJQUFJLENBQUMsS0FBSyxLQUFLLFVBQVUsRUFBRTtnQkFDN0IsSUFBSSxDQUFDLEtBQUssR0FBRyxVQUFVLENBQUM7Z0JBRXhCLElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxJQUFJLENBQUMscUJBQXFCO3FCQUM5QyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztxQkFDckIsU0FBUyxFQUFFLENBQUM7Z0JBQ2YsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO2dCQUVuQyxJQUFJLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQzthQUN0QjtRQUNILENBQUM7S0FBQTs7O1lBekNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsNENBQTRDO2FBQ3ZEOzs7WUFKUSxxQkFBcUI7Ozs4QkFNM0IsS0FBSztxQkFDTCxLQUFLO3VCQUVMLE1BQU07Ozs7SUFIUCxtREFBeUQ7O0lBQ3pELDBDQUFnQzs7SUFFaEMsNENBQXdEOztJQUV4RCw2Q0FBMEI7O0lBQzFCLHlDQUFzRDs7SUFFMUMseURBQW1EIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgRGlyZWN0aXZlLFxuICBJbnB1dCxcbiAgT25Jbml0LFxuICBPbkNoYW5nZXMsXG4gIFNpbXBsZUNoYW5nZXMsXG4gIE91dHB1dCxcbiAgRXZlbnRFbWl0dGVyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBTdHJpcGVFbGVtZW50cywgU3RyaXBlRWxlbWVudHNPcHRpb25zIH0gZnJvbSAnQHN0cmlwZS9zdHJpcGUtanMnO1xuXG5pbXBvcnQgeyBTdHJpcGVJbnN0YW5jZSB9IGZyb20gJy4uL3NlcnZpY2VzL3N0cmlwZS1pbnN0YW5jZS5jbGFzcyc7XG5pbXBvcnQgeyBTdHJpcGVFbGVtZW50c1NlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9zdHJpcGUtZWxlbWVudHMuc2VydmljZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ25neC1zdHJpcGUtY2FyZC1ncm91cCxbbmd4U3RyaXBlQ2FyZEdyb3VwXSdcbn0pXG5leHBvcnQgY2xhc3MgU3RyaXBlQ2FyZEdyb3VwRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xuICBASW5wdXQoKSBlbGVtZW50c09wdGlvbnM6IFBhcnRpYWw8U3RyaXBlRWxlbWVudHNPcHRpb25zPjtcbiAgQElucHV0KCkgc3RyaXBlOiBTdHJpcGVJbnN0YW5jZTtcblxuICBAT3V0cHV0KCkgZWxlbWVudHMgPSBuZXcgRXZlbnRFbWl0dGVyPFN0cmlwZUVsZW1lbnRzPigpO1xuXG4gIF9lbGVtZW50czogU3RyaXBlRWxlbWVudHM7XG4gIHN0YXRlOiAnbm90cmVhZHknIHwgJ3N0YXJ0aW5nJyB8ICdyZWFkeScgPSAnbm90cmVhZHknO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBzdHJpcGVFbGVtZW50c1NlcnZpY2U6IFN0cmlwZUVsZW1lbnRzU2VydmljZSkge31cblxuICBhc3luYyBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgdGhpcy5zdGF0ZSA9ICdzdGFydGluZyc7XG5cbiAgICBjb25zdCBlbGVtZW50c09wdGlvbnMgPSB0aGlzLmVsZW1lbnRzT3B0aW9ucztcbiAgICBjb25zdCBzdHJpcGUgPSB0aGlzLnN0cmlwZTtcblxuICAgIGlmIChjaGFuZ2VzLmVsZW1lbnRzT3B0aW9ucyB8fCBjaGFuZ2VzLnN0cmlwZSB8fCAhdGhpcy5fZWxlbWVudHMpIHtcbiAgICAgIHRoaXMuX2VsZW1lbnRzID0gYXdhaXQgdGhpcy5zdHJpcGVFbGVtZW50c1NlcnZpY2VcbiAgICAgICAgLmVsZW1lbnRzKHN0cmlwZSwgZWxlbWVudHNPcHRpb25zKVxuICAgICAgICAudG9Qcm9taXNlKCk7XG4gICAgICB0aGlzLmVsZW1lbnRzLmVtaXQodGhpcy5fZWxlbWVudHMpO1xuICAgIH1cblxuICAgIHRoaXMuc3RhdGUgPSAncmVhZHknO1xuICB9XG5cbiAgYXN5bmMgbmdPbkluaXQoKSB7XG4gICAgaWYgKHRoaXMuc3RhdGUgPT09ICdub3RyZWFkeScpIHtcbiAgICAgIHRoaXMuc3RhdGUgPSAnc3RhcnRpbmcnO1xuXG4gICAgICB0aGlzLl9lbGVtZW50cyA9IGF3YWl0IHRoaXMuc3RyaXBlRWxlbWVudHNTZXJ2aWNlXG4gICAgICAgIC5lbGVtZW50cyh0aGlzLnN0cmlwZSlcbiAgICAgICAgLnRvUHJvbWlzZSgpO1xuICAgICAgdGhpcy5lbGVtZW50cy5lbWl0KHRoaXMuX2VsZW1lbnRzKTtcblxuICAgICAgdGhpcy5zdGF0ZSA9ICdyZWFkeSc7XG4gICAgfVxuICB9XG59XG4iXX0=